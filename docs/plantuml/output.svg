<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2789.25px" preserveAspectRatio="none" style="width:2372px;height:2789px;" version="1.1" viewBox="0 0 2372 2789" width="2372.25px" zoomAndPan="magnify"><defs><filter height="300%" id="fzn1o0yupypxn" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="1.5"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="3.0" dy="3.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[e9ba85cafc27c3104f22153dfafd63f3]
cluster piece_points--><rect fill="#FFFFFF" filter="url(#fzn1o0yupypxn)" height="555" style="stroke: #000000; stroke-width: 1.125;" width="341.25" x="742.5" y="494.25"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="74.25" x="876" y="505.4963">piece_points</text><!--MD5=[57fb690a8f0f6f6f9326c85dd49a3f02]
cluster moveselection--><rect fill="#FFFFFF" filter="url(#fzn1o0yupypxn)" height="554.25" style="stroke: #000000; stroke-width: 1.125;" width="1842.75" x="521.25" y="1067.25"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="86.25" x="1399.5" y="1078.4963">moveselection</text><!--MD5=[9e09a7f22b8fe26d4586a9b121620d7c]
cluster moves--><rect fill="#FFFFFF" filter="url(#fzn1o0yupypxn)" height="458.25" style="stroke: #000000; stroke-width: 1.125;" width="1010.25" x="74.625" y="18"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="39" x="560.25" y="29.2463">moves</text><!--MD5=[2691a3f2d257028f77dc83e11cbc203d]
cluster jsonio--><rect fill="#FFFFFF" filter="url(#fzn1o0yupypxn)" height="198.75" style="stroke: #000000; stroke-width: 1.125;" width="342" x="742.125" y="1639.5"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="35.25" x="895.5" y="1650.7463">jsonio</text><!--MD5=[9850fb667b8b2735e7a247a82bf473cf]
cluster gameboard--><rect fill="#FFFFFF" filter="url(#fzn1o0yupypxn)" height="645.75" style="stroke: #000000; stroke-width: 1.125;" width="813" x="753" y="2135.25"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="66.75" x="1126.125" y="2146.4963">gameboard</text><!--MD5=[c5ccf4f49ce8f8c55bdf02abb17b292f]
cluster boardstate--><rect fill="#FFFFFF" filter="url(#fzn1o0yupypxn)" height="261" style="stroke: #000000; stroke-width: 1.125;" width="924" x="743.25" y="1856.25"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="64.5" x="1173" y="1867.4963">boardstate</text><!--MD5=[6901d676035b2b0302c0b28fe520d289]
class piece_points.BPOPointsEKeys--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="141.6387" id="piece_points.BPOPointsEKeys" style="stroke: #A80036; stroke-width: 1.125;" width="317.25" x="754.5" y="520.875"/><ellipse cx="872.4375" cy="532.875" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M874.6641,537.1055 Q874.2305,537.3281 873.75,537.4336 Q873.2695,537.5508 872.7422,537.5508 Q870.8672,537.5508 869.8711,536.3203 Q868.8867,535.0781 868.8867,532.7344 Q868.8867,530.3906 869.8711,529.1484 Q870.8672,527.9063 872.7422,527.9063 Q873.2695,527.9063 873.75,528.0234 Q874.2422,528.1406 874.6641,528.3633 L874.6641,530.4023 Q874.1953,529.9688 873.75,529.7695 Q873.3047,529.5586 872.8359,529.5586 Q871.8281,529.5586 871.3125,530.3672 Q870.7969,531.1641 870.7969,532.7344 Q870.7969,534.3047 871.3125,535.1133 Q871.8281,535.9102 872.8359,535.9102 Q873.3047,535.9102 873.75,535.7109 Q874.1953,535.5 874.6641,535.0664 L874.6641,537.1055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="75" x="887.8125" y="535.9907">BPOPointsEKeys</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="755.25" x2="1071" y1="544.875" y2="544.875"/><ellipse cx="762.75" cy="553.125" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="140.25" x="769.5" y="555.5328">black_base_ : TeamBasePoints_t</text><ellipse cx="762.75" cy="562.7285" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="167.25" x="769.5" y="565.1364">red_base_offsets_ : TeamBasePoints_t</text><ellipse cx="762.75" cy="572.332" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="153.75" x="769.5" y="574.7399">black_position_ : TeamPointsEMap_t</text><ellipse cx="762.75" cy="581.9355" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="180.75" x="769.5" y="584.3434">red_position_offsets_ : TeamPointsEMap_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="755.25" x2="1071" y1="589.2891" y2="589.2891"/><ellipse cx="762.75" cy="597.5391" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="231" x="769.5" y="599.9469">BPOPointsEKeys(TeamBasePoints_t black_base_input,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="769.5" y="609.5504">TeamBasePoints_t red_base_offsets_input, TeamPointsEMap_t black_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="264" x="769.5" y="619.1539">position_input, TeamPointsEMap_t red_position_offsets_input)</text><ellipse cx="762.75" cy="626.3496" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="208.5" x="769.5" y="628.7574">BPOPointsEKeys(BPOPointsSKeys external_spec)</text><ellipse cx="762.75" cy="635.9531" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="769.5" y="638.361">ToGamePointsArray() : GamePointsArray_t</text><ellipse cx="762.75" cy="645.5566" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="158.25" x="769.5" y="647.9645">BlackNetPoints() : TeamPointsArray_t</text><ellipse cx="762.75" cy="655.1602" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="151.5" x="769.5" y="657.568">RedNetPoints() : TeamPointsArray_t</text><!--MD5=[500b4e4217a03909692b08bfe5a8398d]
class piece_points.BPOPointsSKeys--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="170.4492" id="piece_points.BPOPointsSKeys" style="stroke: #A80036; stroke-width: 1.125;" width="317.25" x="754.5" y="688.875"/><ellipse cx="872.4375" cy="700.875" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M874.6641,705.1055 Q874.2305,705.3281 873.75,705.4336 Q873.2695,705.5508 872.7422,705.5508 Q870.8672,705.5508 869.8711,704.3203 Q868.8867,703.0781 868.8867,700.7344 Q868.8867,698.3906 869.8711,697.1484 Q870.8672,695.9063 872.7422,695.9063 Q873.2695,695.9063 873.75,696.0234 Q874.2422,696.1406 874.6641,696.3633 L874.6641,698.4023 Q874.1953,697.9688 873.75,697.7695 Q873.3047,697.5586 872.8359,697.5586 Q871.8281,697.5586 871.3125,698.3672 Q870.7969,699.1641 870.7969,700.7344 Q870.7969,702.3047 871.3125,703.1133 Q871.8281,703.9102 872.8359,703.9102 Q873.3047,703.9102 873.75,703.7109 Q874.1953,703.5 874.6641,703.0664 L874.6641,705.1055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="75" x="887.8125" y="703.9907">BPOPointsSKeys</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="755.25" x2="1071" y1="712.875" y2="712.875"/><ellipse cx="762.75" cy="721.125" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="139.5" x="769.5" y="723.5328">black_base_ : BasePointsSMap_t</text><ellipse cx="762.75" cy="730.7285" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="166.5" x="769.5" y="733.1364">red_base_offsets_ : BasePointsSMap_t</text><ellipse cx="762.75" cy="740.332" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="154.5" x="769.5" y="742.7399">black_position_ : TeamPointsSMap_t</text><ellipse cx="762.75" cy="749.9355" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="769.5" y="752.3434">red_position_offsets_ : TeamPointsSMap_t</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="760.5" y="757.2891"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="287.25" x="769.5" y="761.9469">json_utility_ : unique_ptr&lt;JsonUtility&lt;jsonio::NlohmannJsonUtility&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="755.25" x2="1071" y1="766.8926" y2="766.8926"/><ellipse cx="762.75" cy="775.1426" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="76.5" x="769.5" y="777.5504">BPOPointsSKeys()</text><ellipse cx="762.75" cy="784.7461" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="231" x="769.5" y="787.1539">BPOPointsSKeys(BasePointsSMap_t black_base_input,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="769.5" y="796.7574">BasePointsSMap_t red_base_offsets_input, TeamPointsSMap_t black_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="264.75" x="769.5" y="806.361">position_input, TeamPointsSMap_t red_position_offsets_input)</text><ellipse cx="762.75" cy="813.5566" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="196.5" x="769.5" y="815.9645">BPOPointsSKeys(const string&amp; json_file_path)</text><ellipse cx="762.75" cy="823.1602" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="165" x="769.5" y="825.568">ToBPOPointsEKeys() : BPOPointsEKeys</text><ellipse cx="762.75" cy="832.7637" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="769.5" y="835.1715">ToGamePointsArray() : GamePointsArray_t</text><ellipse cx="762.75" cy="842.3672" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="184.5" x="769.5" y="844.775">ToGamePointsSmap() : GamePointsSMap_t</text><ellipse cx="762.75" cy="851.9707" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="135" x="769.5" y="854.3785">ToFile(string output_path) : void</text><!--MD5=[6799c1d4a4ce0a43d505c5e981423885]
class piece_points.PiecePositionPoints--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="151.2422" id="piece_points.PiecePositionPoints" style="stroke: #A80036; stroke-width: 1.125;" width="300.75" x="762.75" y="885.75"/><ellipse cx="863.8125" cy="897.75" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M866.0391,901.9805 Q865.6055,902.2031 865.125,902.3086 Q864.6445,902.4258 864.1172,902.4258 Q862.2422,902.4258 861.2461,901.1953 Q860.2617,899.9531 860.2617,897.6094 Q860.2617,895.2656 861.2461,894.0234 Q862.2422,892.7813 864.1172,892.7813 Q864.6445,892.7813 865.125,892.8984 Q865.6172,893.0156 866.0391,893.2383 L866.0391,895.2773 Q865.5703,894.8438 865.125,894.6445 Q864.6797,894.4336 864.2109,894.4336 Q863.2031,894.4336 862.6875,895.2422 Q862.1719,896.0391 862.1719,897.6094 Q862.1719,899.1797 862.6875,899.9883 Q863.2031,900.7852 864.2109,900.7852 Q864.6797,900.7852 865.125,900.5859 Q865.5703,900.375 866.0391,899.9414 L866.0391,901.9805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="92.25" x="879.1875" y="900.8657">PiecePositionPoints</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="763.5" x2="1062.75" y1="909.75" y2="909.75"/><ellipse cx="771" cy="918" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="144" x="777.75" y="920.4078">points_array : GamePointsArray_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="763.5" x2="1062.75" y1="925.3535" y2="925.3535"/><ellipse cx="771" cy="933.6035" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="88.5" x="777.75" y="936.0114">PiecePositionPoints()</text><ellipse cx="771" cy="943.207" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="255" x="777.75" y="945.6149">PiecePositionPoints(GamePointsArray_t game_points_array)</text><ellipse cx="771" cy="952.8105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="244.5" x="777.75" y="955.2184">PiecePositionPoints(BPOPointsEKeys&amp; bpo_points_ekeys)</text><ellipse cx="771" cy="962.4141" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="245.25" x="777.75" y="964.8219">PiecePositionPoints(BPOPointsSKeys&amp; bpo_points_skeys)</text><ellipse cx="771" cy="972.0176" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="151.5" x="777.75" y="974.4254">PiecePositionPoints(string json_file)</text><ellipse cx="771" cy="981.6211" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="176.25" x="777.75" y="984.0289">PointsArraytoEMap() : GamePointsEMap_t</text><ellipse cx="771" cy="991.2246" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="777.75" y="993.6324">PointsArrayToSmap() : GamePointsSMap_t</text><ellipse cx="771" cy="1000.8281" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="278.25" x="777.75" y="1003.236">ImplementGetValueOfPieceAtPosition(PieceColor color, PieceType</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="177" x="777.75" y="1012.8395">piece_type, BoardSpace space) : Points_t</text><ellipse cx="771" cy="1020.0352" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="249.75" x="777.75" y="1022.443">TeamPointsArrayToEMap(TeamPointsArray_t team_array) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="80.25" x="777.75" y="1032.0465">TeamPointsEMap_t</text><!--MD5=[d42577dd64189f8caa2c7295600b1992]
class moveselection.MinimaxMoveEvaluator--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="324.1055" id="moveselection.MinimaxMoveEvaluator" style="stroke: #A80036; stroke-width: 1.125;" width="759.75" x="533.25" y="1093.5"/><ellipse cx="544.5" cy="1105.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M546.7266,1109.7305 Q546.293,1109.9531 545.8125,1110.0586 Q545.332,1110.1758 544.8047,1110.1758 Q542.9297,1110.1758 541.9336,1108.9453 Q540.9492,1107.7031 540.9492,1105.3594 Q540.9492,1103.0156 541.9336,1101.7734 Q542.9297,1100.5313 544.8047,1100.5313 Q545.332,1100.5313 545.8125,1100.6484 Q546.3047,1100.7656 546.7266,1100.9883 L546.7266,1103.0273 Q546.2578,1102.5938 545.8125,1102.3945 Q545.3672,1102.1836 544.8984,1102.1836 Q543.8906,1102.1836 543.375,1102.9922 Q542.8594,1103.7891 542.8594,1105.3594 Q542.8594,1106.9297 543.375,1107.7383 Q543.8906,1108.5352 544.8984,1108.5352 Q545.3672,1108.5352 545.8125,1108.3359 Q546.2578,1108.125 546.7266,1107.6914 L546.7266,1109.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="105" x="555" y="1108.6157">MinimaxMoveEvaluator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="629.25" x="666" y="1091.25"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="627.75" x="666.75" y="1100.354">template&lt;typename ConcreteSpaceInfoProvider, typename ConcreteBoardStateSummarizer, typename ConcretePieceValueProvider&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="534" x2="1292.25" y1="1117.5" y2="1117.5"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1123.5"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="218.25" x="548.25" y="1128.1578">hash_calculator_ : ConcreteBoardStateSummarizer</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1133.1035"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="225.75" x="548.25" y="1137.7614">game_position_points_ : ConcretePieceValueProvider</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1142.707"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="189.75" x="548.25" y="1147.3649">game_board_ : ConcreteSpaceInfoProvider&amp;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1152.3105"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="132.75" x="548.25" y="1156.9684">evaluating_player_ : PieceColor</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1161.9141"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="118.5" x="548.25" y="1166.5719">num_move_selections_ : int</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1171.5176"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="119.25" x="548.25" y="1176.1754">starting_search_depth_ : int</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1181.1211"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="243" x="548.25" y="1185.7789">search_summaries_ : moveselection::SearchSummaries</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="534" x2="1292.25" y1="1190.7246" y2="1190.7246"/><ellipse cx="541.5" cy="1198.9746" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="278.25" x="548.25" y="1201.3824">MinimaxMoveEvaluator(PieceColor evaluating_player, int starting_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="246" x="548.25" y="1210.986">search_depth, ConcreteSpaceInfoProvider&amp; game_board,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="218.25" x="548.25" y="1220.5895">ConcretePieceValueProvider game_position_points)</text><ellipse cx="541.5" cy="1227.7852" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="278.25" x="548.25" y="1230.193">MinimaxMoveEvaluator(PieceColor evaluating_player, int starting_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="246" x="548.25" y="1239.7965">search_depth, ConcreteSpaceInfoProvider&amp; game_board)</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1244.7422"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294.75" x="548.25" y="1249.4">EvaluateEndOfGameLeaf(PieceColor cur_player, MinimaxResultType&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="105.75" x="548.25" y="1259.0035">result_type) : BestMoves</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1263.9492"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="238.5" x="548.25" y="1268.6071">EvaluateNonWinLeaf(PieceColor cur_player) : BestMoves</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1273.5527"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="255" x="548.25" y="1278.2106">MinimaxRec(int remaining_search_depth, int alpha, int beta,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="287.25" x="548.25" y="1287.8141">PieceColor cur_player, SearchSummary&amp; single_search_summary,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="548.25" y="1297.4176">bool use_transposition_table) : BestMoves</text><ellipse cx="541.5" cy="1304.6133" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="129.75" x="548.25" y="1307.0211">ImplementSelectMove() : Move</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1311.9668"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="286.5" x="548.25" y="1316.6246">RunMinimax(SearchSummary&amp; single_search_summary, bool use_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="115.5" x="548.25" y="1326.2281">transposition_table) : Move</text><ellipse cx="541.5" cy="1333.4238" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="180" x="548.25" y="1335.8317">GetPlayerTotal(PieceColor color) : Points_t</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1340.7773"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="284.25" x="548.25" y="1345.4352">GetValueOfPieceAtPosition(PieceColor color, PieceType piece_type,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="126" x="548.25" y="1355.0387">BoardSpace space) : Points_t</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1359.9844"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="247.5" x="548.25" y="1364.6422">RateMove(Move move, PieceColor cur_player) : RatedMove</text><ellipse cx="541.5" cy="1371.8379" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="114" x="548.25" y="1374.2457">StartingSearchDepth() : int</text><ellipse cx="541.5" cy="1381.4414" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="256.5" x="548.25" y="1383.8492">GetSearchSummaries() : moveselection::SearchSummaries</text><ellipse cx="541.5" cy="1391.0449" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="87.75" x="548.25" y="1393.4528">KeySizeBits() : size_t</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="539.25" y="1398.3984"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="300" x="548.25" y="1403.0563">GenerateRankedMoveList(PieceColor cur_player, MoveCollection&amp; cur_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="176.25" x="548.25" y="1412.6598">player_moves) : std::vector&lt;RatedMove&gt;</text><!--MD5=[53418ded990a81522dc1bcdcd9d3e84f]
class moveselection.RandomMoveEvaluator--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="84.0176" id="moveselection.RandomMoveEvaluator" style="stroke: #A80036; stroke-width: 1.125;" width="367.5" x="729.375" y="1443.75"/><ellipse cx="740.625" cy="1455.75" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M742.8516,1459.9805 Q742.418,1460.2031 741.9375,1460.3086 Q741.457,1460.4258 740.9297,1460.4258 Q739.0547,1460.4258 738.0586,1459.1953 Q737.0742,1457.9531 737.0742,1455.6094 Q737.0742,1453.2656 738.0586,1452.0234 Q739.0547,1450.7813 740.9297,1450.7813 Q741.457,1450.7813 741.9375,1450.8984 Q742.4297,1451.0156 742.8516,1451.2383 L742.8516,1453.2773 Q742.3828,1452.8438 741.9375,1452.6445 Q741.4922,1452.4336 741.0234,1452.4336 Q740.0156,1452.4336 739.5,1453.2422 Q738.9844,1454.0391 738.9844,1455.6094 Q738.9844,1457.1797 739.5,1457.9883 Q740.0156,1458.7852 741.0234,1458.7852 Q741.4922,1458.7852 741.9375,1458.5859 Q742.3828,1458.375 742.8516,1457.9414 L742.8516,1459.9805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="106.5" x="751.125" y="1458.8657">RandomMoveEvaluator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="235.5" x="863.625" y="1441.5"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="864.375" y="1450.604">template&lt;typename ConcreteSpaceInfoProvider&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="730.125" x2="1096.125" y1="1467.75" y2="1467.75"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="735.375" y="1473.75"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="189.75" x="744.375" y="1478.4078">game_board_ : ConcreteSpaceInfoProvider&amp;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="735.375" y="1483.3535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="132.75" x="744.375" y="1488.0114">evaluating_player_ : PieceColor</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="730.125" x2="1096.125" y1="1492.957" y2="1492.957"/><ellipse cx="737.625" cy="1501.207" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="224.25" x="744.375" y="1503.6149">RandomMoveEvaluator(PieceColor evaluating_player,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="182.25" x="744.375" y="1513.2184">ConcreteSpaceInfoProvider&amp; game_board)</text><ellipse cx="737.625" cy="1520.4141" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="129.75" x="744.375" y="1522.8219">ImplementSelectMove() : Move</text><!--MD5=[562974923b6c3ebbe7c3eafd5d9337e9]
class moveselection.MinimaxResultType--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="132.0352" id="moveselection.MinimaxResultType" style="stroke: #A80036; stroke-width: 1.125;" width="111.75" x="2151" y="1374.75"/><ellipse cx="2162.25" cy="1386.75" fill="#EB937F" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2165.332,1391.25 L2159.543,1391.25 L2159.543,1381.957 L2165.332,1381.957 L2165.332,1383.5742 L2161.3828,1383.5742 L2161.3828,1385.5781 L2164.957,1385.5781 L2164.957,1387.1953 L2161.3828,1387.1953 L2161.3828,1389.6328 L2165.332,1389.6328 L2165.332,1391.25 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="87.75" x="2172.75" y="1389.8657">MinimaxResultType</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2151.75" x2="2262" y1="1398.75" y2="1398.75"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="52.5" x="2155.5" y="1409.4078">kAlphaPrune</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="48.75" x="2155.5" y="1419.0114">kBetaPrune</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="69.75" x="2155.5" y="1428.6149">kEvaluatorLoses</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="63.75" x="2155.5" y="1438.2184">kEvaluatorWins</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="86.25" x="2155.5" y="1447.8219">kFullyEvaluatedNode</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="21" x="2155.5" y="1457.4254">kMax</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="18.75" x="2155.5" y="1467.0289">kMin</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="61.5" x="2155.5" y="1476.6324">kStandardLeaf</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="48" x="2155.5" y="1486.236">kTrTableHit</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="42.75" x="2155.5" y="1495.8395">kUnknown</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2151.75" x2="2262" y1="1500.7852" y2="1500.7852"/><!--MD5=[2f47a3fa96d2e092f643e35bb9d621e3]
class moveselection.BestMoves--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="55.207" id="moveselection.BestMoves" style="stroke: #A80036; stroke-width: 1.125;" width="177.75" x="2118" y="1293"/><ellipse cx="2178.5625" cy="1305" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2180.7891,1309.2305 Q2180.3555,1309.4531 2179.875,1309.5586 Q2179.3945,1309.6758 2178.8672,1309.6758 Q2176.9922,1309.6758 2175.9961,1308.4453 Q2175.0117,1307.2031 2175.0117,1304.8594 Q2175.0117,1302.5156 2175.9961,1301.2734 Q2176.9922,1300.0313 2178.8672,1300.0313 Q2179.3945,1300.0313 2179.875,1300.1484 Q2180.3672,1300.2656 2180.7891,1300.4883 L2180.7891,1302.5273 Q2180.3203,1302.0938 2179.875,1301.8945 Q2179.4297,1301.6836 2178.9609,1301.6836 Q2177.9531,1301.6836 2177.4375,1302.4922 Q2176.9219,1303.2891 2176.9219,1304.8594 Q2176.9219,1306.4297 2177.4375,1307.2383 Q2177.9531,1308.0352 2178.9609,1308.0352 Q2179.4297,1308.0352 2179.875,1307.8359 Q2180.3203,1307.625 2180.7891,1307.1914 L2180.7891,1309.2305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="50.25" x="2193.9375" y="1308.1157">BestMoves</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2118.75" x2="2295" y1="1317" y2="1317"/><ellipse cx="2126.25" cy="1325.25" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="83.25" x="2133" y="1327.6578">best_eval : Points_t</text><ellipse cx="2126.25" cy="1334.8535" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="158.25" x="2133" y="1337.2614">best_moves : moves::MoveCollection</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2118.75" x2="2295" y1="1342.207" y2="1342.207"/><!--MD5=[a7423fcfc7b3128ab8c6504c6cdf0bbf]
class moveselection.RatedMove--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="55.207" id="moveselection.RatedMove" style="stroke: #A80036; stroke-width: 1.125;" width="108" x="859.125" y="1554"/><ellipse cx="884.8875" cy="1566" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M887.1141,1570.2305 Q886.6805,1570.4531 886.2,1570.5586 Q885.7195,1570.6758 885.1922,1570.6758 Q883.3172,1570.6758 882.3211,1569.4453 Q881.3367,1568.2031 881.3367,1565.8594 Q881.3367,1563.5156 882.3211,1562.2734 Q883.3172,1561.0313 885.1922,1561.0313 Q885.7195,1561.0313 886.2,1561.1484 Q886.6922,1561.2656 887.1141,1561.4883 L887.1141,1563.5273 Q886.6453,1563.0938 886.2,1562.8945 Q885.7547,1562.6836 885.2859,1562.6836 Q884.2781,1562.6836 883.7625,1563.4922 Q883.2469,1564.2891 883.2469,1565.8594 Q883.2469,1567.4297 883.7625,1568.2383 Q884.2781,1569.0352 885.2859,1569.0352 Q885.7547,1569.0352 886.2,1568.8359 Q886.6453,1568.625 887.1141,1568.1914 L887.1141,1570.2305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="51.75" x="898.6125" y="1569.1157">RatedMove</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="859.875" x2="966.375" y1="1578" y2="1578"/><ellipse cx="867.375" cy="1586.25" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="67.5" x="874.125" y="1588.6578">rating : Points_t</text><ellipse cx="867.375" cy="1595.8535" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="88.5" x="874.125" y="1598.2614">move : moves::Move</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="859.875" x2="966.375" y1="1603.207" y2="1603.207"/><!--MD5=[74db69bfb125bb6f0246bbfe285f8702]
class moveselection.ResultDepthCounts--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="64.8105" id="moveselection.ResultDepthCounts" style="stroke: #A80036; stroke-width: 1.125;" width="290.25" x="2061.75" y="1202.25"/><ellipse cx="2158.3125" cy="1214.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2160.5391,1218.4805 Q2160.1055,1218.7031 2159.625,1218.8086 Q2159.1445,1218.9258 2158.6172,1218.9258 Q2156.7422,1218.9258 2155.7461,1217.6953 Q2154.7617,1216.4531 2154.7617,1214.1094 Q2154.7617,1211.7656 2155.7461,1210.5234 Q2156.7422,1209.2813 2158.6172,1209.2813 Q2159.1445,1209.2813 2159.625,1209.3984 Q2160.1172,1209.5156 2160.5391,1209.7383 L2160.5391,1211.7773 Q2160.0703,1211.3438 2159.625,1211.1445 Q2159.1797,1210.9336 2158.7109,1210.9336 Q2157.7031,1210.9336 2157.1875,1211.7422 Q2156.6719,1212.5391 2156.6719,1214.1094 Q2156.6719,1215.6797 2157.1875,1216.4883 Q2157.7031,1217.2852 2158.7109,1217.2852 Q2159.1797,1217.2852 2159.625,1217.0859 Q2160.0703,1216.875 2160.5391,1216.4414 L2160.5391,1218.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="90.75" x="2173.6875" y="1217.3657">ResultDepthCounts</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2062.5" x2="2351.25" y1="1226.25" y2="1226.25"/><ellipse cx="2070" cy="1234.5" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="156.75" x="2076.75" y="1236.9078">data : std::vector&lt;std::vector&lt;int&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2062.5" x2="2351.25" y1="1241.8535" y2="1241.8535"/><ellipse cx="2070" cy="1250.1035" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="180.75" x="2076.75" y="1252.5114">ResultDepthCounts(int max_search_depth)</text><ellipse cx="2070" cy="1259.707" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="270.75" x="2076.75" y="1262.1149">Update(MinimaxResultType result_type, int search_depth) : void</text><!--MD5=[2b0b92ad818ce0190ddd251c55b4b0ae]
class moveselection.SearchSummaries--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="84.0176" id="moveselection.SearchSummaries" style="stroke: #A80036; stroke-width: 1.125;" width="261.75" x="1365.75" y="1213.5"/><ellipse cx="1451.0625" cy="1225.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1453.2891,1229.7305 Q1452.8555,1229.9531 1452.375,1230.0586 Q1451.8945,1230.1758 1451.3672,1230.1758 Q1449.4922,1230.1758 1448.4961,1228.9453 Q1447.5117,1227.7031 1447.5117,1225.3594 Q1447.5117,1223.0156 1448.4961,1221.7734 Q1449.4922,1220.5313 1451.3672,1220.5313 Q1451.8945,1220.5313 1452.375,1220.6484 Q1452.8672,1220.7656 1453.2891,1220.9883 L1453.2891,1223.0273 Q1452.8203,1222.5938 1452.375,1222.3945 Q1451.9297,1222.1836 1451.4609,1222.1836 Q1450.4531,1222.1836 1449.9375,1222.9922 Q1449.4219,1223.7891 1449.4219,1225.3594 Q1449.4219,1226.9297 1449.9375,1227.7383 Q1450.4531,1228.5352 1451.4609,1228.5352 Q1451.9297,1228.5352 1452.375,1228.3359 Q1452.8203,1228.125 1453.2891,1227.6914 L1453.2891,1229.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="84.75" x="1466.4375" y="1228.6157">SearchSummaries</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1366.5" x2="1626.75" y1="1237.5" y2="1237.5"/><ellipse cx="1374" cy="1245.75" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="214.5" x="1380.75" y="1248.1578">extra_searches : std::map&lt;int, SearchSummary&gt;</text><ellipse cx="1374" cy="1255.3535" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="201" x="1380.75" y="1257.7614">first_searches : std::vector&lt;SearchSummary&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1366.5" x2="1626.75" y1="1262.707" y2="1262.707"/><ellipse cx="1374" cy="1270.957" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="239.25" x="1380.75" y="1273.3649">NewExtraSearch(int search_depth, int search_number) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="78.75" x="1380.75" y="1282.9684">SearchSummary&amp;</text><ellipse cx="1374" cy="1290.1641" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="231.75" x="1380.75" y="1292.5719">NewFirstSearch(int search_depth) : SearchSummary&amp;</text><!--MD5=[df347c09664eb09d7b34aeec97a1d1ad]
class moveselection.SearchSummary--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="199.2598" id="moveselection.SearchSummary" style="stroke: #A80036; stroke-width: 1.125;" width="316.5" x="1700.25" y="1155.75"/><ellipse cx="1817.4375" cy="1167.75" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1819.6641,1171.9805 Q1819.2305,1172.2031 1818.75,1172.3086 Q1818.2695,1172.4258 1817.7422,1172.4258 Q1815.8672,1172.4258 1814.8711,1171.1953 Q1813.8867,1169.9531 1813.8867,1167.6094 Q1813.8867,1165.2656 1814.8711,1164.0234 Q1815.8672,1162.7813 1817.7422,1162.7813 Q1818.2695,1162.7813 1818.75,1162.8984 Q1819.2422,1163.0156 1819.6641,1163.2383 L1819.6641,1165.2773 Q1819.1953,1164.8438 1818.75,1164.6445 Q1818.3047,1164.4336 1817.8359,1164.4336 Q1816.8281,1164.4336 1816.3125,1165.2422 Q1815.7969,1166.0391 1815.7969,1167.6094 Q1815.7969,1169.1797 1816.3125,1169.9883 Q1816.8281,1170.7852 1817.8359,1170.7852 Q1818.3047,1170.7852 1818.75,1170.5859 Q1819.1953,1170.375 1819.6641,1169.9414 L1819.6641,1171.9805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="75.75" x="1832.8125" y="1170.8657">SearchSummary</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1701" x2="2016" y1="1179.75" y2="1179.75"/><ellipse cx="1708.5" cy="1188" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="107.25" x="1715.25" y="1190.4078">best_moves : BestMoves</text><ellipse cx="1708.5" cy="1197.6035" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="176.25" x="1715.25" y="1200.0114">result_depth_counts : ResultDepthCounts</text><ellipse cx="1708.5" cy="1207.207" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="192" x="1715.25" y="1209.6149">transposition_table_hits : ResultDepthCounts</text><ellipse cx="1708.5" cy="1216.8105" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="69" x="1715.25" y="1219.2184">num_nodes : int</text><ellipse cx="1708.5" cy="1226.4141" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="129" x="1715.25" y="1228.8219">selected_move : moves::Move</text><ellipse cx="1708.5" cy="1236.0176" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="206.25" x="1715.25" y="1238.4254">time : std::chrono::duration&lt;double, std::nano&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1701" x2="2016" y1="1243.3711" y2="1243.3711"/><ellipse cx="1708.5" cy="1251.6211" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="171" x="1715.25" y="1254.0289">SearchSummary(int max_search_depth)</text><ellipse cx="1708.5" cy="1261.2246" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="240" x="1715.25" y="1263.6324">GetResultDepthCounts() : std::vector&lt;std::vector&lt;int&gt;&gt;</text><ellipse cx="1708.5" cy="1270.8281" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="257.25" x="1715.25" y="1273.236">GetTranspositionTableHits() : std::vector&lt;std::vector&lt;int&gt;&gt;</text><ellipse cx="1708.5" cy="1280.4316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="194.25" x="1715.25" y="1282.8395">SetBestMoves(BestMoves best_moves) : void</text><ellipse cx="1708.5" cy="1290.0352" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="228" x="1715.25" y="1292.443">SetSelectedMove(moves::Move selected_move) : void</text><ellipse cx="1708.5" cy="1299.6387" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="281.25" x="1715.25" y="1302.0465">SetTime(std::chrono::duration&lt;double, std::nano&gt; search_time) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="1715.25" y="1311.65">void</text><ellipse cx="1708.5" cy="1318.8457" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294" x="1715.25" y="1321.2535">Update(MinimaxResultType result_type, int search_depth, BestMoves</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="81" x="1715.25" y="1330.8571">best_moves) : void</text><ellipse cx="1708.5" cy="1338.0527" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="279" x="1715.25" y="1340.4606">UpdateTranspositionTableHits(MinimaxResultType result_type, int</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="87" x="1715.25" y="1350.0641">search_depth) : void</text><!--MD5=[059d53914da52dfcc9d66d1f8852293f]
class moveselection.TranspositionTableEntry--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="74.4141" id="moveselection.TranspositionTableEntry" style="stroke: #A80036; stroke-width: 1.125;" width="156.75" x="1780.125" y="1393.125"/><ellipse cx="1800.15" cy="1405.125" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1802.3766,1409.3555 Q1801.943,1409.5781 1801.4625,1409.6836 Q1800.982,1409.8008 1800.4547,1409.8008 Q1798.5797,1409.8008 1797.5836,1408.5703 Q1796.5992,1407.3281 1796.5992,1404.9844 Q1796.5992,1402.6406 1797.5836,1401.3984 Q1798.5797,1400.1563 1800.4547,1400.1563 Q1800.982,1400.1563 1801.4625,1400.2734 Q1801.9547,1400.3906 1802.3766,1400.6133 L1802.3766,1402.6523 Q1801.9078,1402.2188 1801.4625,1402.0195 Q1801.0172,1401.8086 1800.5484,1401.8086 Q1799.5406,1401.8086 1799.025,1402.6172 Q1798.5094,1403.4141 1798.5094,1404.9844 Q1798.5094,1406.5547 1799.025,1407.3633 Q1799.5406,1408.1602 1800.5484,1408.1602 Q1801.0172,1408.1602 1801.4625,1407.9609 Q1801.9078,1407.75 1802.3766,1407.3164 L1802.3766,1409.3555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="113.25" x="1812.6" y="1408.2407">TranspositionTableEntry</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1780.875" x2="1936.125" y1="1417.125" y2="1417.125"/><ellipse cx="1788.375" cy="1425.375" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="107.25" x="1795.125" y="1427.7828">best_moves : BestMoves</text><ellipse cx="1788.375" cy="1434.9785" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="137.25" x="1795.125" y="1437.3864">result_type : MinimaxResultType</text><ellipse cx="1788.375" cy="1444.582" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="124.5" x="1795.125" y="1446.9899">remaining_search_depth : int</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1780.875" x2="1936.125" y1="1451.9355" y2="1451.9355"/><ellipse cx="1788.375" cy="1460.1855" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="73.5" x="1795.125" y="1462.5934">Score() : Points_t</text><!--MD5=[3addaae3bac3efbb4364c4812869509d]
class moveselection.TranspositionTableSearchResult--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="55.207" id="moveselection.TranspositionTableSearchResult" style="stroke: #A80036; stroke-width: 1.125;" width="179.25" x="1407" y="1402.5"/><ellipse cx="1419.9375" cy="1414.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1422.1641,1418.7305 Q1421.7305,1418.9531 1421.25,1419.0586 Q1420.7695,1419.1758 1420.2422,1419.1758 Q1418.3672,1419.1758 1417.3711,1417.9453 Q1416.3867,1416.7031 1416.3867,1414.3594 Q1416.3867,1412.0156 1417.3711,1410.7734 Q1418.3672,1409.5313 1420.2422,1409.5313 Q1420.7695,1409.5313 1421.25,1409.6484 Q1421.7422,1409.7656 1422.1641,1409.9883 L1422.1641,1412.0273 Q1421.6953,1411.5938 1421.25,1411.3945 Q1420.8047,1411.1836 1420.3359,1411.1836 Q1419.3281,1411.1836 1418.8125,1411.9922 Q1418.2969,1412.7891 1418.2969,1414.3594 Q1418.2969,1415.9297 1418.8125,1416.7383 Q1419.3281,1417.5352 1420.3359,1417.5352 Q1420.8047,1417.5352 1421.25,1417.3359 Q1421.6953,1417.125 1422.1641,1416.6914 L1422.1641,1418.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="151.5" x="1430.8125" y="1417.6157">TranspositionTableSearchResult</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1407.75" x2="1585.5" y1="1426.5" y2="1426.5"/><ellipse cx="1415.25" cy="1434.75" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="159.75" x="1422" y="1437.1578">table_entry : TranspositionTableEntry</text><ellipse cx="1415.25" cy="1444.3535" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="51" x="1422" y="1446.7614">found : bool</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1407.75" x2="1585.5" y1="1451.707" y2="1451.707"/><!--MD5=[45a8191dc8250cb485a6babb8f4cfeb3]
class moves.MoveCalculator--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="160.8457" id="moves.MoveCalculator" style="stroke: #A80036; stroke-width: 1.125;" width="319.5" x="86.625" y="44.25"/><ellipse cx="207.5625" cy="56.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M209.7891,60.4805 Q209.3555,60.7031 208.875,60.8086 Q208.3945,60.9258 207.8672,60.9258 Q205.9922,60.9258 204.9961,59.6953 Q204.0117,58.4531 204.0117,56.1094 Q204.0117,53.7656 204.9961,52.5234 Q205.9922,51.2813 207.8672,51.2813 Q208.3945,51.2813 208.875,51.3984 Q209.3672,51.5156 209.7891,51.7383 L209.7891,53.7773 Q209.3203,53.3438 208.875,53.1445 Q208.4297,52.9336 207.9609,52.9336 Q206.9531,52.9336 206.4375,53.7422 Q205.9219,54.5391 205.9219,56.1094 Q205.9219,57.6797 206.4375,58.4883 Q206.9531,59.2852 207.9609,59.2852 Q208.4297,59.2852 208.875,59.0859 Q209.3203,58.875 209.7891,58.4414 L209.7891,60.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="71.25" x="222.9375" y="59.3657">MoveCalculator</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="87.375" x2="405.375" y1="68.25" y2="68.25"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="92.625" y="74.25"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="192.75" x="101.625" y="78.9078">piece_dispatch_array_ : PieceDispatchArray_t</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="92.625" y="83.8535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="118.5" x="101.625" y="88.5114">piece_moves_ : PieceMoves</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="87.375" x2="405.375" y1="93.457" y2="93.457"/><ellipse cx="94.875" cy="101.707" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="70.5" x="101.625" y="104.1149">MoveCalculator()</text><ellipse cx="94.875" cy="111.3105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="300" x="101.625" y="113.7184">CalcAllMovesNoCheckTest(PieceColor color, const BoardMap_t&amp; board</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="98.25" x="101.625" y="123.3219">_map) : MoveCollection</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="92.625" y="128.2676"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="256.5" x="101.625" y="132.9254">ImplementCalcAllMovesNoCheckTest(PieceColor color, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="183.75" x="101.625" y="142.5289">BoardMap_t&amp; board_map) : MoveCollection</text><ellipse cx="94.875" cy="149.7246" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="276" x="101.625" y="152.1324">IsOccupied(const BoardMap_t&amp; board_map, const BoardSpace&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="55.5" x="101.625" y="161.736">space) : bool</text><ellipse cx="94.875" cy="168.9316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="282" x="101.625" y="171.3395">CalcMovesFrom(const BoardSpace space, MoveCollection&amp; team_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="198.75" x="101.625" y="180.943">moves, const BoardMap_t&amp; board_map) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="92.625" y="185.8887"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="101.625" y="190.5465">ImplementCalcMovesFrom(const BoardSpace space, MoveCollection&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="225" x="101.625" y="200.15">team_moves, const BoardMap_t&amp; board_map) : void</text><!--MD5=[e09ef7f0d9f6892a19d6da85faf87753]
class moves.PieceMoves--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="247.2773" id="moves.PieceMoves" style="stroke: #A80036; stroke-width: 1.125;" width="319.5" x="753.375" y="44.25"/><ellipse cx="882.5625" cy="56.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M884.7891,60.4805 Q884.3555,60.7031 883.875,60.8086 Q883.3945,60.9258 882.8672,60.9258 Q880.9922,60.9258 879.9961,59.6953 Q879.0117,58.4531 879.0117,56.1094 Q879.0117,53.7656 879.9961,52.5234 Q880.9922,51.2813 882.8672,51.2813 Q883.3945,51.2813 883.875,51.3984 Q884.3672,51.5156 884.7891,51.7383 L884.7891,53.7773 Q884.3203,53.3438 883.875,53.1445 Q883.4297,52.9336 882.9609,52.9336 Q881.9531,52.9336 881.4375,53.7422 Q880.9219,54.5391 880.9219,56.1094 Q880.9219,57.6797 881.4375,58.4883 Q881.9531,59.2852 882.9609,59.2852 Q883.4297,59.2852 883.875,59.0859 Q884.3203,58.875 884.7891,58.4414 L884.7891,60.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="54.75" x="897.9375" y="59.3657">PieceMoves</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="754.125" x2="1072.125" y1="68.25" y2="68.25"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="754.125" x2="1072.125" y1="74.25" y2="74.25"/><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="759.375" y="80.25"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="201" x="768.375" y="84.9078">FwdDirection(PieceColor color) : BoardDirection</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="759.375" y="89.8535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281.25" x="768.375" y="94.5114">ExistsAndPassesColorTest(const BoardMap_t&amp; board_map, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="255" x="768.375" y="104.1149">BoardSpace&amp; space, PieceColor moving_piece_color) : bool</text><ellipse cx="761.625" cy="111.3105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="274.5" x="768.375" y="113.7184">AdvisorMoves(const BoardMap_t&amp; board_map, PieceColor color,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="768.375" y="123.3219">const BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="761.625" cy="130.5176" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="275.25" x="768.375" y="132.9254">CannonMoves(const BoardMap_t&amp; board_map, PieceColor color,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="768.375" y="142.5289">const BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="761.625" cy="149.7246" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="300" x="768.375" y="152.1324">ChariotMoves(const BoardMap_t&amp; board_map, PieceColor color, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="768.375" y="161.736">BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="761.625" cy="168.9316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="279.75" x="768.375" y="171.3395">ElephantMoves(const BoardMap_t&amp; board_map, PieceColor color,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="768.375" y="180.943">const BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="761.625" cy="188.1387" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="295.5" x="768.375" y="190.5465">FlyingGeneralMove(const BoardMap_t&amp; board_map, PieceColor color,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="768.375" y="200.15">const BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="761.625" cy="207.3457" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="276.75" x="768.375" y="209.7535">GeneralMoves(const BoardMap_t&amp; board_map, PieceColor color,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="768.375" y="219.3571">const BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="761.625" cy="226.5527" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294.75" x="768.375" y="228.9606">HorseMoves(const BoardMap_t&amp; board_map, PieceColor color, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="768.375" y="238.5641">BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="761.625" cy="245.7598" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="299.25" x="768.375" y="248.1676">SoldierMoves(const BoardMap_t&amp; board_map, PieceColor color, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="768.375" y="257.7711">BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="761.625" cy="264.9668" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="288.75" x="768.375" y="267.3746">StandardGeneralMoves(const BoardMap_t&amp; board_map, PieceColor</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="284.25" x="768.375" y="276.9781">color, const BoardSpace&amp; space, MoveCollection&amp; team_moves) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="768.375" y="286.5817">void</text><!--MD5=[becc04835beaa858a6ace207e998038a]
class moves.ExecutedMove--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="74.4141" id="moves.ExecutedMove" style="stroke: #A80036; stroke-width: 1.125;" width="214.5" x="139.125" y="231.375"/><ellipse cx="209.4375" cy="243.375" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M211.6641,247.6055 Q211.2305,247.8281 210.75,247.9336 Q210.2695,248.0508 209.7422,248.0508 Q207.8672,248.0508 206.8711,246.8203 Q205.8867,245.5781 205.8867,243.2344 Q205.8867,240.8906 206.8711,239.6484 Q207.8672,238.4063 209.7422,238.4063 Q210.2695,238.4063 210.75,238.5234 Q211.2422,238.6406 211.6641,238.8633 L211.6641,240.9023 Q211.1953,240.4688 210.75,240.2695 Q210.3047,240.0586 209.8359,240.0586 Q208.8281,240.0586 208.3125,240.8672 Q207.7969,241.6641 207.7969,243.2344 Q207.7969,244.8047 208.3125,245.6133 Q208.8281,246.4102 209.8359,246.4102 Q210.3047,246.4102 210.75,246.2109 Q211.1953,246 211.6641,245.5664 L211.6641,247.6055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="67.5" x="224.8125" y="246.4907">ExecutedMove</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="139.875" x2="352.875" y1="255.375" y2="255.375"/><ellipse cx="147.375" cy="263.625" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="61.5" x="154.125" y="266.0328">spaces : Move</text><ellipse cx="147.375" cy="273.2285" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="186" x="154.125" y="275.6364">destination_piece : gameboard::GamePiece</text><ellipse cx="147.375" cy="282.832" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="169.5" x="154.125" y="285.2399">moving_piece : gameboard::GamePiece</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="139.875" x2="352.875" y1="290.1855" y2="290.1855"/><ellipse cx="147.375" cy="298.4355" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="195" x="154.125" y="300.8434">operator==(const ExecutedMove other) : bool</text><!--MD5=[20ba143414f6380c55f2eec4d0f8b11f]
class moves.Move--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="64.8105" id="moves.Move" style="stroke: #A80036; stroke-width: 1.125;" width="176.25" x="825" y="342"/><ellipse cx="897.9375" cy="354" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M900.1641,358.2305 Q899.7305,358.4531 899.25,358.5586 Q898.7695,358.6758 898.2422,358.6758 Q896.3672,358.6758 895.3711,357.4453 Q894.3867,356.2031 894.3867,353.8594 Q894.3867,351.5156 895.3711,350.2734 Q896.3672,349.0313 898.2422,349.0313 Q898.7695,349.0313 899.25,349.1484 Q899.7422,349.2656 900.1641,349.4883 L900.1641,351.5273 Q899.6953,351.0938 899.25,350.8945 Q898.8047,350.6836 898.3359,350.6836 Q897.3281,350.6836 896.8125,351.4922 Q896.2969,352.2891 896.2969,353.8594 Q896.2969,355.4297 896.8125,356.2383 Q897.3281,357.0352 898.3359,357.0352 Q898.8047,357.0352 899.25,356.8359 Q899.6953,356.625 900.1641,356.1914 L900.1641,358.2305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="24" x="913.3125" y="357.1157">Move</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="825.75" x2="1000.5" y1="366" y2="366"/><ellipse cx="833.25" cy="374.25" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="131.25" x="840" y="376.6578">end : gameboard::BoardSpace</text><ellipse cx="833.25" cy="383.8535" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="135.75" x="840" y="386.2614">start : gameboard::BoardSpace</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="825.75" x2="1000.5" y1="391.207" y2="391.207"/><ellipse cx="833.25" cy="399.457" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="156.75" x="840" y="401.8649">operator==(const Move other) : bool</text><!--MD5=[c4e4878414ca7ae74ed2278cff840a10]
class moves.MoveCollection--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="132.0352" id="moves.MoveCollection" style="stroke: #A80036; stroke-width: 1.125;" width="306.75" x="93" y="332.25"/><ellipse cx="208.3125" cy="344.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M210.5391,348.4805 Q210.1055,348.7031 209.625,348.8086 Q209.1445,348.9258 208.6172,348.9258 Q206.7422,348.9258 205.7461,347.6953 Q204.7617,346.4531 204.7617,344.1094 Q204.7617,341.7656 205.7461,340.5234 Q206.7422,339.2813 208.6172,339.2813 Q209.1445,339.2813 209.625,339.3984 Q210.1172,339.5156 210.5391,339.7383 L210.5391,341.7773 Q210.0703,341.3438 209.625,341.1445 Q209.1797,340.9336 208.7109,340.9336 Q207.7031,340.9336 207.1875,341.7422 Q206.6719,342.5391 206.6719,344.1094 Q206.6719,345.6797 207.1875,346.4883 Q207.7031,347.2852 208.7109,347.2852 Q209.1797,347.2852 209.625,347.0859 Q210.0703,346.875 210.5391,346.4414 L210.5391,348.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="69.75" x="223.6875" y="347.3657">MoveCollection</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="93.75" x2="399" y1="356.25" y2="356.25"/><ellipse cx="101.25" cy="364.5" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="99" x="108" y="366.9078">moves : vector&lt;Move&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="93.75" x2="399" y1="371.8535" y2="371.8535"/><ellipse cx="101.25" cy="380.1035" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="69" x="108" y="382.5114">MoveCollection()</text><ellipse cx="101.25" cy="389.707" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="179.25" x="108" y="392.1149">MoveCollection(vector&lt;Move&gt; my_moves)</text><ellipse cx="101.25" cy="399.3105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="150" x="108" y="401.7184">MoveCollection(size_t reserve_size)</text><ellipse cx="101.25" cy="408.9141" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="287.25" x="108" y="411.3219">ContainsDestination(const gameboard::BoardSpace&amp; space) : bool</text><ellipse cx="101.25" cy="418.5176" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="211.5" x="108" y="420.9254">ContainsMove(const Move&amp; move) : bool {query}</text><ellipse cx="101.25" cy="428.1211" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="93.75" x="108" y="430.5289">Size() : size_t {query}</text><ellipse cx="101.25" cy="437.7246" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="111.75" x="108" y="440.1324">Append(Move move) : void</text><ellipse cx="101.25" cy="447.3281" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="108" y="449.736">Concat(vector&lt;Move&gt; other_moves) : void</text><ellipse cx="101.25" cy="456.9316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="150" x="108" y="459.3395">Concat(MoveCollection other) : void</text><!--MD5=[40e3b87112ef1432c9c1a601cdf178e3]
class jsonio.NlohmannJsonUtility--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="160.8457" id="jsonio.NlohmannJsonUtility" style="stroke: #A80036; stroke-width: 1.125;" width="318" x="754.125" y="1665.75"/><ellipse cx="863.8125" cy="1677.75" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M866.0391,1681.9805 Q865.6055,1682.2031 865.125,1682.3086 Q864.6445,1682.4258 864.1172,1682.4258 Q862.2422,1682.4258 861.2461,1681.1953 Q860.2617,1679.9531 860.2617,1677.6094 Q860.2617,1675.2656 861.2461,1674.0234 Q862.2422,1672.7813 864.1172,1672.7813 Q864.6445,1672.7813 865.125,1672.8984 Q865.6172,1673.0156 866.0391,1673.2383 L866.0391,1675.2773 Q865.5703,1674.8438 865.125,1674.6445 Q864.6797,1674.4336 864.2109,1674.4336 Q863.2031,1674.4336 862.6875,1675.2422 Q862.1719,1676.0391 862.1719,1677.6094 Q862.1719,1679.1797 862.6875,1679.9883 Q863.2031,1680.7852 864.2109,1680.7852 Q864.6797,1680.7852 865.125,1680.5859 Q865.5703,1680.375 866.0391,1679.9414 L866.0391,1681.9805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="92.25" x="879.1875" y="1680.8657">NlohmannJsonUtility</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="754.875" x2="1071.375" y1="1689.75" y2="1689.75"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="754.875" x2="1071.375" y1="1695.75" y2="1695.75"/><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="760.125" y="1701.75"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="268.5" x="769.125" y="1706.4078">ImportToSerializedJson(const string file_path) : nlohmann::json</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="760.125" y="1711.3535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="285.75" x="769.125" y="1716.0114">Serialize(piece_points::BPOPointsSKeys&amp; bpo_points) : nlohmann::</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="18" x="769.125" y="1725.6149">json</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="760.125" y="1730.5605"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="246.75" x="769.125" y="1735.2184">Deserialize(nlohmann::json serialized_json, piece_points::</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="156.75" x="769.125" y="1744.8219">BPOPointsSKeys&amp; bpo_points) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="760.125" y="1749.7676"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="298.5" x="769.125" y="1754.4254">ExportSerializedJson(nlohmann::json serialized_json, const string file_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="48" x="769.125" y="1764.0289">path) : void</text><ellipse cx="762.375" cy="1771.2246" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="241.5" x="769.125" y="1773.6324">ImplementExport(T&amp; object, const string file_path) : void</text><ellipse cx="762.375" cy="1780.8281" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="291" x="769.125" y="1783.236">ImplementExport(piece_points::BPOPointsSKeys&amp; bpo_points, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="93" x="769.125" y="1792.8395">string file_path) : void</text><ellipse cx="762.375" cy="1800.0352" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="242.25" x="769.125" y="1802.443">ImplementImport(T&amp; object, const string file_path) : void</text><ellipse cx="762.375" cy="1809.6387" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="291.75" x="769.125" y="1812.0465">ImplementImport(piece_points::BPOPointsSKeys&amp; bpo_points, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="93" x="769.125" y="1821.65">string file_path) : void</text><!--MD5=[f28f77cfb16419dcc61a1beab4a14e38]
class gameboard.GameBoard--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="266.4844" id="gameboard.GameBoard" style="stroke: #A80036; stroke-width: 1.125;" width="293.25" x="766.5" y="2382.375"/><ellipse cx="882.5625" cy="2394.375" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M884.7891,2398.6055 Q884.3555,2398.8281 883.875,2398.9336 Q883.3945,2399.0508 882.8672,2399.0508 Q880.9922,2399.0508 879.9961,2397.8203 Q879.0117,2396.5781 879.0117,2394.2344 Q879.0117,2391.8906 879.9961,2390.6484 Q880.9922,2389.4063 882.8672,2389.4063 Q883.3945,2389.4063 883.875,2389.5234 Q884.3672,2389.6406 884.7891,2389.8633 L884.7891,2391.9023 Q884.3203,2391.4688 883.875,2391.2695 Q883.4297,2391.0586 882.9609,2391.0586 Q881.9531,2391.0586 881.4375,2391.8672 Q880.9219,2392.6641 880.9219,2394.2344 Q880.9219,2395.8047 881.4375,2396.6133 Q881.9531,2397.4102 882.9609,2397.4102 Q883.4297,2397.4102 883.875,2397.2109 Q884.3203,2397 884.7891,2396.5664 L884.7891,2398.6055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="54.75" x="897.9375" y="2397.4907">GameBoard</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="767.25" x2="1059" y1="2406.375" y2="2406.375"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="772.5" y="2412.375"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="111.75" x="781.5" y="2417.0328">board_map_ : BoardMap_t</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="772.5" y="2421.9785"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="147" x="781.5" y="2426.6364">move_calculator_ : MoveCalculator</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="772.5" y="2431.582"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="256.5" x="781.5" y="2436.2399">move_log_ : std::map&lt;PieceColor, vector&lt;ExecutedMove&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="767.25" x2="1059" y1="2441.1855" y2="2441.1855"/><ellipse cx="774.75" cy="2449.4355" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="57" x="781.5" y="2451.8434">GameBoard()</text><ellipse cx="774.75" cy="2459.0391" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="209.25" x="781.5" y="2461.4469">GameBoard(const BoardMapInt_t starting_board)</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="772.5" y="2466.3926"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="156.75" x="781.5" y="2471.0504">vector&lt;function&lt;void(ExecutedMove)</text><ellipse cx="774.75" cy="2478.2461" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="129" x="781.5" y="2480.6539">map() : BoardMap_t&amp; {query}</text><ellipse cx="774.75" cy="2487.8496" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="222.75" x="781.5" y="2490.2574">ImplementExecuteMove(Move move) : ExecutedMove</text><ellipse cx="774.75" cy="2497.4531" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="198" x="781.5" y="2499.861">GetOccupant(BoardSpace space) : GamePiece</text><ellipse cx="774.75" cy="2507.0566" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="266.25" x="781.5" y="2509.4645">ImplementCalcFinalMovesOf(PieceColor color) : MoveCollection</text><ellipse cx="774.75" cy="2516.6602" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="222.75" x="781.5" y="2519.068">ImplementGetColor(BoardSpace space) : PieceColor</text><ellipse cx="774.75" cy="2526.2637" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="218.25" x="781.5" y="2528.6715">ImplementGetType(BoardSpace space) : PieceType</text><ellipse cx="774.75" cy="2535.8672" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="142.5" x="781.5" y="2538.275">IsInCheck(PieceColor color) : bool</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="772.5" y="2543.2207"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="183" x="781.5" y="2547.8785">ViolatesRepeatRule(PieceColor color) : bool</text><ellipse cx="774.75" cy="2555.0742" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="272.25" x="781.5" y="2557.4821">GetMoveLog() : std::map&lt;PieceColor , vector&lt;ExecutedMove&gt;&gt;</text><ellipse cx="774.75" cy="2564.6777" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="267.75" x="781.5" y="2567.0856">ImplementGetAllSpacesOccupiedBy(PieceColor color) : vector&lt;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="58.5" x="781.5" y="2576.6891">BoardSpace&gt;</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="772.5" y="2581.6348"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="224.25" x="781.5" y="2586.2926">AddToMoveLog(ExecutedMove executed_move) : void</text><ellipse cx="774.75" cy="2593.4883" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="270.75" x="781.5" y="2595.8961">ImplementAttachMoveCallback(function&lt;void ( ExecutedMove )&gt;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="63" x="781.5" y="2605.4996">callback) : void</text><ellipse cx="774.75" cy="2612.6953" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="249.75" x="781.5" y="2615.1031">ImplementUndoMove(ExecutedMove executed_move) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="772.5" y="2620.0488"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="253.5" x="781.5" y="2624.7067">RemoveFromMoveLog(ExecutedMove executed_move) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="772.5" y="2629.6523"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="246" x="781.5" y="2634.3102">SetOccupant(BoardSpace space, GamePiece piece) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="772.5" y="2639.2559"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="255.75" x="781.5" y="2643.9137">UpdateHashCalculator(ExecutedMove executed_move) : void</text><!--MD5=[894db610bd19f651f695bc6f5ecfd213]
class gameboard.PieceColor--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="64.8105" id="gameboard.PieceColor" style="stroke: #A80036; stroke-width: 1.125;" width="73.5" x="1459.875" y="2524.5"/><ellipse cx="1471.125" cy="2536.5" fill="#EB937F" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1474.207,2541 L1468.418,2541 L1468.418,2531.707 L1474.207,2531.707 L1474.207,2533.3242 L1470.2578,2533.3242 L1470.2578,2535.3281 L1473.832,2535.3281 L1473.832,2536.9453 L1470.2578,2536.9453 L1470.2578,2539.3828 L1474.207,2539.3828 L1474.207,2541 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="49.5" x="1481.625" y="2539.6157">PieceColor</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1460.625" x2="1532.625" y1="2548.5" y2="2548.5"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="1464.375" y="2559.1578">kBlk</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="18" x="1464.375" y="2568.7614">kNul</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="20.25" x="1464.375" y="2578.3649">kRed</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1460.625" x2="1532.625" y1="2583.3105" y2="2583.3105"/><!--MD5=[2c54a598306e0c6090dffecf0afb8ea3]
class gameboard.PieceType--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="112.8281" id="gameboard.PieceType" style="stroke: #A80036; stroke-width: 1.125;" width="71.25" x="1461" y="2656.5"/><ellipse cx="1472.25" cy="2668.5" fill="#EB937F" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1475.332,2673 L1469.543,2673 L1469.543,2663.707 L1475.332,2663.707 L1475.332,2665.3242 L1471.3828,2665.3242 L1471.3828,2667.3281 L1474.957,2667.3281 L1474.957,2668.9453 L1471.3828,2668.9453 L1471.3828,2671.3828 L1475.332,2671.3828 L1475.332,2673 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="47.25" x="1482.75" y="2671.6157">PieceType</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1461.75" x2="1531.5" y1="2680.5" y2="2680.5"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="19.5" x="1465.5" y="2691.1578">kAdv</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="21" x="1465.5" y="2700.7614">kCan</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="21" x="1465.5" y="2710.3649">kCha</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="1465.5" y="2719.9684">kEle</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="21.75" x="1465.5" y="2729.5719">kGen</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="19.5" x="1465.5" y="2739.1754">kHor</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="21" x="1465.5" y="2748.7789">kNnn</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="18" x="1465.5" y="2758.3824">kSol</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1461.75" x2="1531.5" y1="2763.3281" y2="2763.3281"/><!--MD5=[d21b34556fa46cff55ccea35ba20f53a]
class gameboard.BoardDirection--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="55.207" id="gameboard.BoardDirection" style="stroke: #A80036; stroke-width: 1.125;" width="93.75" x="866.25" y="2300.25"/><ellipse cx="877.5" cy="2312.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M879.7266,2316.4805 Q879.293,2316.7031 878.8125,2316.8086 Q878.332,2316.9258 877.8047,2316.9258 Q875.9297,2316.9258 874.9336,2315.6953 Q873.9492,2314.4531 873.9492,2312.1094 Q873.9492,2309.7656 874.9336,2308.5234 Q875.9297,2307.2813 877.8047,2307.2813 Q878.332,2307.2813 878.8125,2307.3984 Q879.3047,2307.5156 879.7266,2307.7383 L879.7266,2309.7773 Q879.2578,2309.3438 878.8125,2309.1445 Q878.3672,2308.9336 877.8984,2308.9336 Q876.8906,2308.9336 876.375,2309.7422 Q875.8594,2310.5391 875.8594,2312.1094 Q875.8594,2313.6797 876.375,2314.4883 Q876.8906,2315.2852 877.8984,2315.2852 Q878.3672,2315.2852 878.8125,2315.0859 Q879.2578,2314.875 879.7266,2314.4414 L879.7266,2316.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="69.75" x="888" y="2315.3657">BoardDirection</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="867" x2="959.25" y1="2324.25" y2="2324.25"/><ellipse cx="874.5" cy="2332.5" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="66.75" x="881.25" y="2334.9078">file : BoardIdx_t</text><ellipse cx="874.5" cy="2342.1035" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="72.75" x="881.25" y="2344.5114">rank : BoardIdx_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="867" x2="959.25" y1="2349.457" y2="2349.457"/><!--MD5=[766a7154e5922375fdd8d21f8fc5313b]
class gameboard.BoardSpace--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="112.8281" id="gameboard.BoardSpace" style="stroke: #A80036; stroke-width: 1.125;" width="296.25" x="765" y="2161.5"/><ellipse cx="881.4375" cy="2173.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M883.6641,2177.7305 Q883.2305,2177.9531 882.75,2178.0586 Q882.2695,2178.1758 881.7422,2178.1758 Q879.8672,2178.1758 878.8711,2176.9453 Q877.8867,2175.7031 877.8867,2173.3594 Q877.8867,2171.0156 878.8711,2169.7734 Q879.8672,2168.5313 881.7422,2168.5313 Q882.2695,2168.5313 882.75,2168.6484 Q883.2422,2168.7656 883.6641,2168.9883 L883.6641,2171.0273 Q883.1953,2170.5938 882.75,2170.3945 Q882.3047,2170.1836 881.8359,2170.1836 Q880.8281,2170.1836 880.3125,2170.9922 Q879.7969,2171.7891 879.7969,2173.3594 Q879.7969,2174.9297 880.3125,2175.7383 Q880.8281,2176.5352 881.8359,2176.5352 Q882.3047,2176.5352 882.75,2176.3359 Q883.1953,2176.125 883.6641,2175.6914 L883.6641,2177.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="57" x="896.8125" y="2176.6157">BoardSpace</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="765.75" x2="1060.5" y1="2185.5" y2="2185.5"/><ellipse cx="773.25" cy="2193.75" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="66.75" x="780" y="2196.1578">file : BoardIdx_t</text><ellipse cx="773.25" cy="2203.3535" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="72.75" x="780" y="2205.7614">rank : BoardIdx_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="765.75" x2="1060.5" y1="2210.707" y2="2210.707"/><ellipse cx="773.25" cy="2218.957" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="276.75" x="780" y="2221.3649">operator+(const BoardDirection direction) : BoardSpace {query}</text><ellipse cx="773.25" cy="2228.5605" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="217.5" x="780" y="2230.9684">IsInCastleOf(const PieceColor color) : bool {query}</text><ellipse cx="773.25" cy="2238.1641" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="233.25" x="780" y="2240.5719">IsInHomelandOf(const PieceColor color) : bool {query}</text><ellipse cx="773.25" cy="2247.7676" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="115.5" x="780" y="2250.1754">IsOnBoard() : bool {query}</text><ellipse cx="773.25" cy="2257.3711" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="219.75" x="780" y="2259.7789">operator!=(const BoardSpace other) : bool {query}</text><ellipse cx="773.25" cy="2266.9746" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="224.25" x="780" y="2269.3824">operator==(const BoardSpace other) : bool {query}</text><!--MD5=[deb5a7bba76322f7f74be6e849a838c5]
class gameboard.CastleEdges--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="74.4141" id="gameboard.CastleEdges" style="stroke: #A80036; stroke-width: 1.125;" width="114.75" x="1439.25" y="2290.875"/><ellipse cx="1465.0125" cy="2302.875" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1467.2391,2307.1055 Q1466.8055,2307.3281 1466.325,2307.4336 Q1465.8445,2307.5508 1465.3172,2307.5508 Q1463.4422,2307.5508 1462.4461,2306.3203 Q1461.4617,2305.0781 1461.4617,2302.7344 Q1461.4617,2300.3906 1462.4461,2299.1484 Q1463.4422,2297.9063 1465.3172,2297.9063 Q1465.8445,2297.9063 1466.325,2298.0234 Q1466.8172,2298.1406 1467.2391,2298.3633 L1467.2391,2300.4023 Q1466.7703,2299.9688 1466.325,2299.7695 Q1465.8797,2299.5586 1465.4109,2299.5586 Q1464.4031,2299.5586 1463.8875,2300.3672 Q1463.3719,2301.1641 1463.3719,2302.7344 Q1463.3719,2304.3047 1463.8875,2305.1133 Q1464.4031,2305.9102 1465.4109,2305.9102 Q1465.8797,2305.9102 1466.325,2305.7109 Q1466.7703,2305.5 1467.2391,2305.0664 L1467.2391,2307.1055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="58.5" x="1478.7375" y="2305.9907">CastleEdges</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1440" x2="1553.25" y1="2314.875" y2="2314.875"/><ellipse cx="1447.5" cy="2323.125" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="89.25" x="1454.25" y="2325.5328">max_file : BoardIdx_t</text><ellipse cx="1447.5" cy="2332.7285" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="95.25" x="1454.25" y="2335.1364">max_rank : BoardIdx_t</text><ellipse cx="1447.5" cy="2342.332" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="87" x="1454.25" y="2344.7399">min_file : BoardIdx_t</text><ellipse cx="1447.5" cy="2351.9355" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="93" x="1454.25" y="2354.3434">min_rank : BoardIdx_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1440" x2="1553.25" y1="2359.2891" y2="2359.2891"/><!--MD5=[19bac8a2412d0bffd71abe2abcb346b3]
class gameboard.GamePiece--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="93.6211" id="gameboard.GamePiece" style="stroke: #A80036; stroke-width: 1.125;" width="247.5" x="789.375" y="2674.875"/><ellipse cx="883.6875" cy="2686.875" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M885.9141,2691.1055 Q885.4805,2691.3281 885,2691.4336 Q884.5195,2691.5508 883.9922,2691.5508 Q882.1172,2691.5508 881.1211,2690.3203 Q880.1367,2689.0781 880.1367,2686.7344 Q880.1367,2684.3906 881.1211,2683.1484 Q882.1172,2681.9063 883.9922,2681.9063 Q884.5195,2681.9063 885,2682.0234 Q885.4922,2682.1406 885.9141,2682.3633 L885.9141,2684.4023 Q885.4453,2683.9688 885,2683.7695 Q884.5547,2683.5586 884.0859,2683.5586 Q883.0781,2683.5586 882.5625,2684.3672 Q882.0469,2685.1641 882.0469,2686.7344 Q882.0469,2688.3047 882.5625,2689.1133 Q883.0781,2689.9102 884.0859,2689.9102 Q884.5547,2689.9102 885,2689.7109 Q885.4453,2689.5 885.9141,2689.0664 L885.9141,2691.1055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="52.5" x="899.0625" y="2689.9907">GamePiece</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="790.125" x2="1036.125" y1="2698.875" y2="2698.875"/><ellipse cx="797.625" cy="2707.125" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="102" x="804.375" y="2709.5328">piece_color : PieceColor</text><ellipse cx="797.625" cy="2716.7285" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="96.75" x="804.375" y="2719.1364">piece_type : PieceType</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="790.125" x2="1036.125" y1="2724.082" y2="2724.082"/><ellipse cx="797.625" cy="2732.332" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="54" x="804.375" y="2734.7399">GamePiece()</text><ellipse cx="797.625" cy="2741.9355" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="105" x="804.375" y="2744.3434">GamePiece(int int_piece)</text><ellipse cx="797.625" cy="2751.5391" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="192.75" x="804.375" y="2753.9469">GamePiece(PieceType type, PieceColor color)</text><ellipse cx="797.625" cy="2761.1426" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="228" x="804.375" y="2763.5504">operator==(const GamePiece&amp; other) : bool {query}</text><!--MD5=[42953cea0b6fb6a9427130dd1fb28c9a]
class boardstate.HashCalculator--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="160.8457" id="boardstate.HashCalculator" style="stroke: #A80036; stroke-width: 1.125;" width="315.75" x="755.25" y="1913.25"/><ellipse cx="800.8125" cy="1925.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M803.0391,1929.4805 Q802.6055,1929.7031 802.125,1929.8086 Q801.6445,1929.9258 801.1172,1929.9258 Q799.2422,1929.9258 798.2461,1928.6953 Q797.2617,1927.4531 797.2617,1925.1094 Q797.2617,1922.7656 798.2461,1921.5234 Q799.2422,1920.2813 801.1172,1920.2813 Q801.6445,1920.2813 802.125,1920.3984 Q802.6172,1920.5156 803.0391,1920.7383 L803.0391,1922.7773 Q802.5703,1922.3438 802.125,1922.1445 Q801.6797,1921.9336 801.2109,1921.9336 Q800.2031,1921.9336 799.6875,1922.7422 Q799.1719,1923.5391 799.1719,1925.1094 Q799.1719,1926.6797 799.6875,1927.4883 Q800.2031,1928.2852 801.2109,1928.2852 Q801.6797,1928.2852 802.125,1928.0859 Q802.5703,1927.875 803.0391,1927.4414 L803.0391,1929.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="71.25" x="816.1875" y="1928.3657">HashCalculator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="145.5" x="927.75" y="1911"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="928.5" y="1920.104">template&lt;typename KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="756" x2="1070.25" y1="1937.25" y2="1937.25"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="761.25" y="1943.25"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="99.75" x="770.25" y="1947.9078">board_state_ : KeyType</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="761.25" y="1952.8535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="225.75" x="770.25" y="1957.5114">transposition_table_ : TranspositionTable&lt;KeyType&gt;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="761.25" y="1962.457"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="137.25" x="770.25" y="1967.1149">zkeys_ : ZobristKeys&lt;KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="756" x2="1070.25" y1="1972.0605" y2="1972.0605"/><ellipse cx="763.5" cy="1980.3105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="197.25" x="770.25" y="1982.7184">HashCalculator(ZobristKeys&lt;KeyType&gt; zkeys)</text><ellipse cx="763.5" cy="1989.9141" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="70.5" x="770.25" y="1992.3219">HashCalculator()</text><ellipse cx="763.5" cy="1999.5176" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="132.75" x="770.25" y="2001.9254">ImplementGetState() : KeyType</text><ellipse cx="763.5" cy="2009.1211" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="171.75" x="770.25" y="2011.5289">ImplementGetTrData(int search_depth) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="138" x="770.25" y="2021.1324">TranspositionTableSearchResult</text><ellipse cx="763.5" cy="2028.3281" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="292.5" x="770.25" y="2030.736">ImplementFullBoardStateCalc(const BoardMap_t&amp; board_map) : void</text><ellipse cx="763.5" cy="2037.9316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="296.25" x="770.25" y="2040.3395">ImplementRecordTrData(int search_depth, MinimaxResultType result_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="162" x="770.25" y="2049.943">type, BestMoves&amp; best_moves) : void</text><ellipse cx="763.5" cy="2057.1387" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="275.25" x="770.25" y="2059.5465">ImplementUpdateBoardState(const ExecutedMove&amp; move) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="761.25" y="2064.4922"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="246" x="770.25" y="2069.15">_ImplementUpdateBoardState(ExecutedMove move) : void</text><!--MD5=[e5d5a14d8d3ab112c73fd8f457bfb726]
class boardstate.TranspositionTable--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="84.0176" id="boardstate.TranspositionTable" style="stroke: #A80036; stroke-width: 1.125;" width="317.25" x="1338" y="2021.25"/><ellipse cx="1375.3125" cy="2033.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1377.5391,2037.4805 Q1377.1055,2037.7031 1376.625,2037.8086 Q1376.1445,2037.9258 1375.6172,2037.9258 Q1373.7422,2037.9258 1372.7461,2036.6953 Q1371.7617,2035.4531 1371.7617,2033.1094 Q1371.7617,2030.7656 1372.7461,2029.5234 Q1373.7422,2028.2813 1375.6172,2028.2813 Q1376.1445,2028.2813 1376.625,2028.3984 Q1377.1172,2028.5156 1377.5391,2028.7383 L1377.5391,2030.7773 Q1377.0703,2030.3438 1376.625,2030.1445 Q1376.1797,2029.9336 1375.7109,2029.9336 Q1374.7031,2029.9336 1374.1875,2030.7422 Q1373.6719,2031.5391 1373.6719,2033.1094 Q1373.6719,2034.6797 1374.1875,2035.4883 Q1374.7031,2036.2852 1375.7109,2036.2852 Q1376.1797,2036.2852 1376.625,2036.0859 Q1377.0703,2035.875 1377.5391,2035.4414 L1377.5391,2037.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="89.25" x="1390.6875" y="2036.3657">TranspositionTable</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="145.5" x="1512" y="2019"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="1512.75" y="2028.104">template&lt;typename KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1338.75" x2="1654.5" y1="2045.25" y2="2045.25"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1344" y="2051.25"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="1353" y="2055.9078">data_ : unordered_map&lt;KeyType, vector&lt;TranspositionTableEntry&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1338.75" x2="1654.5" y1="2060.8535" y2="2060.8535"/><ellipse cx="1346.25" cy="2069.1035" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="260.25" x="1353" y="2071.5114">GetData(KeyType board_state, int remaining_search_depth) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="138" x="1353" y="2081.1149">TranspositionTableSearchResult</text><ellipse cx="1346.25" cy="2088.3105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="276" x="1353" y="2090.7184">RecordData(KeyType state, int search_depth, MinimaxResultType</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="191.25" x="1353" y="2100.3219">result_type, BestMoves&amp; best_moves) : void</text><!--MD5=[6ed52344935b716845c2f0f5b8c8c744]
class boardstate.ZobristKeys--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="112.8281" id="boardstate.ZobristKeys" style="stroke: #A80036; stroke-width: 1.125;" width="309" x="1342.125" y="1882.5"/><ellipse cx="1392.5625" cy="1894.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1394.7891,1898.7305 Q1394.3555,1898.9531 1393.875,1899.0586 Q1393.3945,1899.1758 1392.8672,1899.1758 Q1390.9922,1899.1758 1389.9961,1897.9453 Q1389.0117,1896.7031 1389.0117,1894.3594 Q1389.0117,1892.0156 1389.9961,1890.7734 Q1390.9922,1889.5313 1392.8672,1889.5313 Q1393.3945,1889.5313 1393.875,1889.6484 Q1394.3672,1889.7656 1394.7891,1889.9883 L1394.7891,1892.0273 Q1394.3203,1891.5938 1393.875,1891.3945 Q1393.4297,1891.1836 1392.9609,1891.1836 Q1391.9531,1891.1836 1391.4375,1891.9922 Q1390.9219,1892.7891 1390.9219,1894.3594 Q1390.9219,1895.9297 1391.4375,1896.7383 Q1391.9531,1897.5352 1392.9609,1897.5352 Q1393.4297,1897.5352 1393.875,1897.3359 Q1394.3203,1897.125 1394.7891,1896.6914 L1394.7891,1898.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="54.75" x="1407.9375" y="1897.6157">ZobristKeys</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="145.5" x="1507.875" y="1880.25"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="1508.625" y="1889.354">template&lt;typename KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1342.875" x2="1650.375" y1="1906.5" y2="1906.5"/><ellipse cx="1350.375" cy="1914.75" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="97.5" x="1357.125" y="1917.1578">zarray : GameZarray_t</text><ellipse cx="1350.375" cy="1924.3535" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="80.25" x="1357.125" y="1926.7614">turn_key : KeyType</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1342.875" x2="1650.375" y1="1931.707" y2="1931.707"/><ellipse cx="1350.375" cy="1939.957" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="57.75" x="1357.125" y="1942.3649">ZobristKeys()</text><ellipse cx="1350.375" cy="1949.5605" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="115.5" x="1357.125" y="1951.9684">ZobristKeys(uint32_t seed)</text><ellipse cx="1350.375" cy="1959.1641" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="280.5" x="1357.125" y="1961.5719">ZobristKeys(KeyType new_turn_key, GameZarray_t&amp; new_zarray)</text><ellipse cx="1350.375" cy="1968.7676" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="276.75" x="1357.125" y="1971.1754">CreateGameZarray(std::mt19937_64&amp; gen_64) : GameZarray_t</text><ellipse cx="1350.375" cy="1978.3711" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="286.5" x="1357.125" y="1980.7789">GetHashValue(PieceColor color, PieceType piece_type, BoardSpace</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="72.75" x="1357.125" y="1990.3824">space) : KeyType</text><!--MD5=[41bf138b82fcf07a7d44b1bd9af6a3f1]
class BoardStateSummarizer--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="103.2246" id="BoardStateSummarizer" style="stroke: #A80036; stroke-width: 1.125;" width="483.75" x="4.5" y="1941.75"/><ellipse cx="15.75" cy="1953.75" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M17.9766,1957.9805 Q17.543,1958.2031 17.0625,1958.3086 Q16.582,1958.4258 16.0547,1958.4258 Q14.1797,1958.4258 13.1836,1957.1953 Q12.1992,1955.9531 12.1992,1953.6094 Q12.1992,1951.2656 13.1836,1950.0234 Q14.1797,1948.7813 16.0547,1948.7813 Q16.582,1948.7813 17.0625,1948.8984 Q17.5547,1949.0156 17.9766,1949.2383 L17.9766,1951.2773 Q17.5078,1950.8438 17.0625,1950.6445 Q16.6172,1950.4336 16.1484,1950.4336 Q15.1406,1950.4336 14.625,1951.2422 Q14.1094,1952.0391 14.1094,1953.6094 Q14.1094,1955.1797 14.625,1955.9883 Q15.1406,1956.7852 16.1484,1956.7852 Q16.6172,1956.7852 17.0625,1956.5859 Q17.5078,1956.375 17.9766,1955.9414 L17.9766,1957.9805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="107.25" x="26.25" y="1956.8657">BoardStateSummarizer</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="351" x="139.5" y="1939.5"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="349.5" x="140.25" y="1948.604">template&lt;typename ConcreteBoardStateSummarizer, typename KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="5.25" x2="487.5" y1="1965.75" y2="1965.75"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="5.25" x2="487.5" y1="1971.75" y2="1971.75"/><ellipse cx="12.75" cy="1980" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="106.5" x="19.5" y="1982.4078">GetState() : ZobristKey_t</text><ellipse cx="12.75" cy="1989.6035" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="197.25" x="19.5" y="1992.0114">GetTrData(int search_depth) : moveselection::</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="138" x="19.5" y="2001.6149">TranspositionTableSearchResult</text><ellipse cx="12.75" cy="2008.8105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="221.25" x="19.5" y="2011.2184">FullBoardStateCalc(BoardMap_t&amp; board_map) : void</text><ellipse cx="12.75" cy="2018.4141" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="286.5" x="19.5" y="2020.8219">RecordTrData(int search_depth, moveselection::MinimaxResultType</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="258.75" x="19.5" y="2030.4254">result_type, moveselection::BestMoves&amp; best_moves) : void</text><ellipse cx="12.75" cy="2037.6211" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="230.25" x="19.5" y="2040.0289">UpdateBoardState(const ExecutedMove&amp; move) : void</text><!--MD5=[62031c2101ef7536ae22e5deaacdeaf3]
class JsonUtility--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="93.6211" id="JsonUtility" style="stroke: #A80036; stroke-width: 1.125;" width="314.25" x="89.25" y="1699.125"/><ellipse cx="122.1" cy="1711.125" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M124.3266,1715.3555 Q123.893,1715.5781 123.4125,1715.6836 Q122.932,1715.8008 122.4047,1715.8008 Q120.5297,1715.8008 119.5336,1714.5703 Q118.5492,1713.3281 118.5492,1710.9844 Q118.5492,1708.6406 119.5336,1707.3984 Q120.5297,1706.1563 122.4047,1706.1563 Q122.932,1706.1563 123.4125,1706.2734 Q123.9047,1706.3906 124.3266,1706.6133 L124.3266,1708.6523 Q123.8578,1708.2188 123.4125,1708.0195 Q122.9672,1707.8086 122.4984,1707.8086 Q121.4906,1707.8086 120.975,1708.6172 Q120.4594,1709.4141 120.4594,1710.9844 Q120.4594,1712.5547 120.975,1713.3633 Q121.4906,1714.1602 122.4984,1714.1602 Q122.9672,1714.1602 123.4125,1713.9609 Q123.8578,1713.75 124.3266,1713.3164 L124.3266,1715.3555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="45" x="137.4" y="1714.2407">JsonUtility</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="195.75" x="210" y="1696.875"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194.25" x="210.75" y="1705.979">template&lt;typename ConcreteJsonUtility&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="90" x2="402.75" y1="1723.125" y2="1723.125"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="90" x2="402.75" y1="1729.125" y2="1729.125"/><ellipse cx="97.5" cy="1737.375" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="196.5" x="104.25" y="1739.7828">Export(T&amp; object, const string file_path) : void</text><ellipse cx="97.5" cy="1746.9785" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294" x="104.25" y="1749.3864">Export(piece_points::BPOPointsSKeys&amp; bpo_points, const string file_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="48" x="104.25" y="1758.9899">path) : void</text><ellipse cx="97.5" cy="1766.1855" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="197.25" x="104.25" y="1768.5934">Import(T&amp; object, const string file_path) : void</text><ellipse cx="97.5" cy="1775.7891" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294.75" x="104.25" y="1778.1969">Import(piece_points::BPOPointsSKeys&amp; bpo_points, const string file_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="48" x="104.25" y="1787.8004">path) : void</text><!--MD5=[088308a547ce616c153c08d33d5cfe4b]
class MoveEvaluator--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="45.6035" id="MoveEvaluator" style="stroke: #A80036; stroke-width: 1.125;" width="312.75" x="90" y="1348.125"/><ellipse cx="101.25" cy="1360.125" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M103.4766,1364.3555 Q103.043,1364.5781 102.5625,1364.6836 Q102.082,1364.8008 101.5547,1364.8008 Q99.6797,1364.8008 98.6836,1363.5703 Q97.6992,1362.3281 97.6992,1359.9844 Q97.6992,1357.6406 98.6836,1356.3984 Q99.6797,1355.1563 101.5547,1355.1563 Q102.082,1355.1563 102.5625,1355.2734 Q103.0547,1355.3906 103.4766,1355.6133 L103.4766,1357.6523 Q103.0078,1357.2188 102.5625,1357.0195 Q102.1172,1356.8086 101.6484,1356.8086 Q100.6406,1356.8086 100.125,1357.6172 Q99.6094,1358.4141 99.6094,1359.9844 Q99.6094,1361.5547 100.125,1362.3633 Q100.6406,1363.1602 101.6484,1363.1602 Q102.1172,1363.1602 102.5625,1362.9609 Q103.0078,1362.75 103.4766,1362.3164 L103.4766,1364.3555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="68.25" x="111.75" y="1363.2407">MoveEvaluator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="219" x="186" y="1345.875"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217.5" x="186.75" y="1354.979">template&lt;typename ConcreteMoveEvaluator&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="90.75" x2="402" y1="1372.125" y2="1372.125"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="90.75" x2="402" y1="1378.125" y2="1378.125"/><ellipse cx="98.25" cy="1386.375" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="84.75" x="105" y="1388.7828">SelectMove() : Move</text><!--MD5=[6725edcfe74215c1de71ec3d02da1239]
class PieceValueProvider--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="55.207" id="PieceValueProvider" style="stroke: #A80036; stroke-width: 1.125;" width="356.25" x="68.25" y="933.75"/><ellipse cx="79.5" cy="945.75" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M81.7266,949.9805 Q81.293,950.2031 80.8125,950.3086 Q80.332,950.4258 79.8047,950.4258 Q77.9297,950.4258 76.9336,949.1953 Q75.9492,947.9531 75.9492,945.6094 Q75.9492,943.2656 76.9336,942.0234 Q77.9297,940.7813 79.8047,940.7813 Q80.332,940.7813 80.8125,940.8984 Q81.3047,941.0156 81.7266,941.2383 L81.7266,943.2773 Q81.2578,942.8438 80.8125,942.6445 Q80.3672,942.4336 79.8984,942.4336 Q78.8906,942.4336 78.375,943.2422 Q77.8594,944.0391 77.8594,945.6094 Q77.8594,947.1797 78.375,947.9883 Q78.8906,948.7852 79.8984,948.7852 Q80.3672,948.7852 80.8125,948.5859 Q81.2578,948.375 81.7266,947.9414 L81.7266,949.9805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="90" x="90" y="948.8657">PieceValueProvider</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="240.75" x="186" y="931.5"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239.25" x="186.75" y="940.604">template&lt;typename ConcretePieceValueProvider&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="69" x2="423.75" y1="957.75" y2="957.75"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="69" x2="423.75" y1="963.75" y2="963.75"/><ellipse cx="76.5" cy="972" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="284.25" x="83.25" y="974.4078">GetValueOfPieceAtPosition(PieceColor color, PieceType piece_type,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="126" x="83.25" y="984.0114">BoardSpace space) : Points_t</text><!--MD5=[8beb3a26d8e33586c0902566a9030205]
class SpaceInfoProvider--><rect fill="#FEFECE" filter="url(#fzn1o0yupypxn)" height="103.2246" id="SpaceInfoProvider" style="stroke: #A80036; stroke-width: 1.125;" width="345.75" x="73.5" y="2463.75"/><ellipse cx="84.75" cy="2475.75" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M86.9766,2479.9805 Q86.543,2480.2031 86.0625,2480.3086 Q85.582,2480.4258 85.0547,2480.4258 Q83.1797,2480.4258 82.1836,2479.1953 Q81.1992,2477.9531 81.1992,2475.6094 Q81.1992,2473.2656 82.1836,2472.0234 Q83.1797,2470.7813 85.0547,2470.7813 Q85.582,2470.7813 86.0625,2470.8984 Q86.5547,2471.0156 86.9766,2471.2383 L86.9766,2473.2773 Q86.5078,2472.8438 86.0625,2472.6445 Q85.6172,2472.4336 85.1484,2472.4336 Q84.1406,2472.4336 83.625,2473.2422 Q83.1094,2474.0391 83.1094,2475.6094 Q83.1094,2477.1797 83.625,2477.9883 Q84.1406,2478.7852 85.1484,2478.7852 Q85.6172,2478.7852 86.0625,2478.5859 Q86.5078,2478.375 86.9766,2477.9414 L86.9766,2479.9805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="84.75" x="95.25" y="2478.8657">SpaceInfoProvider</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="235.5" x="186" y="2461.5"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="186.75" y="2470.604">template&lt;typename ConcreteSpaceInfoProvider&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="74.25" x2="418.5" y1="2487.75" y2="2487.75"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="74.25" x2="418.5" y1="2493.75" y2="2493.75"/><ellipse cx="81.75" cy="2502" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="177.75" x="88.5" y="2504.4078">ExecuteMove(Move move) : ExecutedMove</text><ellipse cx="81.75" cy="2511.6035" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="221.25" x="88.5" y="2514.0114">CalcFinalMovesOf(PieceColor color) : MoveCollection</text><ellipse cx="81.75" cy="2521.207" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="177.75" x="88.5" y="2523.6149">GetColor(BoardSpace space) : PieceColor</text><ellipse cx="81.75" cy="2530.8105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="173.25" x="88.5" y="2533.2184">GetType(BoardSpace space) : PieceType</text><ellipse cx="81.75" cy="2540.4141" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="281.25" x="88.5" y="2542.8219">GetAllSpacesOccupiedBy(PieceColor color) : vector&lt;BoardSpace&gt;</text><ellipse cx="81.75" cy="2550.0176" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="291.75" x="88.5" y="2552.4254">AttachMoveCallback(function&lt;void ( ExecutedMove )&gt; callback) : void</text><ellipse cx="81.75" cy="2559.6211" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="204.75" x="88.5" y="2562.0289">UndoMove(ExecutedMove executed_move) : void</text><!--MD5=[104a70f846b11443c4d03b02f28116c2]
reverse link BoardStateSummarizer to boardstate.HashCalculator--><path d="M503.655,1993.5 C588.39,1993.5 680.0925,1993.5 755.1225,1993.5 " fill="none" id="BoardStateSummarizer&lt;-boardstate.HashCalculator" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="503.475,1998.75,488.475,1993.5,503.475,1988.25,503.475,1998.75" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[5a3a8698d13ab2affd27fc000366658b]
reverse link JsonUtility to jsonio.NlohmannJsonUtility--><path d="M418.5825,1746 C522.0975,1746 653.07,1746 754.1175,1746 " fill="none" id="JsonUtility&lt;-jsonio.NlohmannJsonUtility" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="418.515,1751.25,403.515,1746,418.515,1740.75,418.515,1751.25" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[bf49d4bcf4b90d35a5af5564d49a1e3f]
reverse link MoveEvaluator to moveselection.MinimaxMoveEvaluator--><path d="M393.87,1345.5225 C435.915,1338.225 483.7875,1329.9075 533.0625,1321.3575 " fill="none" id="MoveEvaluator&lt;-moveselection.MinimaxMoveEvaluator" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="394.635,1350.72,378.9525,1348.11,392.835,1340.37,394.635,1350.72" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[dda2aafe114a29ff43d62fd6a6993526]
reverse link MoveEvaluator to moveselection.RandomMoveEvaluator--><path d="M357.0075,1397.325 C405.36,1408.38 462.9525,1420.83 515.25,1430.25 C584.88,1442.79 661.8075,1454.115 729.27,1463.22 " fill="none" id="MoveEvaluator&lt;-moveselection.RandomMoveEvaluator" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="355.7475,1402.425,342.3075,1393.9425,358.1025,1392.195,355.7475,1402.425" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[10776de039ab17e0ab7e5ffaef954faf]
reverse link PieceValueProvider to piece_points.PiecePositionPoints--><path d="M439.53,961.5 C542.325,961.5 666.99,961.5 762.5025,961.5 " fill="none" id="PieceValueProvider&lt;-piece_points.PiecePositionPoints" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="439.5225,966.75,424.5225,961.5,439.5225,956.25,439.5225,966.75" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[a89ff3b5c59afb0fa0bea611b64bd065]
reverse link SpaceInfoProvider to gameboard.GameBoard--><path d="M434.625,2515.5 C539.685,2515.5 668.7675,2515.5 766.26,2515.5 " fill="none" id="SpaceInfoProvider&lt;-gameboard.GameBoard" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="434.31,2520.75,419.31,2515.5,434.31,2510.25,434.31,2520.75" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[524d3cc7becf799a5961e67024ff7f16]
reverse link moves.ExecutedMove to moves.Move--><path d="M363.3675,286.98 C494.955,307.8975 706.3575,341.4975 824.7675,360.3225 " fill="none" id="moves.ExecutedMove&lt;-moves.Move" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="353.64,285.435,357.6129,289.1047,362.5283,286.8488,358.5554,283.1792,353.64,285.435" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[bccd0be2e2825bf3e0db283f3a470347]
reverse link gameboard.GameBoard to gameboard.PieceColor--><path d="M1069.6725,2526.54 C1202.43,2535.9525 1383.465,2548.785 1459.695,2554.185 " fill="none" id="gameboard.GameBoard&lt;-gameboard.PieceColor" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1059.8025,2525.8425,1064.0804,2529.1515,1068.7802,2526.4753,1064.5023,2523.1663,1059.8025,2525.8425" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[66e14357187fbcf55e73aaa38cc506a4]
reverse link gameboard.GamePiece to gameboard.PieceColor--><path d="M1046.85,2711.235 C1120.71,2702.7975 1213.47,2687.865 1293,2661.75 C1326.4425,2650.77 1411.0425,2604.54 1459.7775,2577.2175 " fill="none" id="gameboard.GamePiece&lt;-gameboard.PieceColor" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1037.0175,2712.33,1041.8228,2714.8118,1045.9618,2711.3307,1041.1566,2708.8489,1037.0175,2712.33" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[b8ccdaa5093e01f2c45d298c3aa4eebf]
reverse link gameboard.GamePiece to gameboard.PieceType--><path d="M1046.73,2719.695 C1181.4075,2717.61 1380.9825,2714.5275 1460.9175,2713.29 " fill="none" id="gameboard.GamePiece&lt;-gameboard.PieceType" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1036.95,2719.845,1041.4956,2722.7754,1045.9489,2719.7066,1041.4033,2716.7761,1036.95,2719.845" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[dea81101641171e5caa17a72b5ae808f]
reverse link boardstate.HashCalculator to boardstate.TranspositionTable--><path d="M1080.96,2013.525 C1161.7875,2023.2075 1258.305,2034.78 1337.9025,2044.32 " fill="none" id="boardstate.HashCalculator&lt;-boardstate.TranspositionTable" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1071.18,2012.355,1075.2919,2015.8682,1080.1163,2013.4238,1076.0044,2009.9106,1071.18,2012.355" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[0d5a78213a1068148c4ed6d8d67818b7]
reverse link boardstate.HashCalculator to boardstate.ZobristKeys--><path d="M1081.1175,1977.765 C1163.2875,1970.04 1261.6275,1960.785 1341.93,1953.2325 " fill="none" id="boardstate.HashCalculator&lt;-boardstate.ZobristKeys" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1071.18,1978.7025,1075.9406,1981.269,1080.1407,1977.8618,1075.3801,1975.2953,1071.18,1978.7025" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[087759a873fcac1b0a76058001b44431]
reverse link moveselection.MinimaxMoveEvaluator to moveselection.SearchSummaries--><path d="M1302.915,1255.5 C1324.83,1255.5 1345.905,1255.5 1365.555,1255.5 " fill="none" id="moveselection.MinimaxMoveEvaluator&lt;-moveselection.SearchSummaries" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1293.135,1255.5,1297.635,1258.5,1302.135,1255.5,1297.635,1252.5,1293.135,1255.5" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[272bba34f94956aefc9c47f39f58d06a]
reverse link moves.MoveCalculator to moves.PieceMoves--><path d="M416.1975,135.555 C519.825,142.335 651.645,150.9525 753.3675,157.605 " fill="none" id="moves.MoveCalculator&lt;-moves.PieceMoves" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="406.26,134.9025,410.5524,138.1927,415.2404,135.4959,410.948,132.2057,406.26,134.9025" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[48785f4c86c456c0502630e43a26d6c2]
reverse link moves.MoveCollection to moves.Move--><path d="M409.89,392.3775 C540.825,387.6525 719.7525,381.2025 824.9925,377.4 " fill="none" id="moves.MoveCollection&lt;-moves.Move" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="399.9525,392.7375,404.5583,395.5724,408.9466,392.4113,404.3408,389.5764,399.9525,392.7375" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[6d6484b0100c7affe0261d9cf3959e9c]
reverse link moveselection.SearchSummaries to moveselection.SearchSummary--><path d="M1637.7075,1255.5 C1658.145,1255.5 1679.31,1255.5 1700.07,1255.5 " fill="none" id="moveselection.SearchSummaries&lt;-moveselection.SearchSummary" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1627.7325,1255.5,1632.2325,1258.5,1636.7325,1255.5,1632.2325,1252.5,1627.7325,1255.5" style="stroke: #A80036; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="9.75" lengthAdjust="spacingAndGlyphs" textLength="6" x="1633.3902" y="1264.7892">2</text><!--MD5=[828e78802cd5b001fa81f263b918ec85]
reverse link moveselection.SearchSummary to moveselection.BestMoves--><path d="M2026.71,1287 C2058.195,1292.925 2089.9425,1298.895 2117.79,1304.1375 " fill="none" id="moveselection.SearchSummary&lt;-moveselection.BestMoves" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="2016.9525,1285.1625,2020.821,1288.942,2025.7977,1286.8247,2021.9291,1283.0452,2016.9525,1285.1625" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[5c7cc95bd7462dd6ec4ddc1d350179fa]
reverse link moveselection.SearchSummary to moveselection.ResultDepthCounts--><path d="M2026.7175,1245.36 C2038.365,1244.655 2050.0425,1243.95 2061.54,1243.2525 " fill="none" id="moveselection.SearchSummary&lt;-moveselection.ResultDepthCounts" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="2016.9525,1245.9525,2021.6255,1248.6752,2025.9361,1245.4089,2021.2631,1242.6862,2016.9525,1245.9525" style="stroke: #A80036; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="9.75" lengthAdjust="spacingAndGlyphs" textLength="6" x="2022.7547" y="1254.8678">2</text><!--MD5=[6395110a5b35ee4c7a8606da0cdf0239]
reverse link moveselection.TranspositionTableEntry to moveselection.BestMoves--><path d="M1946.445,1399.365 C1982.055,1387.065 2023.7325,1373.0475 2061.75,1361.25 C2079.84,1355.6325 2099.3025,1349.94 2117.9025,1344.6675 " fill="none" id="moveselection.TranspositionTableEntry&lt;-moveselection.BestMoves" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1937.055,1402.62,1942.2892,1403.9813,1945.5589,1399.6733,1940.3247,1398.312,1937.055,1402.62" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[f3fe8a5b526a8fa09b339fdf92e4146a]
reverse link moveselection.TranspositionTableEntry to moveselection.MinimaxResultType--><path d="M1946.7825,1432.8975 C2010.885,1434.84 2095.935,1437.4125 2150.85,1439.0775 " fill="none" id="moveselection.TranspositionTableEntry&lt;-moveselection.MinimaxResultType" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1936.8825,1432.5975,1941.288,1435.7346,1945.8782,1432.8746,1941.4727,1429.7375,1936.8825,1432.5975" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[0b73a963ccac06876b1dc6c8e8e6a3d8]
reverse link moveselection.TranspositionTableSearchResult to moveselection.TranspositionTableEntry--><path d="M1596.36,1430.25 C1654.26,1430.25 1726.305,1430.25 1780.0875,1430.25 " fill="none" id="moveselection.TranspositionTableSearchResult&lt;-moveselection.TranspositionTableEntry" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1586.46,1430.25,1590.96,1433.25,1595.46,1430.25,1590.96,1427.25,1586.46,1430.25" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[03a7d0ed258a69d32c4dc576327d5232]
link gameboard.BoardDirection to gameboard.BoardSpace--><!--MD5=[0355de00326a9088e4fa718cdd5211a9]
link gameboard.BoardDirection to gameboard.CastleEdges--><!--MD5=[41c71202fbac898047020bf1767b1dac]
@startuml
skinparam dpi 300
skinparam packageStyle rect
skinparam wrapWidth 400
left to right direction
scale 0.75






class BoardStateSummarizer <template<typename ConcreteBoardStateSummarizer, typename KeyType>> {
	+GetState() : ZobristKey_t
	+GetTrData(int search_depth) : moveselection::TranspositionTableSearchResult
	+FullBoardStateCalc(BoardMap_t& board_map) : void
	+RecordTrData(int search_depth, moveselection::MinimaxResultType result_type, moveselection::BestMoves& best_moves) : void
	+UpdateBoardState(const ExecutedMove& move) : void
}


class JsonUtility <template<typename ConcreteJsonUtility>> {
	+Export(T& object, const string file_path) : void
	+Export(piece_points::BPOPointsSKeys& bpo_points, const string file_path) : void
	+Import(T& object, const string file_path) : void
	+Import(piece_points::BPOPointsSKeys& bpo_points, const string file_path) : void
}


class MoveEvaluator <template<typename ConcreteMoveEvaluator>> {
	+SelectMove() : Move
}


class PieceValueProvider <template<typename ConcretePieceValueProvider>> {
	+GetValueOfPieceAtPosition(PieceColor color, PieceType piece_type, BoardSpace space) : Points_t
}


class SpaceInfoProvider <template<typename ConcreteSpaceInfoProvider>> {
	+ExecuteMove(Move move) : ExecutedMove
	+CalcFinalMovesOf(PieceColor color) : MoveCollection
	+GetColor(BoardSpace space) : PieceColor
	+GetType(BoardSpace space) : PieceType
	+GetAllSpacesOccupiedBy(PieceColor color) : vector<BoardSpace>
	+AttachMoveCallback(function<void ( ExecutedMove )> callback) : void
	+UndoMove(ExecutedMove executed_move) : void
}


namespace piece_points {
	class BPOPointsEKeys {
		+BPOPointsEKeys(TeamBasePoints_t black_base_input, TeamBasePoints_t red_base_offsets_input, TeamPointsEMap_t black_position_input, TeamPointsEMap_t red_position_offsets_input)
		+BPOPointsEKeys(BPOPointsSKeys external_spec)
		+ToGamePointsArray() : GamePointsArray_t
		+black_base_ : TeamBasePoints_t
		+red_base_offsets_ : TeamBasePoints_t
		+BlackNetPoints() : TeamPointsArray_t
		+RedNetPoints() : TeamPointsArray_t
		+black_position_ : TeamPointsEMap_t
		+red_position_offsets_ : TeamPointsEMap_t
	}

	class BPOPointsSKeys {
		+BPOPointsSKeys()
		+BPOPointsSKeys(BasePointsSMap_t black_base_input, BasePointsSMap_t red_base_offsets_input, TeamPointsSMap_t black_position_input, TeamPointsSMap_t red_position_offsets_input)
		+BPOPointsSKeys(const string& json_file_path)
		+ToBPOPointsEKeys() : BPOPointsEKeys
		+black_base_ : BasePointsSMap_t
		+red_base_offsets_ : BasePointsSMap_t
		+ToGamePointsArray() : GamePointsArray_t
		+ToGamePointsSmap() : GamePointsSMap_t
		+black_position_ : TeamPointsSMap_t
		+red_position_offsets_ : TeamPointsSMap_t
		-json_utility_ : unique_ptr<JsonUtility<jsonio::NlohmannJsonUtility>>
		+ToFile(string output_path) : void
	}

	class PiecePositionPoints {
		+PiecePositionPoints()
		+PiecePositionPoints(GamePointsArray_t game_points_array)
		+PiecePositionPoints(BPOPointsEKeys& bpo_points_ekeys)
		+PiecePositionPoints(BPOPointsSKeys& bpo_points_skeys)
		+PiecePositionPoints(string json_file)
		+points_array : GamePointsArray_t
		+PointsArraytoEMap() : GamePointsEMap_t
		+PointsArrayToSmap() : GamePointsSMap_t
		+ImplementGetValueOfPieceAtPosition(PieceColor color, PieceType piece_type, BoardSpace space) : Points_t
		+{static} TeamPointsArrayToEMap(TeamPointsArray_t team_array) : TeamPointsEMap_t
	}
}


namespace moveselection {
	class MinimaxMoveEvaluator <template<typename ConcreteSpaceInfoProvider, typename ConcreteBoardStateSummarizer, typename ConcretePieceValueProvider>> {
		+MinimaxMoveEvaluator(PieceColor evaluating_player, int starting_search_depth, ConcreteSpaceInfoProvider& game_board, ConcretePieceValueProvider game_position_points)
		+MinimaxMoveEvaluator(PieceColor evaluating_player, int starting_search_depth, ConcreteSpaceInfoProvider& game_board)
		-EvaluateEndOfGameLeaf(PieceColor cur_player, MinimaxResultType& result_type) : BestMoves
		-EvaluateNonWinLeaf(PieceColor cur_player) : BestMoves
		-MinimaxRec(int remaining_search_depth, int alpha, int beta, PieceColor cur_player, SearchSummary& single_search_summary, bool use_transposition_table) : BestMoves
		-hash_calculator_ : ConcreteBoardStateSummarizer
		-game_position_points_ : ConcretePieceValueProvider
		-game_board_ : ConcreteSpaceInfoProvider&
		+ImplementSelectMove() : Move
		-RunMinimax(SearchSummary& single_search_summary, bool use_transposition_table) : Move
		-evaluating_player_ : PieceColor
		+GetPlayerTotal(PieceColor color) : Points_t
		-GetValueOfPieceAtPosition(PieceColor color, PieceType piece_type, BoardSpace space) : Points_t
		-RateMove(Move move, PieceColor cur_player) : RatedMove
		+StartingSearchDepth() : int
		-num_move_selections_ : int
		-starting_search_depth_ : int
		+GetSearchSummaries() : moveselection::SearchSummaries
		-search_summaries_ : moveselection::SearchSummaries
		+KeySizeBits() : size_t
		-GenerateRankedMoveList(PieceColor cur_player, MoveCollection& cur_player_moves) : std::vector<RatedMove>
	}

	class RandomMoveEvaluator <template<typename ConcreteSpaceInfoProvider>> {
		+RandomMoveEvaluator(PieceColor evaluating_player, ConcreteSpaceInfoProvider& game_board)
		-game_board_ : ConcreteSpaceInfoProvider&
		+ImplementSelectMove() : Move
		-evaluating_player_ : PieceColor
	}

	enum MinimaxResultType {
		kAlphaPrune
		kBetaPrune
		kEvaluatorLoses
		kEvaluatorWins
		kFullyEvaluatedNode
		kMax
		kMin
		kStandardLeaf
		kTrTableHit
		kUnknown
	}

	class BestMoves {
		+best_eval : Points_t
		+best_moves : moves::MoveCollection
	}

	class RatedMove {
		+rating : Points_t
		+move : moves::Move
	}

	class ResultDepthCounts {
		+ResultDepthCounts(int max_search_depth)
		+data : std::vector<std::vector<int>>
		+Update(MinimaxResultType result_type, int search_depth) : void
	}

	class SearchSummaries {
		+NewExtraSearch(int search_depth, int search_number) : SearchSummary&
		+NewFirstSearch(int search_depth) : SearchSummary&
		+extra_searches : std::map<int, SearchSummary>
		+first_searches : std::vector<SearchSummary>
	}

	class SearchSummary {
		+SearchSummary(int max_search_depth)
		+best_moves : BestMoves
		+result_depth_counts : ResultDepthCounts
		+transposition_table_hits : ResultDepthCounts
		+num_nodes : int
		+selected_move : moves::Move
		+time : std::chrono::duration<double, std::nano>
		+GetResultDepthCounts() : std::vector<std::vector<int>>
		+GetTranspositionTableHits() : std::vector<std::vector<int>>
		+SetBestMoves(BestMoves best_moves) : void
		+SetSelectedMove(moves::Move selected_move) : void
		+SetTime(std::chrono::duration<double, std::nano> search_time) : void
		+Update(MinimaxResultType result_type, int search_depth, BestMoves best_moves) : void
		+UpdateTranspositionTableHits(MinimaxResultType result_type, int search_depth) : void
	}

	class TranspositionTableEntry {
		+best_moves : BestMoves
		+result_type : MinimaxResultType
		+Score() : Points_t
		+remaining_search_depth : int
	}

	class TranspositionTableSearchResult {
		+table_entry : TranspositionTableEntry
		+found : bool
	}
}


namespace moves {
	class MoveCalculator {
		+MoveCalculator()
		+CalcAllMovesNoCheckTest(PieceColor color, const BoardMap_t& board_map) : MoveCollection
		-ImplementCalcAllMovesNoCheckTest(PieceColor color, const BoardMap_t& board_map) : MoveCollection
		-piece_dispatch_array_ : PieceDispatchArray_t
		-piece_moves_ : PieceMoves
		+IsOccupied(const BoardMap_t& board_map, const BoardSpace& space) : bool
		+CalcMovesFrom(const BoardSpace space, MoveCollection& team_moves, const BoardMap_t& board_map) : void
		-ImplementCalcMovesFrom(const BoardSpace space, MoveCollection& team_moves, const BoardMap_t& board_map) : void
	}

	class PieceMoves {
		-{static} FwdDirection(PieceColor color) : BoardDirection
		-{static} ExistsAndPassesColorTest(const BoardMap_t& board_map, const BoardSpace& space, PieceColor moving_piece_color) : bool
		+AdvisorMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+CannonMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+ChariotMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+ElephantMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+FlyingGeneralMove(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+GeneralMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+HorseMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+SoldierMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+StandardGeneralMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
	}

	class ExecutedMove {
		+spaces : Move
		+operator==(const ExecutedMove other) : bool
		+destination_piece : gameboard::GamePiece
		+moving_piece : gameboard::GamePiece
	}

	class Move {
		+operator==(const Move other) : bool
		+end : gameboard::BoardSpace
		+start : gameboard::BoardSpace
	}

	class MoveCollection {
		+MoveCollection()
		+MoveCollection(vector<Move> my_moves)
		+MoveCollection(size_t reserve_size)
		+ContainsDestination(const gameboard::BoardSpace& space) : bool
		+ContainsMove(const Move& move) : bool {query}
		+Size() : size_t {query}
		+moves : vector<Move>
		+Append(Move move) : void
		+Concat(vector<Move> other_moves) : void
		+Concat(MoveCollection other) : void
	}
}


namespace jsonio {
	class NlohmannJsonUtility {
		-ImportToSerializedJson(const string file_path) : nlohmann::json
		-Serialize(piece_points::BPOPointsSKeys& bpo_points) : nlohmann::json
		-Deserialize(nlohmann::json serialized_json, piece_points::BPOPointsSKeys& bpo_points) : void
		-ExportSerializedJson(nlohmann::json serialized_json, const string file_path) : void
		+ImplementExport(T& object, const string file_path) : void
		+ImplementExport(piece_points::BPOPointsSKeys& bpo_points, const string file_path) : void
		+ImplementImport(T& object, const string file_path) : void
		+ImplementImport(piece_points::BPOPointsSKeys& bpo_points, const string file_path) : void
	}
}


namespace gameboard {
	class GameBoard {
		+GameBoard()
		+GameBoard(const BoardMapInt_t starting_board)
		-vector<function<void(ExecutedMove)
		-board_map_ : BoardMap_t
		+map() : BoardMap_t& {query}
		+ImplementExecuteMove(Move move) : ExecutedMove
		+GetOccupant(BoardSpace space) : GamePiece
		-move_calculator_ : MoveCalculator
		+ImplementCalcFinalMovesOf(PieceColor color) : MoveCollection
		+ImplementGetColor(BoardSpace space) : PieceColor
		+ImplementGetType(BoardSpace space) : PieceType
		+IsInCheck(PieceColor color) : bool
		-ViolatesRepeatRule(PieceColor color) : bool
		+GetMoveLog() : std::map<PieceColor , vector<ExecutedMove>>
		-move_log_ : std::map<PieceColor, vector<ExecutedMove>>
		+ImplementGetAllSpacesOccupiedBy(PieceColor color) : vector<BoardSpace>
		-AddToMoveLog(ExecutedMove executed_move) : void
		+ImplementAttachMoveCallback(function<void ( ExecutedMove )> callback) : void
		+ImplementUndoMove(ExecutedMove executed_move) : void
		-RemoveFromMoveLog(ExecutedMove executed_move) : void
		-SetOccupant(BoardSpace space, GamePiece piece) : void
		-UpdateHashCalculator(ExecutedMove executed_move) : void
	}

	enum PieceColor {
		kBlk
		kNul
		kRed
	}

	enum PieceType {
		kAdv
		kCan
		kCha
		kEle
		kGen
		kHor
		kNnn
		kSol
	}

	class BoardDirection {
		+file : BoardIdx_t
		+rank : BoardIdx_t
	}

	class BoardSpace {
		+file : BoardIdx_t
		+rank : BoardIdx_t
		+operator+(const BoardDirection direction) : BoardSpace {query}
		+IsInCastleOf(const PieceColor color) : bool {query}
		+IsInHomelandOf(const PieceColor color) : bool {query}
		+IsOnBoard() : bool {query}
		+operator!=(const BoardSpace other) : bool {query}
		+operator==(const BoardSpace other) : bool {query}
	}

	class CastleEdges {
		+max_file : BoardIdx_t
		+max_rank : BoardIdx_t
		+min_file : BoardIdx_t
		+min_rank : BoardIdx_t
	}

	class GamePiece {
		+GamePiece()
		+GamePiece(int int_piece)
		+GamePiece(PieceType type, PieceColor color)
		+piece_color : PieceColor
		+piece_type : PieceType
		+operator==(const GamePiece& other) : bool {query}
	}
}


namespace boardstate {
	class HashCalculator <template<typename KeyType>> {
		+HashCalculator(ZobristKeys<KeyType> zkeys)
		+HashCalculator()
		+ImplementGetState() : KeyType
		-board_state_ : KeyType
		-transposition_table_ : TranspositionTable<KeyType>
		+ImplementGetTrData(int search_depth) : TranspositionTableSearchResult
		-zkeys_ : ZobristKeys<KeyType>
		+ImplementFullBoardStateCalc(const BoardMap_t& board_map) : void
		+ImplementRecordTrData(int search_depth, MinimaxResultType result_type, BestMoves& best_moves) : void
		+ImplementUpdateBoardState(const ExecutedMove& move) : void
		-_ImplementUpdateBoardState(ExecutedMove move) : void
	}

	class TranspositionTable <template<typename KeyType>> {
		+GetData(KeyType board_state, int remaining_search_depth) : TranspositionTableSearchResult
		-data_ : unordered_map<KeyType, vector<TranspositionTableEntry>>
		+RecordData(KeyType state, int search_depth, MinimaxResultType result_type, BestMoves& best_moves) : void
	}

	class ZobristKeys <template<typename KeyType>> {
		+ZobristKeys()
		+ZobristKeys(uint32_t seed)
		+ZobristKeys(KeyType new_turn_key, GameZarray_t& new_zarray)
		+{static} CreateGameZarray(std::mt19937_64& gen_64) : GameZarray_t
		+zarray : GameZarray_t
		+GetHashValue(PieceColor color, PieceType piece_type, BoardSpace space) : KeyType
		+turn_key : KeyType
	}
}






BoardStateSummarizer <|- - boardstate.HashCalculator


JsonUtility <|- - jsonio.NlohmannJsonUtility


MoveEvaluator <|- - moveselection.MinimaxMoveEvaluator


MoveEvaluator <|- - moveselection.RandomMoveEvaluator


PieceValueProvider <|- - piece_points.PiecePositionPoints


SpaceInfoProvider <|- - gameboard.GameBoard






moves.ExecutedMove *- - moves.Move


gameboard.GameBoard *- - gameboard.PieceColor


gameboard.GamePiece *- - gameboard.PieceColor


gameboard.GamePiece *- - gameboard.PieceType


boardstate.HashCalculator *- - boardstate.TranspositionTable


boardstate.HashCalculator *- - boardstate.ZobristKeys


moveselection.MinimaxMoveEvaluator *- - moveselection.SearchSummaries


moves.MoveCalculator *- - moves.PieceMoves


moves.MoveCollection *- - moves.Move


moveselection.SearchSummaries "2" *- - moveselection.SearchSummary


moveselection.SearchSummary *- - moveselection.BestMoves


moveselection.SearchSummary "2" *- - moveselection.ResultDepthCounts


moveselection.TranspositionTableEntry *- - moveselection.BestMoves


moveselection.TranspositionTableEntry *- - moveselection.MinimaxResultType


moveselection.TranspositionTableSearchResult *- - moveselection.TranspositionTableEntry









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 UTC 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 17.0.12+7-Debian-2deb12u1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>