<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3093px" preserveAspectRatio="none" style="width:2743px;height:3093px;" version="1.1" viewBox="0 0 2743 3093" width="2743.5px" zoomAndPan="magnify"><defs><filter height="300%" id="f3fzn4cvfrfwj" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="1.5"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="3.0" dy="3.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[9cb60f34fdb12a4a4e6f1d6a4263a851]
cluster piecepoints--><rect fill="#FFFFFF" filter="url(#f3fzn4cvfrfwj)" height="555" style="stroke: #000000; stroke-width: 1.125;" width="341.25" x="746.25" y="726"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="69" x="882.375" y="737.2463">piecepoints</text><!--MD5=[57fb690a8f0f6f6f9326c85dd49a3f02]
cluster moveselection--><rect fill="#FFFFFF" filter="url(#f3fzn4cvfrfwj)" height="986.25" style="stroke: #000000; stroke-width: 1.125;" width="2176.125" x="524.25" y="1299"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="86.25" x="1569.1875" y="1310.2463">moveselection</text><!--MD5=[2691a3f2d257028f77dc83e11cbc203d]
cluster jsonio--><rect fill="#FFFFFF" filter="url(#f3fzn4cvfrfwj)" height="189.75" style="stroke: #000000; stroke-width: 1.125;" width="342.75" x="745.5" y="2303.25"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="35.25" x="899.25" y="2314.4963">jsonio</text><!--MD5=[9850fb667b8b2735e7a247a82bf473cf]
cluster gameboard--><rect fill="#FFFFFF" filter="url(#f3fzn4cvfrfwj)" height="567" style="stroke: #000000; stroke-width: 1.125;" width="2207.625" x="81.75" y="141"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="66.75" x="1152.1875" y="152.2463">gameboard</text><!--MD5=[c5ccf4f49ce8f8c55bdf02abb17b292f]
cluster boardstate--><rect fill="#FFFFFF" filter="url(#f3fzn4cvfrfwj)" height="573.75" style="stroke: #000000; stroke-width: 1.125;" width="2009.25" x="726" y="2511"/><text fill="#000000" font-family="sans-serif" font-size="10.5" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="64.5" x="1698.375" y="2522.2463">boardstate</text><!--MD5=[64a56b06cede475a8e78f5bc9b173756]
class piecepoints.BPOPointsEKeys--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="141.6387" id="piecepoints.BPOPointsEKeys" style="stroke: #A80036; stroke-width: 1.125;" width="317.25" x="758.25" y="752.625"/><ellipse cx="876.1875" cy="764.625" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M878.4141,768.8555 Q877.9805,769.0781 877.5,769.1836 Q877.0195,769.3008 876.4922,769.3008 Q874.6172,769.3008 873.6211,768.0703 Q872.6367,766.8281 872.6367,764.4844 Q872.6367,762.1406 873.6211,760.8984 Q874.6172,759.6563 876.4922,759.6563 Q877.0195,759.6563 877.5,759.7734 Q877.9922,759.8906 878.4141,760.1133 L878.4141,762.1523 Q877.9453,761.7188 877.5,761.5195 Q877.0547,761.3086 876.5859,761.3086 Q875.5781,761.3086 875.0625,762.1172 Q874.5469,762.9141 874.5469,764.4844 Q874.5469,766.0547 875.0625,766.8633 Q875.5781,767.6602 876.5859,767.6602 Q877.0547,767.6602 877.5,767.4609 Q877.9453,767.25 878.4141,766.8164 L878.4141,768.8555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="75" x="891.5625" y="767.7407">BPOPointsEKeys</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="759" x2="1074.75" y1="776.625" y2="776.625"/><ellipse cx="766.5" cy="784.875" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="140.25" x="773.25" y="787.2828">black_base_ : TeamBasePoints_t</text><ellipse cx="766.5" cy="794.4785" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="167.25" x="773.25" y="796.8864">red_base_offsets_ : TeamBasePoints_t</text><ellipse cx="766.5" cy="804.082" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="153.75" x="773.25" y="806.4899">black_position_ : TeamPointsEMap_t</text><ellipse cx="766.5" cy="813.6855" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="180.75" x="773.25" y="816.0934">red_position_offsets_ : TeamPointsEMap_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="759" x2="1074.75" y1="821.0391" y2="821.0391"/><ellipse cx="766.5" cy="829.2891" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="231" x="773.25" y="831.6969">BPOPointsEKeys(TeamBasePoints_t black_base_input,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="773.25" y="841.3004">TeamBasePoints_t red_base_offsets_input, TeamPointsEMap_t black_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="264" x="773.25" y="850.9039">position_input, TeamPointsEMap_t red_position_offsets_input)</text><ellipse cx="766.5" cy="858.0996" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="208.5" x="773.25" y="860.5074">BPOPointsEKeys(BPOPointsSKeys external_spec)</text><ellipse cx="766.5" cy="867.7031" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="773.25" y="870.111">ToGamePointsArray() : GamePointsArray_t</text><ellipse cx="766.5" cy="877.3066" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="158.25" x="773.25" y="879.7145">BlackNetPoints() : TeamPointsArray_t</text><ellipse cx="766.5" cy="886.9102" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="151.5" x="773.25" y="889.318">RedNetPoints() : TeamPointsArray_t</text><!--MD5=[388794b6d69ceb8de0c7300404fbfde4]
class piecepoints.BPOPointsSKeys--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="170.4492" id="piecepoints.BPOPointsSKeys" style="stroke: #A80036; stroke-width: 1.125;" width="317.25" x="758.25" y="920.625"/><ellipse cx="876.1875" cy="932.625" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M878.4141,936.8555 Q877.9805,937.0781 877.5,937.1836 Q877.0195,937.3008 876.4922,937.3008 Q874.6172,937.3008 873.6211,936.0703 Q872.6367,934.8281 872.6367,932.4844 Q872.6367,930.1406 873.6211,928.8984 Q874.6172,927.6563 876.4922,927.6563 Q877.0195,927.6563 877.5,927.7734 Q877.9922,927.8906 878.4141,928.1133 L878.4141,930.1523 Q877.9453,929.7188 877.5,929.5195 Q877.0547,929.3086 876.5859,929.3086 Q875.5781,929.3086 875.0625,930.1172 Q874.5469,930.9141 874.5469,932.4844 Q874.5469,934.0547 875.0625,934.8633 Q875.5781,935.6602 876.5859,935.6602 Q877.0547,935.6602 877.5,935.4609 Q877.9453,935.25 878.4141,934.8164 L878.4141,936.8555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="75" x="891.5625" y="935.7407">BPOPointsSKeys</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="759" x2="1074.75" y1="944.625" y2="944.625"/><ellipse cx="766.5" cy="952.875" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="139.5" x="773.25" y="955.2828">black_base_ : BasePointsSMap_t</text><ellipse cx="766.5" cy="962.4785" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="166.5" x="773.25" y="964.8864">red_base_offsets_ : BasePointsSMap_t</text><ellipse cx="766.5" cy="972.082" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="154.5" x="773.25" y="974.4899">black_position_ : TeamPointsSMap_t</text><ellipse cx="766.5" cy="981.6855" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="773.25" y="984.0934">red_position_offsets_ : TeamPointsSMap_t</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="764.25" y="989.0391"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="287.25" x="773.25" y="993.6969">json_utility_ : unique_ptr&lt;JsonUtility&lt;jsonio::NlohmannJsonUtility&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="759" x2="1074.75" y1="998.6426" y2="998.6426"/><ellipse cx="766.5" cy="1006.8926" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="76.5" x="773.25" y="1009.3004">BPOPointsSKeys()</text><ellipse cx="766.5" cy="1016.4961" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="231" x="773.25" y="1018.9039">BPOPointsSKeys(BasePointsSMap_t black_base_input,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="773.25" y="1028.5074">BasePointsSMap_t red_base_offsets_input, TeamPointsSMap_t black_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="264.75" x="773.25" y="1038.111">position_input, TeamPointsSMap_t red_position_offsets_input)</text><ellipse cx="766.5" cy="1045.3066" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="196.5" x="773.25" y="1047.7145">BPOPointsSKeys(const string&amp; json_file_path)</text><ellipse cx="766.5" cy="1054.9102" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="165" x="773.25" y="1057.318">ToBPOPointsEKeys() : BPOPointsEKeys</text><ellipse cx="766.5" cy="1064.5137" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="773.25" y="1066.9215">ToGamePointsArray() : GamePointsArray_t</text><ellipse cx="766.5" cy="1074.1172" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="184.5" x="773.25" y="1076.525">ToGamePointsSmap() : GamePointsSMap_t</text><ellipse cx="766.5" cy="1083.7207" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="135" x="773.25" y="1086.1285">ToFile(string output_path) : void</text><!--MD5=[453cd26cb8a4692b65adee7e85348d28]
class piecepoints.PiecePositionPoints--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="151.2422" id="piecepoints.PiecePositionPoints" style="stroke: #A80036; stroke-width: 1.125;" width="300.75" x="766.5" y="1117.5"/><ellipse cx="867.5625" cy="1129.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M869.7891,1133.7305 Q869.3555,1133.9531 868.875,1134.0586 Q868.3945,1134.1758 867.8672,1134.1758 Q865.9922,1134.1758 864.9961,1132.9453 Q864.0117,1131.7031 864.0117,1129.3594 Q864.0117,1127.0156 864.9961,1125.7734 Q865.9922,1124.5313 867.8672,1124.5313 Q868.3945,1124.5313 868.875,1124.6484 Q869.3672,1124.7656 869.7891,1124.9883 L869.7891,1127.0273 Q869.3203,1126.5938 868.875,1126.3945 Q868.4297,1126.1836 867.9609,1126.1836 Q866.9531,1126.1836 866.4375,1126.9922 Q865.9219,1127.7891 865.9219,1129.3594 Q865.9219,1130.9297 866.4375,1131.7383 Q866.9531,1132.5352 867.9609,1132.5352 Q868.4297,1132.5352 868.875,1132.3359 Q869.3203,1132.125 869.7891,1131.6914 L869.7891,1133.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="92.25" x="882.9375" y="1132.6157">PiecePositionPoints</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="767.25" x2="1066.5" y1="1141.5" y2="1141.5"/><ellipse cx="774.75" cy="1149.75" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="144" x="781.5" y="1152.1578">points_array : GamePointsArray_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="767.25" x2="1066.5" y1="1157.1035" y2="1157.1035"/><ellipse cx="774.75" cy="1165.3535" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="88.5" x="781.5" y="1167.7614">PiecePositionPoints()</text><ellipse cx="774.75" cy="1174.957" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="255" x="781.5" y="1177.3649">PiecePositionPoints(GamePointsArray_t game_points_array)</text><ellipse cx="774.75" cy="1184.5605" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="244.5" x="781.5" y="1186.9684">PiecePositionPoints(BPOPointsEKeys&amp; bpo_points_ekeys)</text><ellipse cx="774.75" cy="1194.1641" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="245.25" x="781.5" y="1196.5719">PiecePositionPoints(BPOPointsSKeys&amp; bpo_points_skeys)</text><ellipse cx="774.75" cy="1203.7676" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="151.5" x="781.5" y="1206.1754">PiecePositionPoints(string json_file)</text><ellipse cx="774.75" cy="1213.3711" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="176.25" x="781.5" y="1215.7789">PointsArraytoEMap() : GamePointsEMap_t</text><ellipse cx="774.75" cy="1222.9746" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="781.5" y="1225.3824">PointsArrayToSmap() : GamePointsSMap_t</text><ellipse cx="774.75" cy="1232.5781" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="278.25" x="781.5" y="1234.986">ImplementGetValueOfPieceAtPosition(PieceColor color, PieceType</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="177" x="781.5" y="1244.5895">piece_type, BoardSpace space) : Points_t</text><ellipse cx="774.75" cy="1251.7852" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="249.75" x="781.5" y="1254.193">TeamPointsArrayToEMap(TeamPointsArray_t team_array) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="80.25" x="781.5" y="1263.7965">TeamPointsEMap_t</text><!--MD5=[2b66915f197d6d93a1dae0ae0f338fb9]
class moveselection.EqualScoreMoves--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="64.8105" id="moveselection.EqualScoreMoves" style="stroke: #A80036; stroke-width: 1.125;" width="165" x="2449.875" y="1956.75"/><ellipse cx="2487.9375" cy="1968.75" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2490.1641,1972.9805 Q2489.7305,1973.2031 2489.25,1973.3086 Q2488.7695,1973.4258 2488.2422,1973.4258 Q2486.3672,1973.4258 2485.3711,1972.1953 Q2484.3867,1970.9531 2484.3867,1968.6094 Q2484.3867,1966.2656 2485.3711,1965.0234 Q2486.3672,1963.7813 2488.2422,1963.7813 Q2488.7695,1963.7813 2489.25,1963.8984 Q2489.7422,1964.0156 2490.1641,1964.2383 L2490.1641,1966.2773 Q2489.6953,1965.8438 2489.25,1965.6445 Q2488.8047,1965.4336 2488.3359,1965.4336 Q2487.3281,1965.4336 2486.8125,1966.2422 Q2486.2969,1967.0391 2486.2969,1968.6094 Q2486.2969,1970.1797 2486.8125,1970.9883 Q2487.3281,1971.7852 2488.3359,1971.7852 Q2488.8047,1971.7852 2489.25,1971.5859 Q2489.6953,1971.375 2490.1641,1970.9414 L2490.1641,1972.9805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="82.5" x="2503.3125" y="1971.8657">EqualScoreMoves</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2450.625" x2="2614.125" y1="1980.75" y2="1980.75"/><ellipse cx="2458.125" cy="1989" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="144" x="2464.875" y="1991.4078">move_collection_ : MoveCollection</text><ellipse cx="2458.125" cy="1998.6035" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="101.25" x="2464.875" y="2001.0114">shared_score : Points_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2450.625" x2="2614.125" y1="2005.957" y2="2005.957"/><ellipse cx="2458.125" cy="2014.207" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="145.5" x="2464.875" y="2016.6149">move_collection() : MoveCollection</text><!--MD5=[38ac2b9e7a052c7f7fbc46e592d9e989]
class moveselection.MinimaxCalcResult--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="141.6387" id="moveselection.MinimaxCalcResult" style="stroke: #A80036; stroke-width: 1.125;" width="287.25" x="1974" y="2071.875"/><ellipse cx="2071.6875" cy="2083.875" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2073.9141,2088.1055 Q2073.4805,2088.3281 2073,2088.4336 Q2072.5195,2088.5508 2071.9922,2088.5508 Q2070.1172,2088.5508 2069.1211,2087.3203 Q2068.1367,2086.0781 2068.1367,2083.7344 Q2068.1367,2081.3906 2069.1211,2080.1484 Q2070.1172,2078.9063 2071.9922,2078.9063 Q2072.5195,2078.9063 2073,2079.0234 Q2073.4922,2079.1406 2073.9141,2079.3633 L2073.9141,2081.4023 Q2073.4453,2080.9688 2073,2080.7695 Q2072.5547,2080.5586 2072.0859,2080.5586 Q2071.0781,2080.5586 2070.5625,2081.3672 Q2070.0469,2082.1641 2070.0469,2083.7344 Q2070.0469,2085.3047 2070.5625,2086.1133 Q2071.0781,2086.9102 2072.0859,2086.9102 Q2072.5547,2086.9102 2073,2086.7109 Q2073.4453,2086.5 2073.9141,2086.0664 L2073.9141,2088.1055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="85.5" x="2087.0625" y="2086.9907">MinimaxCalcResult</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1974.75" x2="2260.5" y1="2095.875" y2="2095.875"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1980" y="2101.875"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="163.5" x="1989" y="2106.5328">remaining_search_depth_ : DepthType</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1980" y="2111.4785"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="173.25" x="1989" y="2116.1364">equal_score_moves_ : EqualScoreMoves</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1980" y="2121.082"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="141.75" x="1989" y="2125.7399">result_type_ : MinimaxResultType</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1974.75" x2="2260.5" y1="2130.6855" y2="2130.6855"/><ellipse cx="1982.25" cy="2138.9355" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="84.75" x="1989" y="2141.3434">MinimaxCalcResult()</text><ellipse cx="1982.25" cy="2148.5391" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="264.75" x="1989" y="2150.9469">MinimaxCalcResult(DepthType depth, MinimaxResultType type,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="109.5" x="1989" y="2160.5504">EqualScoreMoves moves)</text><ellipse cx="1982.25" cy="2167.7461" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="165" x="1989" y="2170.1539">remaining_search_depth() : DepthType</text><ellipse cx="1982.25" cy="2177.3496" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="174.75" x="1989" y="2179.7574">equal_score_moves() : EqualScoreMoves</text><ellipse cx="1982.25" cy="2186.9531" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="106.5" x="1989" y="2189.361">moves() : MoveCollection</text><ellipse cx="1982.25" cy="2196.5566" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="73.5" x="1989" y="2198.9645">Score() : Points_t</text><ellipse cx="1982.25" cy="2206.1602" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="72.75" x="1989" y="2208.568">result_type() : int</text><!--MD5=[d42577dd64189f8caa2c7295600b1992]
class moveselection.MinimaxMoveEvaluator--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="756.2637" id="moveselection.MinimaxMoveEvaluator" style="stroke: #A80036; stroke-width: 1.125;" width="761.25" x="536.25" y="1435.5"/><ellipse cx="547.5" cy="1447.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M549.7266,1451.7305 Q549.293,1451.9531 548.8125,1452.0586 Q548.332,1452.1758 547.8047,1452.1758 Q545.9297,1452.1758 544.9336,1450.9453 Q543.9492,1449.7031 543.9492,1447.3594 Q543.9492,1445.0156 544.9336,1443.7734 Q545.9297,1442.5313 547.8047,1442.5313 Q548.332,1442.5313 548.8125,1442.6484 Q549.3047,1442.7656 549.7266,1442.9883 L549.7266,1445.0273 Q549.2578,1444.5938 548.8125,1444.3945 Q548.3672,1444.1836 547.8984,1444.1836 Q546.8906,1444.1836 546.375,1444.9922 Q545.8594,1445.7891 545.8594,1447.3594 Q545.8594,1448.9297 546.375,1449.7383 Q546.8906,1450.5352 547.8984,1450.5352 Q548.3672,1450.5352 548.8125,1450.3359 Q549.2578,1450.125 549.7266,1449.6914 L549.7266,1451.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="105" x="558" y="1450.6157">MinimaxMoveEvaluator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="630.75" x="669" y="1433.25"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="629.25" x="669.75" y="1442.354">template&lt;typename ConcreteSpaceInfoProvider, typename ConcreteBoardStateCoordinator, typename ConcretePieceValueProvider&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="537" x2="1296.75" y1="1459.5" y2="1459.5"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1465.5"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="216.75" x="551.25" y="1470.1578">hash_calculator_ : ConcreteBoardStateCoordinator</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1475.1035"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="225.75" x="551.25" y="1479.7614">game_position_points_ : ConcretePieceValueProvider</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1484.707"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="189.75" x="551.25" y="1489.3649">game_board_ : ConcreteSpaceInfoProvider&amp;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1494.3105"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="153.75" x="551.25" y="1498.9684">starting_search_depth_ : DepthType</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1503.9141"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="174.75" x="551.25" y="1508.5719">num_move_selections_ : MoveCountType</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1513.5176"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="132.75" x="551.25" y="1518.1754">evaluating_player_ : PieceColor</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1523.1211"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="285.75" x="551.25" y="1527.7789">move_sorter_ : PreSearchMoveSorter&lt;ConcreteSpaceInfoProvider,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="126" x="551.25" y="1537.3824">ConcretePieceValueProvider&gt;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1542.3281"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="243" x="551.25" y="1546.986">search_summaries_ : moveselection::SearchSummaries</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1551.9316"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="140.25" x="551.25" y="1556.5895">game_over_ : std::atomic&lt;bool&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="537" x2="1296.75" y1="1561.5352" y2="1561.5352"/><ellipse cx="544.5" cy="1569.7852" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="272.25" x="551.25" y="1572.193">MinimaxMoveEvaluator(PieceColor evaluating_player, DepthType</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="283.5" x="551.25" y="1581.7965">starting_search_depth, ConcreteSpaceInfoProvider&amp; game_board,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="270.75" x="551.25" y="1591.4">uint32_t zkey_seed, const ConcretePieceValueProvider&amp; game_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="67.5" x="551.25" y="1601.0035">position_points)</text><ellipse cx="544.5" cy="1608.1992" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="263.25" x="551.25" y="1610.6071">hash_calculator() : ConcreteBoardStateCoordinator&amp; {query}</text><ellipse cx="544.5" cy="1617.8027" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="155.25" x="551.25" y="1620.2106">starting_search_depth() : DepthType</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1625.1563"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294.75" x="551.25" y="1629.8141">EvaluateEndOfGameLeaf(PieceColor cur_player, MinimaxResultType&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="134.25" x="551.25" y="1639.4176">result_type) : EqualScoreMoves</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1644.3633"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="274.5" x="551.25" y="1649.0211">EvaluateNonWinLeaf(PieceColor cur_player, MinimaxResultType&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="134.25" x="551.25" y="1658.6246">result_type) : EqualScoreMoves</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1663.5703"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="286.5" x="551.25" y="1668.2281">FinalizeNodeResult(MinimaxResultType&amp; result_type, Points_t best_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="300" x="551.25" y="1677.8317">eval, MoveCollection best_moves, DepthType remaining_search_depth</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="249" x="551.25" y="1687.4352">, SearchSummary&amp; search_summary) : EqualScoreMoves</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1692.3809"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297" x="551.25" y="1697.0387">HandleEndOfGame(PieceColor cur_player, SearchSummary&amp; search_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="286.5" x="551.25" y="1706.6422">summary, MinimaxResultType&amp; result_type, DepthType remaining_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="144.75" x="551.25" y="1716.2457">search_depth) : EqualScoreMoves</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1721.1914"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="281.25" x="551.25" y="1725.8492">HandleInternalNode(PieceColor cur_player, const MoveCollection&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="279" x="551.25" y="1735.4528">allowed_moves, DepthType&amp; remaining_search_depth, Points_t&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="232.5" x="551.25" y="1745.0563">alpha, Points_t&amp; beta, MinimaxResultType result_type,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294" x="551.25" y="1754.6598">SearchSummary&amp; search_summary, bool use_transposition_table) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="75" x="551.25" y="1764.2633">EqualScoreMoves</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1769.209"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="264" x="551.25" y="1773.8668">HandleLeaf(PieceColor cur_player, SearchSummary&amp; search_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="286.5" x="551.25" y="1783.4703">summary, MinimaxResultType&amp; result_type, DepthType remaining_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="144.75" x="551.25" y="1793.0739">search_depth) : EqualScoreMoves</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1798.0195"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="234.75" x="551.25" y="1802.6774">HandleTrTableHit(SearchSummary&amp; search_summary,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="300" x="551.25" y="1812.2809">MinimaxResultType&amp; result_type, TranspositionTableSearchResult&amp; tr</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="256.5" x="551.25" y="1821.8844">_table_search_result, DepthType remaining_search_depth) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="75" x="551.25" y="1831.4879">EqualScoreMoves</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1836.4336"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="268.5" x="551.25" y="1841.0914">MinimaxRec(const MoveCollection&amp; allowed_moves, DepthType</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="300" x="551.25" y="1850.6949">remaining_search_depth, Points_t alpha, Points_t beta, PieceColor cur</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="296.25" x="551.25" y="1860.2985">_player, SearchSummary&amp; search_summary, bool use_transposition</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="112.5" x="551.25" y="1869.902">_table) : EqualScoreMoves</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1874.8477"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="247.5" x="551.25" y="1879.5055">RunTimedMinimax(const MoveCollection&amp; allowed_moves,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294" x="551.25" y="1889.109">SearchSummary&amp; search_summary, bool use_transposition_table) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="75" x="551.25" y="1898.7125">EqualScoreMoves</text><ellipse cx="544.5" cy="1905.9082" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="268.5" x="551.25" y="1908.316">ImplementSelectMove(MoveCollection&amp; allowed_moves) : Move</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1913.2617"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="270" x="551.25" y="1917.9196">SelectValidMove(const MoveCollection&amp; allowed_moves) : Move</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1922.8652"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="180" x="551.25" y="1927.5231">GetPlayerTotal(PieceColor color) : Points_t</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1932.4688"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="216.75" x="551.25" y="1937.1266">InitializedBestEval(PieceColor cur_player) : Points_t</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1942.0723"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="271.5" x="551.25" y="1946.7301">RecursivelyVisitNodes(Move move, PieceColor cur_player, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="551.25" y="1956.3336">MoveCollection&amp; allowed_moves, DepthType remaining_search_depth</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="292.5" x="551.25" y="1965.9371">, Points_t alpha, Points_t beta, SearchSummary&amp; search_summary,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="168.75" x="551.25" y="1975.5406">bool use_transposition_table) : Points_t</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1980.4863"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="241.5" x="551.25" y="1985.1442">RunFirstSearch(const MoveCollection&amp; allowed_moves) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="78.75" x="551.25" y="1994.7477">SearchSummary&amp;</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="1999.6934"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="254.25" x="551.25" y="2004.3512">RunSecondSearch(const MoveCollection&amp; allowed_moves) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="78.75" x="551.25" y="2013.9547">SearchSummary&amp;</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="2018.9004"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="266.25" x="551.25" y="2023.5582">IsImprovement(Points_t cur_eval, Points_t previous_best_eval,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="122.25" x="551.25" y="2033.1617">PieceColor cur_player) : bool</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="2038.1074"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="279" x="551.25" y="2042.7653">IsPrunable(Points_t&amp; alpha, Points_t&amp; beta, MinimaxResultType&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="175.5" x="551.25" y="2052.3688">result_type, PieceColor cur_player) : bool</text><ellipse cx="544.5" cy="2059.5645" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="252" x="551.25" y="2061.9723">search_summaries() : moveselection::SearchSummaries&amp;</text><ellipse cx="544.5" cy="2069.168" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="87.75" x="551.25" y="2071.5758">KeySizeBits() : size_t</text><ellipse cx="544.5" cy="2078.7715" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="146.25" x="551.25" y="2081.1793">board_state_hex_str() : std::string</text><ellipse cx="544.5" cy="2088.375" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="97.5" x="551.25" y="2090.7828">zkeys_seed() : uint32_t</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="2095.7285"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="280.5" x="551.25" y="2100.3864">GetMinimaxMoveAndStats(const MoveCollection&amp; allowed_moves,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294" x="551.25" y="2109.9899">SearchSummary&amp; search_summary, bool use_transposition_table) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="551.25" y="2119.5934">void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="2124.5391"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="160.5" x="551.25" y="2129.1969">IncrementNumMoveSelections() : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="2134.1426"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294.75" x="551.25" y="2138.8004">UpdateBestMoves(PieceColor cur_player, Move move, MoveCollection</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="281.25" x="551.25" y="2148.4039">&amp; best_moves, Points_t cur_eval, Points_t&amp; previous_best_eval) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="551.25" y="2158.0074">void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="2162.9531"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="290.25" x="551.25" y="2167.611">UpdatePruningParam(Points_t&amp; alpha, Points_t&amp; beta, Points_t cur_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="144.75" x="551.25" y="2177.2145">eval, PieceColor cur_player) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="542.25" y="2182.1602"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="137.25" x="551.25" y="2186.818">initialize_hash_calculator() : void</text><!--MD5=[62cc4d0c75aa2120d5a2cf49bc71585a]
class moveselection.PreSearchMoveSorter--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="103.2246" id="moveselection.PreSearchMoveSorter" style="stroke: #A80036; stroke-width: 1.125;" width="551.25" x="1342.5" y="1687.5"/><ellipse cx="1353.75" cy="1699.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1355.9766,1703.7305 Q1355.543,1703.9531 1355.0625,1704.0586 Q1354.582,1704.1758 1354.0547,1704.1758 Q1352.1797,1704.1758 1351.1836,1702.9453 Q1350.1992,1701.7031 1350.1992,1699.3594 Q1350.1992,1697.0156 1351.1836,1695.7734 Q1352.1797,1694.5313 1354.0547,1694.5313 Q1354.582,1694.5313 1355.0625,1694.6484 Q1355.5547,1694.7656 1355.9766,1694.9883 L1355.9766,1697.0273 Q1355.5078,1696.5938 1355.0625,1696.3945 Q1354.6172,1696.1836 1354.1484,1696.1836 Q1353.1406,1696.1836 1352.625,1696.9922 Q1352.1094,1697.7891 1352.1094,1699.3594 Q1352.1094,1700.9297 1352.625,1701.7383 Q1353.1406,1702.5352 1354.1484,1702.5352 Q1354.6172,1702.5352 1355.0625,1702.3359 Q1355.5078,1702.125 1355.9766,1701.6914 L1355.9766,1703.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="102" x="1364.25" y="1702.6157">PreSearchMoveSorter</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="423.75" x="1472.25" y="1685.25"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="422.25" x="1473" y="1694.354">template&lt;typename ConcreteSpaceInfoProvider, typename ConcretePieceValueProvider&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1343.25" x2="1893" y1="1711.5" y2="1711.5"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1348.5" y="1717.5"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="233.25" x="1357.5" y="1722.1578">game_position_points_ : ConcretePieceValueProvider&amp;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1348.5" y="1727.1035"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="189.75" x="1357.5" y="1731.7614">game_board_ : ConcreteSpaceInfoProvider&amp;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1343.25" x2="1893" y1="1736.707" y2="1736.707"/><ellipse cx="1350.75" cy="1744.957" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="278.25" x="1357.5" y="1747.3649">PreSearchMoveSorter(ConcreteSpaceInfoProvider&amp; game_board,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="225.75" x="1357.5" y="1756.9684">ConcretePieceValueProvider&amp; game_position_points)</text><ellipse cx="1350.75" cy="1764.1641" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="253.5" x="1357.5" y="1766.5719">RateMove(Move move, PieceColor cur_player) : ScoredMove</text><ellipse cx="1350.75" cy="1773.7676" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="1357.5" y="1776.1754">GenerateRankedMoveList(PieceColor cur_player, const MoveCollection</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="210.75" x="1357.5" y="1785.7789">&amp; cur_player_moves) : std::vector&lt;ScoredMove&gt;</text><!--MD5=[53418ded990a81522dc1bcdcd9d3e84f]
class moveselection.RandomMoveEvaluator--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="84.0176" id="moveselection.RandomMoveEvaluator" style="stroke: #A80036; stroke-width: 1.125;" width="367.5" x="733.125" y="1325.25"/><ellipse cx="744.375" cy="1337.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M746.6016,1341.4805 Q746.168,1341.7031 745.6875,1341.8086 Q745.207,1341.9258 744.6797,1341.9258 Q742.8047,1341.9258 741.8086,1340.6953 Q740.8242,1339.4531 740.8242,1337.1094 Q740.8242,1334.7656 741.8086,1333.5234 Q742.8047,1332.2813 744.6797,1332.2813 Q745.207,1332.2813 745.6875,1332.3984 Q746.1797,1332.5156 746.6016,1332.7383 L746.6016,1334.7773 Q746.1328,1334.3438 745.6875,1334.1445 Q745.2422,1333.9336 744.7734,1333.9336 Q743.7656,1333.9336 743.25,1334.7422 Q742.7344,1335.5391 742.7344,1337.1094 Q742.7344,1338.6797 743.25,1339.4883 Q743.7656,1340.2852 744.7734,1340.2852 Q745.2422,1340.2852 745.6875,1340.0859 Q746.1328,1339.875 746.6016,1339.4414 L746.6016,1341.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="106.5" x="754.875" y="1340.3657">RandomMoveEvaluator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="235.5" x="867.375" y="1323"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="868.125" y="1332.104">template&lt;typename ConcreteSpaceInfoProvider&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="733.875" x2="1099.875" y1="1349.25" y2="1349.25"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="739.125" y="1355.25"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="189.75" x="748.125" y="1359.9078">game_board_ : ConcreteSpaceInfoProvider&amp;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="739.125" y="1364.8535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="132.75" x="748.125" y="1369.5114">evaluating_player_ : PieceColor</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="733.875" x2="1099.875" y1="1374.457" y2="1374.457"/><ellipse cx="741.375" cy="1382.707" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="224.25" x="748.125" y="1385.1149">RandomMoveEvaluator(PieceColor evaluating_player,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="182.25" x="748.125" y="1394.7184">ConcreteSpaceInfoProvider&amp; game_board)</text><ellipse cx="741.375" cy="1401.9141" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="268.5" x="748.125" y="1404.3219">ImplementSelectMove(MoveCollection&amp; allowed_moves) : Move</text><!--MD5=[74db69bfb125bb6f0246bbfe285f8702]
class moveselection.ResultDepthCounts--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="84.0176" id="moveselection.ResultDepthCounts" style="stroke: #A80036; stroke-width: 1.125;" width="312" x="2376.375" y="1822.5"/><ellipse cx="2483.8125" cy="1834.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2486.0391,1838.7305 Q2485.6055,1838.9531 2485.125,1839.0586 Q2484.6445,1839.1758 2484.1172,1839.1758 Q2482.2422,1839.1758 2481.2461,1837.9453 Q2480.2617,1836.7031 2480.2617,1834.3594 Q2480.2617,1832.0156 2481.2461,1830.7734 Q2482.2422,1829.5313 2484.1172,1829.5313 Q2484.6445,1829.5313 2485.125,1829.6484 Q2485.6172,1829.7656 2486.0391,1829.9883 L2486.0391,1832.0273 Q2485.5703,1831.5938 2485.125,1831.3945 Q2484.6797,1831.1836 2484.2109,1831.1836 Q2483.2031,1831.1836 2482.6875,1831.9922 Q2482.1719,1832.7891 2482.1719,1834.3594 Q2482.1719,1835.9297 2482.6875,1836.7383 Q2483.2031,1837.5352 2484.2109,1837.5352 Q2484.6797,1837.5352 2485.125,1837.3359 Q2485.5703,1837.125 2486.0391,1836.6914 L2486.0391,1838.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="90.75" x="2499.1875" y="1837.6157">ResultDepthCounts</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2377.125" x2="2687.625" y1="1846.5" y2="1846.5"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="2382.375" y="1852.5"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="207.75" x="2391.375" y="1857.1578">data_ : moveselection::ResultDepthCountsData_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2377.125" x2="2687.625" y1="1862.1035" y2="1862.1035"/><ellipse cx="2384.625" cy="1870.3535" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="215.25" x="2391.375" y="1872.7614">ResultDepthCounts(DepthType max_search_depth)</text><ellipse cx="2384.625" cy="1879.957" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="141.75" x="2391.375" y="1882.3649">data() : ResultDepthCountsData_t</text><ellipse cx="2384.625" cy="1889.5605" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="292.5" x="2391.375" y="1891.9684">IncrementDataAt(MinimaxResultType result_type, DepthType search_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="53.25" x="2391.375" y="1901.5719">depth) : void</text><!--MD5=[df347c09664eb09d7b34aeec97a1d1ad]
class moveselection.SearchSummary--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="362.5195" id="moveselection.SearchSummary" style="stroke: #A80036; stroke-width: 1.125;" width="317.25" x="1959" y="1683.375"/><ellipse cx="2076.5625" cy="1695.375" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2078.7891,1699.6055 Q2078.3555,1699.8281 2077.875,1699.9336 Q2077.3945,1700.0508 2076.8672,1700.0508 Q2074.9922,1700.0508 2073.9961,1698.8203 Q2073.0117,1697.5781 2073.0117,1695.2344 Q2073.0117,1692.8906 2073.9961,1691.6484 Q2074.9922,1690.4063 2076.8672,1690.4063 Q2077.3945,1690.4063 2077.875,1690.5234 Q2078.3672,1690.6406 2078.7891,1690.8633 L2078.7891,1692.9023 Q2078.3203,1692.4688 2077.875,1692.2695 Q2077.4297,1692.0586 2076.9609,1692.0586 Q2075.9531,1692.0586 2075.4375,1692.8672 Q2074.9219,1693.6641 2074.9219,1695.2344 Q2074.9219,1696.8047 2075.4375,1697.6133 Q2075.9531,1698.4102 2076.9609,1698.4102 Q2077.4297,1698.4102 2077.875,1698.2109 Q2078.3203,1698 2078.7891,1697.5664 L2078.7891,1699.6055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="75.75" x="2091.9375" y="1698.4907">SearchSummary</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1959.75" x2="2275.5" y1="1707.375" y2="1707.375"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1965" y="1713.375"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="173.25" x="1974" y="1718.0328">equal_score_moves_ : EqualScoreMoves</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1965" y="1722.9785"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="99" x="1974" y="1727.6364">selected_move_ : Move</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1965" y="1732.582"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="180.75" x="1974" y="1737.2399">result_depth_counts_ : ResultDepthCounts</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1965" y="1742.1855"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="196.5" x="1974" y="1746.8434">transposition_table_hits_ : ResultDepthCounts</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1965" y="1751.7891"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="125.25" x="1974" y="1756.4469">returned_illegal_move_ : bool</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1965" y="1761.3926"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="100.5" x="1974" y="1766.0504">num_collisions_ : size_t</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1965" y="1770.9961"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="87" x="1974" y="1775.6539">num_nodes_ : size_t</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1965" y="1780.5996"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="113.25" x="1974" y="1785.2574">tr_table_size_final_ : size_t</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1965" y="1790.2031"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="117.75" x="1974" y="1794.861">tr_table_size_initial_ : size_t</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1965" y="1799.8066"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="210.75" x="1974" y="1804.4645">time_ : std::chrono::duration&lt;double, std::nano&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1959.75" x2="2275.5" y1="1809.4102" y2="1809.4102"/><ellipse cx="1967.25" cy="1817.6602" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="293.25" x="1974" y="1820.068">SearchSummary(DepthType max_search_depth, size_t tr_table_size_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="25.5" x="1974" y="1829.6715">initial)</text><ellipse cx="1967.25" cy="1836.8672" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="174.75" x="1974" y="1839.275">equal_score_moves() : EqualScoreMoves</text><ellipse cx="1967.25" cy="1846.4707" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="100.5" x="1974" y="1848.8785">selected_move() : Move</text><ellipse cx="1967.25" cy="1856.0742" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="219" x="1974" y="1858.4821">GetResultDepthCounts() : ResultDepthCountsData_t</text><ellipse cx="1967.25" cy="1865.6777" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="236.25" x="1974" y="1868.0856">GetTranspositionTableHits() : ResultDepthCountsData_t</text><ellipse cx="1967.25" cy="1875.2813" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="126.75" x="1974" y="1877.6891">returned_illegal_move() : bool</text><ellipse cx="1967.25" cy="1884.8848" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="102" x="1974" y="1887.2926">num_collisions() : size_t</text><ellipse cx="1967.25" cy="1894.4883" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="88.5" x="1974" y="1896.8961">num_nodes() : size_t</text><ellipse cx="1967.25" cy="1904.0918" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="114.75" x="1974" y="1906.4996">tr_table_size_final() : size_t</text><ellipse cx="1967.25" cy="1913.6953" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="119.25" x="1974" y="1916.1031">tr_table_size_initial() : size_t</text><ellipse cx="1967.25" cy="1923.2988" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="215.25" x="1974" y="1925.7067">time() : std::chrono::duration&lt;double , std::nano&gt;</text><ellipse cx="1967.25" cy="1932.9023" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="288.75" x="1974" y="1935.3102">RecordNodeInfo(MinimaxResultType result_type, DepthType search_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="255.75" x="1974" y="1944.9137">depth, const EqualScoreMoves&amp; equal_score_moves) : void</text><ellipse cx="1967.25" cy="1952.1094" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294.75" x="1974" y="1954.5172">RecordTrTableHit(TranspositionTableSearchResult&amp; tr_table_search_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="213" x="1974" y="1964.1207">result, DepthType remaining_search_depth) : void</text><ellipse cx="1967.25" cy="1971.3164" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="193.5" x="1974" y="1973.7242">SetSelectedMove(Move selected_move) : void</text><ellipse cx="1967.25" cy="1980.9199" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="265.5" x="1974" y="1983.3278">UpdateTranspositionTableHits(MinimaxResultType result_type,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="135" x="1974" y="1992.9313">DepthType search_depth) : void</text><ellipse cx="1967.25" cy="2000.127" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="1974" y="2002.5348">set_equal_score_moves(EqualScoreMoves equal_score_moves) : void</text><ellipse cx="1967.25" cy="2009.7305" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="192" x="1974" y="2012.1383">set_returned_illegal_move(bool status) : void</text><ellipse cx="1967.25" cy="2019.334" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="282.75" x="1974" y="2021.7418">set_time(std::chrono::duration&lt;double, std::nano&gt; search_time) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="1974" y="2031.3453">void</text><ellipse cx="1967.25" cy="2038.541" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="228.75" x="1974" y="2040.9489">set_tr_table_size_final(size_t tr_table_size_final) : void</text><!--MD5=[3addaae3bac3efbb4364c4812869509d]
class moveselection.TranspositionTableSearchResult--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="160.8457" id="moveselection.TranspositionTableSearchResult" style="stroke: #A80036; stroke-width: 1.125;" width="288" x="1474.125" y="2062.5"/><ellipse cx="1539.1875" cy="2074.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1541.4141,2078.7305 Q1540.9805,2078.9531 1540.5,2079.0586 Q1540.0195,2079.1758 1539.4922,2079.1758 Q1537.6172,2079.1758 1536.6211,2077.9453 Q1535.6367,2076.7031 1535.6367,2074.3594 Q1535.6367,2072.0156 1536.6211,2070.7734 Q1537.6172,2069.5313 1539.4922,2069.5313 Q1540.0195,2069.5313 1540.5,2069.6484 Q1540.9922,2069.7656 1541.4141,2069.9883 L1541.4141,2072.0273 Q1540.9453,2071.5938 1540.5,2071.3945 Q1540.0547,2071.1836 1539.5859,2071.1836 Q1538.5781,2071.1836 1538.0625,2071.9922 Q1537.5469,2072.7891 1537.5469,2074.3594 Q1537.5469,2075.9297 1538.0625,2076.7383 Q1538.5781,2077.5352 1539.5859,2077.5352 Q1540.0547,2077.5352 1540.5,2077.3359 Q1540.9453,2077.125 1541.4141,2076.6914 L1541.4141,2078.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="151.5" x="1554.5625" y="2077.6157">TranspositionTableSearchResult</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1474.875" x2="1761.375" y1="2086.5" y2="2086.5"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1480.125" y="2092.5"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="178.5" x="1489.125" y="2097.1578">minimax_calc_result_ : MinimaxCalcResult</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1480.125" y="2102.1035"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="55.5" x="1489.125" y="2106.7614">found_ : bool</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1480.125" y="2111.707"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="97.5" x="1489.125" y="2116.3649">known_collision_ : bool</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1474.875" x2="1761.375" y1="2121.3105" y2="2121.3105"/><ellipse cx="1482.375" cy="2129.5605" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="167.25" x="1489.125" y="2131.9684">score_and_moves() : EqualScoreMoves</text><ellipse cx="1482.375" cy="2139.1641" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="180" x="1489.125" y="2141.5719">minimax_calc_result() : MinimaxCalcResult</text><ellipse cx="1482.375" cy="2148.7676" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="106.5" x="1489.125" y="2151.1754">moves() : MoveCollection</text><ellipse cx="1482.375" cy="2158.3711" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="268.5" x="1489.125" y="2160.7789">IsConsistentWith(const MoveCollection&amp; allowed_moves) : bool</text><ellipse cx="1482.375" cy="2167.9746" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="57" x="1489.125" y="2170.3824">found() : bool</text><ellipse cx="1482.375" cy="2177.5781" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="99" x="1489.125" y="2179.986">known_collision() : bool</text><ellipse cx="1482.375" cy="2187.1816" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="72.75" x="1489.125" y="2189.5895">result_type() : int</text><ellipse cx="1482.375" cy="2196.7852" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="122.25" x="1489.125" y="2199.193">set_found(bool status) : void</text><ellipse cx="1482.375" cy="2206.3887" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="164.25" x="1489.125" y="2208.7965">set_known_collision(bool status) : void</text><ellipse cx="1482.375" cy="2215.9922" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="243" x="1489.125" y="2218.4">set_minimax_calc_result(MinimaxCalcResult result) : void</text><!--MD5=[562974923b6c3ebbe7c3eafd5d9337e9]
class moveselection.MinimaxResultType--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="141.6387" id="moveselection.MinimaxResultType" style="stroke: #A80036; stroke-width: 1.125;" width="111.75" x="2476.5" y="2071.875"/><ellipse cx="2487.75" cy="2083.875" fill="#EB937F" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2490.832,2088.375 L2485.043,2088.375 L2485.043,2079.082 L2490.832,2079.082 L2490.832,2080.6992 L2486.8828,2080.6992 L2486.8828,2082.7031 L2490.457,2082.7031 L2490.457,2084.3203 L2486.8828,2084.3203 L2486.8828,2086.7578 L2490.832,2086.7578 L2490.832,2088.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="87.75" x="2498.25" y="2086.9907">MinimaxResultType</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2477.25" x2="2587.5" y1="2095.875" y2="2095.875"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="52.5" x="2481" y="2106.5328">kAlphaPrune</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="48.75" x="2481" y="2116.1364">kBetaPrune</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="26.25" x="2481" y="2125.7399">kDraw</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="69.75" x="2481" y="2135.3434">kEvaluatorLoses</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="63.75" x="2481" y="2144.9469">kEvaluatorWins</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="86.25" x="2481" y="2154.5504">kFullyEvaluatedNode</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="21" x="2481" y="2164.1539">kMax</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="18.75" x="2481" y="2173.7574">kMin</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="61.5" x="2481" y="2183.361">kStandardLeaf</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="48" x="2481" y="2192.9645">kTrTableHit</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="42.75" x="2481" y="2202.568">kUnknown</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2477.25" x2="2587.5" y1="2207.5137" y2="2207.5137"/><!--MD5=[4b0abb9ea25f80a510d172507e0f157e]
class moveselection.ScoredMove--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="55.207" id="moveselection.ScoredMove" style="stroke: #A80036; stroke-width: 1.125;" width="86.25" x="873.75" y="2217.75"/><ellipse cx="887.3625" cy="2229.75" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M889.5891,2233.9805 Q889.1555,2234.2031 888.675,2234.3086 Q888.1945,2234.4258 887.6672,2234.4258 Q885.7922,2234.4258 884.7961,2233.1953 Q883.8117,2231.9531 883.8117,2229.6094 Q883.8117,2227.2656 884.7961,2226.0234 Q885.7922,2224.7813 887.6672,2224.7813 Q888.1945,2224.7813 888.675,2224.8984 Q889.1672,2225.0156 889.5891,2225.2383 L889.5891,2227.2773 Q889.1203,2226.8438 888.675,2226.6445 Q888.2297,2226.4336 887.7609,2226.4336 Q886.7531,2226.4336 886.2375,2227.2422 Q885.7219,2228.0391 885.7219,2229.6094 Q885.7219,2231.1797 886.2375,2231.9883 Q886.7531,2232.7852 887.7609,2232.7852 Q888.2297,2232.7852 888.675,2232.5859 Q889.1203,2232.375 889.5891,2231.9414 L889.5891,2233.9805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="57" x="898.3875" y="2232.8657">ScoredMove</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="874.5" x2="959.25" y1="2241.75" y2="2241.75"/><ellipse cx="882" cy="2250" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="54" x="888.75" y="2252.4078">move : Move</text><ellipse cx="882" cy="2259.6035" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="66.75" x="888.75" y="2262.0114">score : Points_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="874.5" x2="959.25" y1="2266.957" y2="2266.957"/><!--MD5=[2b0b92ad818ce0190ddd251c55b4b0ae]
class moveselection.SearchSummaries--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="93.6211" id="moveselection.SearchSummaries" style="stroke: #A80036; stroke-width: 1.125;" width="317.25" x="1459.5" y="1817.625"/><ellipse cx="1572.5625" cy="1829.625" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1574.7891,1833.8555 Q1574.3555,1834.0781 1573.875,1834.1836 Q1573.3945,1834.3008 1572.8672,1834.3008 Q1570.9922,1834.3008 1569.9961,1833.0703 Q1569.0117,1831.8281 1569.0117,1829.4844 Q1569.0117,1827.1406 1569.9961,1825.8984 Q1570.9922,1824.6563 1572.8672,1824.6563 Q1573.3945,1824.6563 1573.875,1824.7734 Q1574.3672,1824.8906 1574.7891,1825.1133 L1574.7891,1827.1523 Q1574.3203,1826.7188 1573.875,1826.5195 Q1573.4297,1826.3086 1572.9609,1826.3086 Q1571.9531,1826.3086 1571.4375,1827.1172 Q1570.9219,1827.9141 1570.9219,1829.4844 Q1570.9219,1831.0547 1571.4375,1831.8633 Q1571.9531,1832.6602 1572.9609,1832.6602 Q1573.4297,1832.6602 1573.875,1832.4609 Q1574.3203,1832.25 1574.7891,1831.8164 L1574.7891,1833.8555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="84.75" x="1587.9375" y="1832.7407">SearchSummaries</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1460.25" x2="1776" y1="1841.625" y2="1841.625"/><ellipse cx="1467.75" cy="1849.875" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="270.75" x="1474.5" y="1852.2828">extra_searches : std::map&lt;MoveCountType, SearchSummary&gt;</text><ellipse cx="1467.75" cy="1859.4785" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="201" x="1474.5" y="1861.8864">first_searches : std::vector&lt;SearchSummary&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1460.25" x2="1776" y1="1866.832" y2="1866.832"/><ellipse cx="1467.75" cy="1875.082" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="288" x="1474.5" y="1877.4899">NewExtraSearch(DepthType search_depth, MoveCountType search_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="245.25" x="1474.5" y="1887.0934">number, size_t tr_table_size_current) : SearchSummary&amp;</text><ellipse cx="1467.75" cy="1894.2891" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="1474.5" y="1896.6969">NewFirstSearch(DepthType search_depth, size_t tr_table_size_initial) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="78.75" x="1474.5" y="1906.3004">SearchSummary&amp;</text><!--MD5=[40e3b87112ef1432c9c1a601cdf178e3]
class jsonio.NlohmannJsonUtility--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="151.2422" id="jsonio.NlohmannJsonUtility" style="stroke: #A80036; stroke-width: 1.125;" width="318.75" x="757.5" y="2329.5"/><ellipse cx="867.5625" cy="2341.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M869.7891,2345.7305 Q869.3555,2345.9531 868.875,2346.0586 Q868.3945,2346.1758 867.8672,2346.1758 Q865.9922,2346.1758 864.9961,2344.9453 Q864.0117,2343.7031 864.0117,2341.3594 Q864.0117,2339.0156 864.9961,2337.7734 Q865.9922,2336.5313 867.8672,2336.5313 Q868.3945,2336.5313 868.875,2336.6484 Q869.3672,2336.7656 869.7891,2336.9883 L869.7891,2339.0273 Q869.3203,2338.5938 868.875,2338.3945 Q868.4297,2338.1836 867.9609,2338.1836 Q866.9531,2338.1836 866.4375,2338.9922 Q865.9219,2339.7891 865.9219,2341.3594 Q865.9219,2342.9297 866.4375,2343.7383 Q866.9531,2344.5352 867.9609,2344.5352 Q868.4297,2344.5352 868.875,2344.3359 Q869.3203,2344.125 869.7891,2343.6914 L869.7891,2345.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="92.25" x="882.9375" y="2344.6157">NlohmannJsonUtility</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="758.25" x2="1075.5" y1="2353.5" y2="2353.5"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="758.25" x2="1075.5" y1="2359.5" y2="2359.5"/><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="763.5" y="2365.5"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="288" x="772.5" y="2370.1578">ImportToSerializedJson(const std::string file_path) : nlohmann::json</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="763.5" y="2375.1035"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="299.25" x="772.5" y="2379.7614">Serialize(piecepoints::BPOPointsSKeys&amp; bpo_points) : nlohmann::json</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="763.5" y="2384.707"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="242.25" x="772.5" y="2389.3649">Deserialize(nlohmann::json serialized_json, piecepoints::</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="156.75" x="772.5" y="2398.9684">BPOPointsSKeys&amp; bpo_points) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="763.5" y="2403.9141"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="772.5" y="2408.5719">ExportSerializedJson(nlohmann::json serialized_json, const std::string</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="65.25" x="772.5" y="2418.1754">file_path) : void</text><ellipse cx="765.75" cy="2425.3711" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="261" x="772.5" y="2427.7789">ImplementExport(T&amp; object, const std::string file_path) : void</text><ellipse cx="765.75" cy="2434.9746" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="286.5" x="772.5" y="2437.3824">ImplementExport(piecepoints::BPOPointsSKeys&amp; bpo_points, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="112.5" x="772.5" y="2446.986">std::string file_path) : void</text><ellipse cx="765.75" cy="2454.1816" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="261.75" x="772.5" y="2456.5895">ImplementImport(T&amp; object, const std::string file_path) : void</text><ellipse cx="765.75" cy="2463.7852" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="287.25" x="772.5" y="2466.193">ImplementImport(piecepoints::BPOPointsSKeys&amp; bpo_points, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="112.5" x="772.5" y="2475.7965">std::string file_path) : void</text><!--MD5=[f28f77cfb16419dcc61a1beab4a14e38]
class gameboard.GameBoard--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="304.8984" id="gameboard.GameBoard" style="stroke: #A80036; stroke-width: 1.125;" width="315.75" x="759" y="167.625"/><ellipse cx="886.3125" cy="179.625" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M888.5391,183.8555 Q888.1055,184.0781 887.625,184.1836 Q887.1445,184.3008 886.6172,184.3008 Q884.7422,184.3008 883.7461,183.0703 Q882.7617,181.8281 882.7617,179.4844 Q882.7617,177.1406 883.7461,175.8984 Q884.7422,174.6563 886.6172,174.6563 Q887.1445,174.6563 887.625,174.7734 Q888.1172,174.8906 888.5391,175.1133 L888.5391,177.1523 Q888.0703,176.7188 887.625,176.5195 Q887.1797,176.3086 886.7109,176.3086 Q885.7031,176.3086 885.1875,177.1172 Q884.6719,177.9141 884.6719,179.4844 Q884.6719,181.0547 885.1875,181.8633 Q885.7031,182.6602 886.7109,182.6602 Q887.1797,182.6602 887.625,182.4609 Q888.0703,182.25 888.5391,181.8164 L888.5391,183.8555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="54.75" x="901.6875" y="182.7407">GameBoard</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="759.75" x2="1074" y1="191.625" y2="191.625"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="765" y="197.625"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="111.75" x="774" y="202.2828">board_map_ : BoardMap_t</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="765" y="207.2285"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="147" x="774" y="211.8864">move_calculator_ : MoveCalculator</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="765" y="216.832"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="192.75" x="774" y="221.4899">moves_since_last_capture_ : MoveCountType</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="765" y="226.4355"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="256.5" x="774" y="231.0934">move_log_ : std::map&lt;PieceColor, vector&lt;ExecutedMove&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="759.75" x2="1074" y1="236.0391" y2="236.0391"/><ellipse cx="767.25" cy="244.2891" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="57" x="774" y="246.6969">GameBoard()</text><ellipse cx="767.25" cy="253.8926" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="209.25" x="774" y="256.3004">GameBoard(const BoardMapInt_t starting_board)</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="765" y="261.2461"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="193.5" x="774" y="265.9039">vector&lt;function&lt;void(const ExecutedMove &amp;)</text><ellipse cx="767.25" cy="273.0996" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="129" x="774" y="275.5074">map() : BoardMap_t&amp; {query}</text><ellipse cx="767.25" cy="282.7031" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="256.5" x="774" y="285.111">ImplementExecuteMove(const Move&amp; move) : ExecutedMove</text><ellipse cx="767.25" cy="292.3066" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="774" y="294.7145">GetOccupantAt(const BoardSpace&amp; space) : GamePiece {query}</text><ellipse cx="767.25" cy="301.9102" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="266.25" x="774" y="304.318">ImplementCalcFinalMovesOf(PieceColor color) : MoveCollection</text><ellipse cx="767.25" cy="311.5137" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294" x="774" y="313.9215">ImplementGetColor(const BoardSpace&amp; space) : PieceColor {query}</text><ellipse cx="767.25" cy="321.1172" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="289.5" x="774" y="323.525">ImplementGetType(const BoardSpace&amp; space) : PieceType {query}</text><ellipse cx="767.25" cy="330.7207" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="107.25" x="774" y="333.1285">ImplementIsDraw() : bool</text><ellipse cx="767.25" cy="340.3242" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="296.25" x="774" y="342.7321">IsCaptureMove(const ExecutedMove&amp; executed_move) : bool {query}</text><ellipse cx="767.25" cy="349.9277" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="142.5" x="774" y="352.3356">IsInCheck(PieceColor color) : bool</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="765" y="357.2813"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="183" x="774" y="361.9391">ViolatesRepeatRule(PieceColor color) : bool</text><ellipse cx="767.25" cy="369.1348" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="276.75" x="774" y="371.5426">move_log() : std::map&lt;PieceColor , vector&lt;ExecutedMove&gt;&gt;&amp; {</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="29.25" x="774" y="381.1461">query}</text><ellipse cx="767.25" cy="388.3418" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="267.75" x="774" y="390.7496">ImplementGetAllSpacesOccupiedBy(PieceColor color) : vector&lt;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="96" x="774" y="400.3531">BoardSpace&gt; {query}</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="765" y="405.2988"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="258" x="774" y="409.9567">AddToMoveLog(const ExecutedMove&amp; executed_move) : void</text><ellipse cx="767.25" cy="417.1523" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="247.5" x="774" y="419.5602">ImplementAttachMoveCallback(const function&lt;void ( const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="153.75" x="774" y="429.1637">ExecutedMove&amp; )&gt;&amp; callback) : void</text><ellipse cx="767.25" cy="436.3594" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="283.5" x="774" y="438.7672">ImplementUndoMove(const ExecutedMove&amp; executed_move) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="765" y="443.7129"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="287.25" x="774" y="448.3707">RemoveFromMoveLog(const ExecutedMove&amp; executed_move) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="765" y="453.3164"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="288" x="774" y="457.9742">SetOccupantAt(const BoardSpace&amp; space, GamePiece piece) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="765" y="462.9199"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="279.75" x="774" y="467.5778">UpdateStateTracker(const ExecutedMove&amp; executed_move) : void</text><!--MD5=[e3f64a513359f38a9fdabc4356bc813e]
class gameboard.MoveCalculator--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="160.8457" id="gameboard.MoveCalculator" style="stroke: #A80036; stroke-width: 1.125;" width="319.5" x="1458.375" y="167.25"/><ellipse cx="1579.3125" cy="179.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1581.5391,183.4805 Q1581.1055,183.7031 1580.625,183.8086 Q1580.1445,183.9258 1579.6172,183.9258 Q1577.7422,183.9258 1576.7461,182.6953 Q1575.7617,181.4531 1575.7617,179.1094 Q1575.7617,176.7656 1576.7461,175.5234 Q1577.7422,174.2813 1579.6172,174.2813 Q1580.1445,174.2813 1580.625,174.3984 Q1581.1172,174.5156 1581.5391,174.7383 L1581.5391,176.7773 Q1581.0703,176.3438 1580.625,176.1445 Q1580.1797,175.9336 1579.7109,175.9336 Q1578.7031,175.9336 1578.1875,176.7422 Q1577.6719,177.5391 1577.6719,179.1094 Q1577.6719,180.6797 1578.1875,181.4883 Q1578.7031,182.2852 1579.7109,182.2852 Q1580.1797,182.2852 1580.625,182.0859 Q1581.0703,181.875 1581.5391,181.4414 L1581.5391,183.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="71.25" x="1594.6875" y="182.3657">MoveCalculator</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1459.125" x2="1777.125" y1="191.25" y2="191.25"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1464.375" y="197.25"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="192.75" x="1473.375" y="201.9078">piece_dispatch_array_ : PieceDispatchArray_t</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1464.375" y="206.8535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="118.5" x="1473.375" y="211.5114">piece_moves_ : PieceMoves</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1459.125" x2="1777.125" y1="216.457" y2="216.457"/><ellipse cx="1466.625" cy="224.707" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="70.5" x="1473.375" y="227.1149">MoveCalculator()</text><ellipse cx="1466.625" cy="234.3105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="300" x="1473.375" y="236.7184">CalcAllMovesNoCheckTest(PieceColor color, const BoardMap_t&amp; board</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="98.25" x="1473.375" y="246.3219">_map) : MoveCollection</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1464.375" y="251.2676"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="256.5" x="1473.375" y="255.9254">ImplementCalcAllMovesNoCheckTest(PieceColor color, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="183.75" x="1473.375" y="265.5289">BoardMap_t&amp; board_map) : MoveCollection</text><ellipse cx="1466.625" cy="272.7246" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="276" x="1473.375" y="275.1324">IsOccupied(const BoardMap_t&amp; board_map, const BoardSpace&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="55.5" x="1473.375" y="284.736">space) : bool</text><ellipse cx="1466.625" cy="291.9316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="282" x="1473.375" y="294.3395">CalcMovesFrom(const BoardSpace space, MoveCollection&amp; team_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="198.75" x="1473.375" y="303.943">moves, const BoardMap_t&amp; board_map) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1464.375" y="308.8887"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="1473.375" y="313.5465">ImplementCalcMovesFrom(const BoardSpace space, MoveCollection&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="225" x="1473.375" y="323.15">team_moves, const BoardMap_t&amp; board_map) : void</text><!--MD5=[f340c70cccea0d485282155a1e9d08c4]
class gameboard.PieceMoves--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="247.2773" id="gameboard.PieceMoves" style="stroke: #A80036; stroke-width: 1.125;" width="319.5" x="1957.875" y="167.25"/><ellipse cx="2087.0625" cy="179.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2089.2891,183.4805 Q2088.8555,183.7031 2088.375,183.8086 Q2087.8945,183.9258 2087.3672,183.9258 Q2085.4922,183.9258 2084.4961,182.6953 Q2083.5117,181.4531 2083.5117,179.1094 Q2083.5117,176.7656 2084.4961,175.5234 Q2085.4922,174.2813 2087.3672,174.2813 Q2087.8945,174.2813 2088.375,174.3984 Q2088.8672,174.5156 2089.2891,174.7383 L2089.2891,176.7773 Q2088.8203,176.3438 2088.375,176.1445 Q2087.9297,175.9336 2087.4609,175.9336 Q2086.4531,175.9336 2085.9375,176.7422 Q2085.4219,177.5391 2085.4219,179.1094 Q2085.4219,180.6797 2085.9375,181.4883 Q2086.4531,182.2852 2087.4609,182.2852 Q2087.9297,182.2852 2088.375,182.0859 Q2088.8203,181.875 2089.2891,181.4414 L2089.2891,183.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="54.75" x="2102.4375" y="182.3657">PieceMoves</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1958.625" x2="2276.625" y1="191.25" y2="191.25"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="1958.625" x2="2276.625" y1="197.25" y2="197.25"/><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1963.875" y="203.25"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="201" x="1972.875" y="207.9078">FwdDirection(PieceColor color) : BoardDirection</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1963.875" y="212.8535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281.25" x="1972.875" y="217.5114">ExistsAndPassesColorTest(const BoardMap_t&amp; board_map, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="255" x="1972.875" y="227.1149">BoardSpace&amp; space, PieceColor moving_piece_color) : bool</text><ellipse cx="1966.125" cy="234.3105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="274.5" x="1972.875" y="236.7184">AdvisorMoves(const BoardMap_t&amp; board_map, PieceColor color,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="1972.875" y="246.3219">const BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="1966.125" cy="253.5176" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="275.25" x="1972.875" y="255.9254">CannonMoves(const BoardMap_t&amp; board_map, PieceColor color,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="1972.875" y="265.5289">const BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="1966.125" cy="272.7246" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="300" x="1972.875" y="275.1324">ChariotMoves(const BoardMap_t&amp; board_map, PieceColor color, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="1972.875" y="284.736">BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="1966.125" cy="291.9316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="279.75" x="1972.875" y="294.3395">ElephantMoves(const BoardMap_t&amp; board_map, PieceColor color,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="1972.875" y="303.943">const BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="1966.125" cy="311.1387" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="295.5" x="1972.875" y="313.5465">FlyingGeneralMove(const BoardMap_t&amp; board_map, PieceColor color,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="1972.875" y="323.15">const BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="1966.125" cy="330.3457" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="276.75" x="1972.875" y="332.7535">GeneralMoves(const BoardMap_t&amp; board_map, PieceColor color,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="1972.875" y="342.3571">const BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="1966.125" cy="349.5527" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294.75" x="1972.875" y="351.9606">HorseMoves(const BoardMap_t&amp; board_map, PieceColor color, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="1972.875" y="361.5641">BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="1966.125" cy="368.7598" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="299.25" x="1972.875" y="371.1676">SoldierMoves(const BoardMap_t&amp; board_map, PieceColor color, const</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="1972.875" y="380.7711">BoardSpace&amp; space, MoveCollection&amp; team_moves) : void</text><ellipse cx="1966.125" cy="387.9668" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="288.75" x="1972.875" y="390.3746">StandardGeneralMoves(const BoardMap_t&amp; board_map, PieceColor</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="284.25" x="1972.875" y="399.9781">color, const BoardSpace&amp; space, MoveCollection&amp; team_moves) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="1972.875" y="409.5817">void</text><!--MD5=[894db610bd19f651f695bc6f5ecfd213]
class gameboard.PieceColor--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="64.8105" id="gameboard.PieceColor" style="stroke: #A80036; stroke-width: 1.125;" width="73.5" x="1581.375" y="354"/><ellipse cx="1592.625" cy="366" fill="#EB937F" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1595.707,370.5 L1589.918,370.5 L1589.918,361.207 L1595.707,361.207 L1595.707,362.8242 L1591.7578,362.8242 L1591.7578,364.8281 L1595.332,364.8281 L1595.332,366.4453 L1591.7578,366.4453 L1591.7578,368.8828 L1595.707,368.8828 L1595.707,370.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="49.5" x="1603.125" y="369.1157">PieceColor</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1582.125" x2="1654.125" y1="378" y2="378"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="1585.875" y="388.6578">kBlk</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="18" x="1585.875" y="398.2614">kNul</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="20.25" x="1585.875" y="407.8649">kRed</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1582.125" x2="1654.125" y1="412.8105" y2="412.8105"/><!--MD5=[2c54a598306e0c6090dffecf0afb8ea3]
class gameboard.PieceType--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="112.8281" id="gameboard.PieceType" style="stroke: #A80036; stroke-width: 1.125;" width="71.25" x="1582.5" y="444.75"/><ellipse cx="1593.75" cy="456.75" fill="#EB937F" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1596.832,461.25 L1591.043,461.25 L1591.043,451.957 L1596.832,451.957 L1596.832,453.5742 L1592.8828,453.5742 L1592.8828,455.5781 L1596.457,455.5781 L1596.457,457.1953 L1592.8828,457.1953 L1592.8828,459.6328 L1596.832,459.6328 L1596.832,461.25 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="47.25" x="1604.25" y="459.8657">PieceType</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1583.25" x2="1653" y1="468.75" y2="468.75"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="19.5" x="1587" y="479.4078">kAdv</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="21" x="1587" y="489.0114">kCan</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="21" x="1587" y="498.6149">kCha</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="1587" y="508.2184">kEle</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="21.75" x="1587" y="517.8219">kGen</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="19.5" x="1587" y="527.4254">kHor</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="21" x="1587" y="537.0289">kNnn</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="18" x="1587" y="546.6324">kSol</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1583.25" x2="1653" y1="551.5781" y2="551.5781"/><!--MD5=[d21b34556fa46cff55ccea35ba20f53a]
class gameboard.BoardDirection--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="55.207" id="gameboard.BoardDirection" style="stroke: #A80036; stroke-width: 1.125;" width="93.75" x="201" y="186"/><ellipse cx="212.25" cy="198" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M214.4766,202.2305 Q214.043,202.4531 213.5625,202.5586 Q213.082,202.6758 212.5547,202.6758 Q210.6797,202.6758 209.6836,201.4453 Q208.6992,200.2031 208.6992,197.8594 Q208.6992,195.5156 209.6836,194.2734 Q210.6797,193.0313 212.5547,193.0313 Q213.082,193.0313 213.5625,193.1484 Q214.0547,193.2656 214.4766,193.4883 L214.4766,195.5273 Q214.0078,195.0938 213.5625,194.8945 Q213.1172,194.6836 212.6484,194.6836 Q211.6406,194.6836 211.125,195.4922 Q210.6094,196.2891 210.6094,197.8594 Q210.6094,199.4297 211.125,200.2383 Q211.6406,201.0352 212.6484,201.0352 Q213.1172,201.0352 213.5625,200.8359 Q214.0078,200.625 214.4766,200.1914 L214.4766,202.2305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="69.75" x="222.75" y="201.1157">BoardDirection</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="201.75" x2="294" y1="210" y2="210"/><ellipse cx="209.25" cy="218.25" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="66.75" x="216" y="220.6578">file : BoardIdx_t</text><ellipse cx="209.25" cy="227.8535" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="72.75" x="216" y="230.2614">rank : BoardIdx_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="201.75" x2="294" y1="235.207" y2="235.207"/><!--MD5=[766a7154e5922375fdd8d21f8fc5313b]
class gameboard.BoardSpace--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="112.8281" id="gameboard.BoardSpace" style="stroke: #A80036; stroke-width: 1.125;" width="296.25" x="1470" y="583.5"/><ellipse cx="1586.4375" cy="595.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1588.6641,599.7305 Q1588.2305,599.9531 1587.75,600.0586 Q1587.2695,600.1758 1586.7422,600.1758 Q1584.8672,600.1758 1583.8711,598.9453 Q1582.8867,597.7031 1582.8867,595.3594 Q1582.8867,593.0156 1583.8711,591.7734 Q1584.8672,590.5313 1586.7422,590.5313 Q1587.2695,590.5313 1587.75,590.6484 Q1588.2422,590.7656 1588.6641,590.9883 L1588.6641,593.0273 Q1588.1953,592.5938 1587.75,592.3945 Q1587.3047,592.1836 1586.8359,592.1836 Q1585.8281,592.1836 1585.3125,592.9922 Q1584.7969,593.7891 1584.7969,595.3594 Q1584.7969,596.9297 1585.3125,597.7383 Q1585.8281,598.5352 1586.8359,598.5352 Q1587.3047,598.5352 1587.75,598.3359 Q1588.1953,598.125 1588.6641,597.6914 L1588.6641,599.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="57" x="1601.8125" y="598.6157">BoardSpace</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1470.75" x2="1765.5" y1="607.5" y2="607.5"/><ellipse cx="1478.25" cy="615.75" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="66.75" x="1485" y="618.1578">file : BoardIdx_t</text><ellipse cx="1478.25" cy="625.3535" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="72.75" x="1485" y="627.7614">rank : BoardIdx_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1470.75" x2="1765.5" y1="632.707" y2="632.707"/><ellipse cx="1478.25" cy="640.957" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="276.75" x="1485" y="643.3649">operator+(const BoardDirection direction) : BoardSpace {query}</text><ellipse cx="1478.25" cy="650.5605" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="217.5" x="1485" y="652.9684">IsInCastleOf(const PieceColor color) : bool {query}</text><ellipse cx="1478.25" cy="660.1641" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="233.25" x="1485" y="662.5719">IsInHomelandOf(const PieceColor color) : bool {query}</text><ellipse cx="1478.25" cy="669.7676" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="115.5" x="1485" y="672.1754">IsOnBoard() : bool {query}</text><ellipse cx="1478.25" cy="679.3711" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="219.75" x="1485" y="681.7789">operator!=(const BoardSpace other) : bool {query}</text><ellipse cx="1478.25" cy="688.9746" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="224.25" x="1485" y="691.3824">operator==(const BoardSpace other) : bool {query}</text><!--MD5=[deb5a7bba76322f7f74be6e849a838c5]
class gameboard.CastleEdges--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="74.4141" id="gameboard.CastleEdges" style="stroke: #A80036; stroke-width: 1.125;" width="114.75" x="190.5" y="286.875"/><ellipse cx="216.2625" cy="298.875" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M218.4891,303.1055 Q218.0555,303.3281 217.575,303.4336 Q217.0945,303.5508 216.5672,303.5508 Q214.6922,303.5508 213.6961,302.3203 Q212.7117,301.0781 212.7117,298.7344 Q212.7117,296.3906 213.6961,295.1484 Q214.6922,293.9063 216.5672,293.9063 Q217.0945,293.9063 217.575,294.0234 Q218.0672,294.1406 218.4891,294.3633 L218.4891,296.4023 Q218.0203,295.9688 217.575,295.7695 Q217.1297,295.5586 216.6609,295.5586 Q215.6531,295.5586 215.1375,296.3672 Q214.6219,297.1641 214.6219,298.7344 Q214.6219,300.3047 215.1375,301.1133 Q215.6531,301.9102 216.6609,301.9102 Q217.1297,301.9102 217.575,301.7109 Q218.0203,301.5 218.4891,301.0664 L218.4891,303.1055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="58.5" x="229.9875" y="301.9907">CastleEdges</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="191.25" x2="304.5" y1="310.875" y2="310.875"/><ellipse cx="198.75" cy="319.125" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="89.25" x="205.5" y="321.5328">max_file : BoardIdx_t</text><ellipse cx="198.75" cy="328.7285" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="95.25" x="205.5" y="331.1364">max_rank : BoardIdx_t</text><ellipse cx="198.75" cy="338.332" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="87" x="205.5" y="340.7399">min_file : BoardIdx_t</text><ellipse cx="198.75" cy="347.9355" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="93" x="205.5" y="350.3434">min_rank : BoardIdx_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="191.25" x2="304.5" y1="355.2891" y2="355.2891"/><!--MD5=[b8928ae32e7015fd6822bb34688dd8d0]
class gameboard.ExecutedMove--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="84.0176" id="gameboard.ExecutedMove" style="stroke: #A80036; stroke-width: 1.125;" width="214.5" x="140.625" y="425.25"/><ellipse cx="210.9375" cy="437.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M213.1641,441.4805 Q212.7305,441.7031 212.25,441.8086 Q211.7695,441.9258 211.2422,441.9258 Q209.3672,441.9258 208.3711,440.6953 Q207.3867,439.4531 207.3867,437.1094 Q207.3867,434.7656 208.3711,433.5234 Q209.3672,432.2813 211.2422,432.2813 Q211.7695,432.2813 212.25,432.3984 Q212.7422,432.5156 213.1641,432.7383 L213.1641,434.7773 Q212.6953,434.3438 212.25,434.1445 Q211.8047,433.9336 211.3359,433.9336 Q210.3281,433.9336 209.8125,434.7422 Q209.2969,435.5391 209.2969,437.1094 Q209.2969,438.6797 209.8125,439.4883 Q210.3281,440.2852 211.3359,440.2852 Q211.8047,440.2852 212.25,440.0859 Q212.6953,439.875 213.1641,439.4414 L213.1641,441.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="67.5" x="226.3125" y="440.3657">ExecutedMove</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="141.375" x2="354.375" y1="449.25" y2="449.25"/><ellipse cx="148.875" cy="457.5" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="61.5" x="155.625" y="459.9078">spaces : Move</text><ellipse cx="148.875" cy="467.1035" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="188.25" x="155.625" y="469.5114">moves_since_last_capture : MoveCountType</text><ellipse cx="148.875" cy="476.707" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="186" x="155.625" y="479.1149">destination_piece : gameboard::GamePiece</text><ellipse cx="148.875" cy="486.3105" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="169.5" x="155.625" y="488.7184">moving_piece : gameboard::GamePiece</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="141.375" x2="354.375" y1="493.6641" y2="493.6641"/><ellipse cx="148.875" cy="501.9141" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="195" x="155.625" y="504.3219">operator==(const ExecutedMove other) : bool</text><!--MD5=[19bac8a2412d0bffd71abe2abcb346b3]
class gameboard.GamePiece--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="93.6211" id="gameboard.GamePiece" style="stroke: #A80036; stroke-width: 1.125;" width="247.5" x="793.125" y="499.125"/><ellipse cx="887.4375" cy="511.125" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M889.6641,515.3555 Q889.2305,515.5781 888.75,515.6836 Q888.2695,515.8008 887.7422,515.8008 Q885.8672,515.8008 884.8711,514.5703 Q883.8867,513.3281 883.8867,510.9844 Q883.8867,508.6406 884.8711,507.3984 Q885.8672,506.1563 887.7422,506.1563 Q888.2695,506.1563 888.75,506.2734 Q889.2422,506.3906 889.6641,506.6133 L889.6641,508.6523 Q889.1953,508.2188 888.75,508.0195 Q888.3047,507.8086 887.8359,507.8086 Q886.8281,507.8086 886.3125,508.6172 Q885.7969,509.4141 885.7969,510.9844 Q885.7969,512.5547 886.3125,513.3633 Q886.8281,514.1602 887.8359,514.1602 Q888.3047,514.1602 888.75,513.9609 Q889.1953,513.75 889.6641,513.3164 L889.6641,515.3555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="52.5" x="902.8125" y="514.2407">GamePiece</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="793.875" x2="1039.875" y1="523.125" y2="523.125"/><ellipse cx="801.375" cy="531.375" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="102" x="808.125" y="533.7828">piece_color : PieceColor</text><ellipse cx="801.375" cy="540.9785" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="96.75" x="808.125" y="543.3864">piece_type : PieceType</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="793.875" x2="1039.875" y1="548.332" y2="548.332"/><ellipse cx="801.375" cy="556.582" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="54" x="808.125" y="558.9899">GamePiece()</text><ellipse cx="801.375" cy="566.1855" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="105" x="808.125" y="568.5934">GamePiece(int int_piece)</text><ellipse cx="801.375" cy="575.7891" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="192.75" x="808.125" y="578.1969">GamePiece(PieceType type, PieceColor color)</text><ellipse cx="801.375" cy="585.3926" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="228" x="808.125" y="587.8004">operator==(const GamePiece&amp; other) : bool {query}</text><!--MD5=[270a10bb1754b1cb88db8637c47ff159]
class gameboard.Move--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="64.8105" id="gameboard.Move" style="stroke: #A80036; stroke-width: 1.125;" width="176.25" x="828.75" y="619.5"/><ellipse cx="901.6875" cy="631.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M903.9141,635.7305 Q903.4805,635.9531 903,636.0586 Q902.5195,636.1758 901.9922,636.1758 Q900.1172,636.1758 899.1211,634.9453 Q898.1367,633.7031 898.1367,631.3594 Q898.1367,629.0156 899.1211,627.7734 Q900.1172,626.5313 901.9922,626.5313 Q902.5195,626.5313 903,626.6484 Q903.4922,626.7656 903.9141,626.9883 L903.9141,629.0273 Q903.4453,628.5938 903,628.3945 Q902.5547,628.1836 902.0859,628.1836 Q901.0781,628.1836 900.5625,628.9922 Q900.0469,629.7891 900.0469,631.3594 Q900.0469,632.9297 900.5625,633.7383 Q901.0781,634.5352 902.0859,634.5352 Q902.5547,634.5352 903,634.3359 Q903.4453,634.125 903.9141,633.6914 L903.9141,635.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="24" x="917.0625" y="634.6157">Move</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="829.5" x2="1004.25" y1="643.5" y2="643.5"/><ellipse cx="837" cy="651.75" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="131.25" x="843.75" y="654.1578">end : gameboard::BoardSpace</text><ellipse cx="837" cy="661.3535" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="135.75" x="843.75" y="663.7614">start : gameboard::BoardSpace</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="829.5" x2="1004.25" y1="668.707" y2="668.707"/><ellipse cx="837" cy="676.957" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="156.75" x="843.75" y="679.3649">operator==(const Move other) : bool</text><!--MD5=[6ecf8cc3a343bc0eea645102e9169b1e]
class gameboard.MoveCollection--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="160.8457" id="gameboard.MoveCollection" style="stroke: #A80036; stroke-width: 1.125;" width="308.25" x="93.75" y="535.5"/><ellipse cx="209.8125" cy="547.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M212.0391,551.7305 Q211.6055,551.9531 211.125,552.0586 Q210.6445,552.1758 210.1172,552.1758 Q208.2422,552.1758 207.2461,550.9453 Q206.2617,549.7031 206.2617,547.3594 Q206.2617,545.0156 207.2461,543.7734 Q208.2422,542.5313 210.1172,542.5313 Q210.6445,542.5313 211.125,542.6484 Q211.6172,542.7656 212.0391,542.9883 L212.0391,545.0273 Q211.5703,544.5938 211.125,544.3945 Q210.6797,544.1836 210.2109,544.1836 Q209.2031,544.1836 208.6875,544.9922 Q208.1719,545.7891 208.1719,547.3594 Q208.1719,548.9297 208.6875,549.7383 Q209.2031,550.5352 210.2109,550.5352 Q210.6797,550.5352 211.125,550.3359 Q211.5703,550.125 212.0391,549.6914 L212.0391,551.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="69.75" x="225.1875" y="550.6157">MoveCollection</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="94.5" x2="401.25" y1="559.5" y2="559.5"/><ellipse cx="102" cy="567.75" fill="none" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="99" x="108.75" y="570.1578">moves : vector&lt;Move&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="94.5" x2="401.25" y1="575.1035" y2="575.1035"/><ellipse cx="102" cy="583.3535" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="69" x="108.75" y="585.7614">MoveCollection()</text><ellipse cx="102" cy="592.957" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="179.25" x="108.75" y="595.3649">MoveCollection(vector&lt;Move&gt; my_moves)</text><ellipse cx="102" cy="602.5605" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="150" x="108.75" y="604.9684">MoveCollection(size_t reserve_size)</text><ellipse cx="102" cy="612.1641" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="97.5" x="108.75" y="614.5719">SelectRandom() : Move</text><ellipse cx="102" cy="621.7676" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="288.75" x="108.75" y="624.1754">ContainsAnyMoveNotIn(const MoveCollection&amp; other) : bool {query}</text><ellipse cx="102" cy="631.3711" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="287.25" x="108.75" y="633.7789">ContainsDestination(const gameboard::BoardSpace&amp; space) : bool</text><ellipse cx="102" cy="640.9746" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="211.5" x="108.75" y="643.3824">ContainsMove(const Move&amp; move) : bool {query}</text><ellipse cx="102" cy="650.5781" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="104.25" x="108.75" y="652.986">IsEmpty() : bool {query}</text><ellipse cx="102" cy="660.1816" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="93.75" x="108.75" y="662.5895">Size() : size_t {query}</text><ellipse cx="102" cy="669.7852" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="111.75" x="108.75" y="672.193">Append(Move move) : void</text><ellipse cx="102" cy="679.3887" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="181.5" x="108.75" y="681.7965">Concat(vector&lt;Move&gt; other_moves) : void</text><ellipse cx="102" cy="688.9922" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="150" x="108.75" y="691.4">Concat(MoveCollection other) : void</text><!--MD5=[31c2f52e05b39582f5e59528fcb1382d]
class boardstate.PseudoRandomKeyGenerator--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="93.6211" id="boardstate.PseudoRandomKeyGenerator" style="stroke: #A80036; stroke-width: 1.125;" width="304.5" x="764.625" y="2575.125"/><ellipse cx="775.875" cy="2587.125" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M778.1016,2591.3555 Q777.668,2591.5781 777.1875,2591.6836 Q776.707,2591.8008 776.1797,2591.8008 Q774.3047,2591.8008 773.3086,2590.5703 Q772.3242,2589.3281 772.3242,2586.9844 Q772.3242,2584.6406 773.3086,2583.3984 Q774.3047,2582.1563 776.1797,2582.1563 Q776.707,2582.1563 777.1875,2582.2734 Q777.6797,2582.3906 778.1016,2582.6133 L778.1016,2584.6523 Q777.6328,2584.2188 777.1875,2584.0195 Q776.7422,2583.8086 776.2734,2583.8086 Q775.2656,2583.8086 774.75,2584.6172 Q774.2344,2585.4141 774.2344,2586.9844 Q774.2344,2588.5547 774.75,2589.3633 Q775.2656,2590.1602 776.2734,2590.1602 Q776.7422,2590.1602 777.1875,2589.9609 Q777.6328,2589.75 778.1016,2589.3164 L778.1016,2591.3555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="137.25" x="786.375" y="2590.2407">PseudoRandomKeyGenerator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="141.75" x="929.625" y="2572.875"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="140.25" x="930.375" y="2581.979">template&lt;typename IntType&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="765.375" x2="1068.375" y1="2599.125" y2="2599.125"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="770.625" y="2605.125"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="90" x="779.625" y="2609.7828">prng_ : std::mt19937</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="770.625" y="2614.7285"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="171.75" x="779.625" y="2619.3864">seed_ : std::random_device::result_type</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="765.375" x2="1068.375" y1="2624.332" y2="2624.332"/><ellipse cx="772.875" cy="2632.582" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="130.5" x="779.625" y="2634.9899">PseudoRandomKeyGenerator()</text><ellipse cx="772.875" cy="2642.1855" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="188.25" x="779.625" y="2644.5934">PseudoRandomKeyGenerator(uint32_t seed)</text><ellipse cx="772.875" cy="2651.7891" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="100.5" x="779.625" y="2654.1969">GenerateKey() : IntType</text><ellipse cx="772.875" cy="2661.3926" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="173.25" x="779.625" y="2663.8004">seed() : std::random_device::result_type</text><!--MD5=[3ddf6885d9213d6811e0580fd4005b49]
class boardstate.RandomKeyGenerator--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="55.207" id="boardstate.RandomKeyGenerator" style="stroke: #A80036; stroke-width: 1.125;" width="269.25" x="782.25" y="2704.5"/><ellipse cx="793.5" cy="2716.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M795.7266,2720.7305 Q795.293,2720.9531 794.8125,2721.0586 Q794.332,2721.1758 793.8047,2721.1758 Q791.9297,2721.1758 790.9336,2719.9453 Q789.9492,2718.7031 789.9492,2716.3594 Q789.9492,2714.0156 790.9336,2712.7734 Q791.9297,2711.5313 793.8047,2711.5313 Q794.332,2711.5313 794.8125,2711.6484 Q795.3047,2711.7656 795.7266,2711.9883 L795.7266,2714.0273 Q795.2578,2713.5938 794.8125,2713.3945 Q794.3672,2713.1836 793.8984,2713.1836 Q792.8906,2713.1836 792.375,2713.9922 Q791.8594,2714.7891 791.8594,2716.3594 Q791.8594,2717.9297 792.375,2718.7383 Q792.8906,2719.5352 793.8984,2719.5352 Q794.3672,2719.5352 794.8125,2719.3359 Q795.2578,2719.125 795.7266,2718.6914 L795.7266,2720.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="102" x="804" y="2719.6157">RandomKeyGenerator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="141.75" x="912" y="2702.25"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="140.25" x="912.75" y="2711.354">template&lt;typename IntType&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="783" x2="1050.75" y1="2728.5" y2="2728.5"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="788.25" y="2734.5"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="106.5" x="797.25" y="2739.1578">rd_ : std::random_device</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="783" x2="1050.75" y1="2744.1035" y2="2744.1035"/><ellipse cx="790.5" cy="2752.3535" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="100.5" x="797.25" y="2754.7614">GenerateKey() : IntType</text><!--MD5=[e5d5a14d8d3ab112c73fd8f457bfb726]
class boardstate.TranspositionTable--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="180.0527" id="boardstate.TranspositionTable" style="stroke: #A80036; stroke-width: 1.125;" width="357.75" x="1938.75" y="2892.75"/><ellipse cx="1950" cy="2904.75" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1952.2266,2908.9805 Q1951.793,2909.2031 1951.3125,2909.3086 Q1950.832,2909.4258 1950.3047,2909.4258 Q1948.4297,2909.4258 1947.4336,2908.1953 Q1946.4492,2906.9531 1946.4492,2904.6094 Q1946.4492,2902.2656 1947.4336,2901.0234 Q1948.4297,2899.7813 1950.3047,2899.7813 Q1950.832,2899.7813 1951.3125,2899.8984 Q1951.8047,2900.0156 1952.2266,2900.2383 L1952.2266,2902.2773 Q1951.7578,2901.8438 1951.3125,2901.6445 Q1950.8672,2901.4336 1950.3984,2901.4336 Q1949.3906,2901.4336 1948.875,2902.2422 Q1948.3594,2903.0391 1948.3594,2904.6094 Q1948.3594,2906.1797 1948.875,2906.9883 Q1949.3906,2907.7852 1950.3984,2907.7852 Q1950.8672,2907.7852 1951.3125,2907.5859 Q1951.7578,2907.375 1952.2266,2906.9414 L1952.2266,2908.9805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="89.25" x="1960.5" y="2907.8657">TranspositionTable</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="243" x="2055.75" y="2890.5"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="241.5" x="2056.5" y="2899.604">template&lt;typename KeyType, size_t NumConfKeys&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1939.5" x2="2295.75" y1="2916.75" y2="2916.75"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1944.75" y="2922.75"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="140.25" x="1953.75" y="2927.4078">move_counter_ : MoveCountType</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1944.75" y="2932.3535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="1953.75" y="2937.0114">data_ : std::unordered_map&lt;KeyType, TranspositionTableEntry&lt;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="114" x="1953.75" y="2946.6149">KeyType, NumConfKeys&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1939.5" x2="2295.75" y1="2951.5605" y2="2951.5605"/><ellipse cx="1947" cy="2959.8105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="240.75" x="1953.75" y="2962.2184">NumIdleMovesAt(KeyType board_state) : MoveCountType</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1944.75" y="2967.1641"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="291.75" x="1953.75" y="2971.8219">NumMovesSinceLastUseOf(const TranspositionTableEntry&lt;KeyType,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="213.75" x="1953.75" y="2981.4254">NumConfKeys&gt;&amp; tr_table_entry) : MoveCountType</text><ellipse cx="1947" cy="2988.6211" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="273.75" x="1953.75" y="2991.0289">GetDataAt(KeyType primary_board_state, DepthType remaining_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294" x="1953.75" y="3000.6324">search_depth, std::array&lt;KeyType, NumConfKeys&gt; expected_keys) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="205.5" x="1953.75" y="3010.236">moveselection::TranspositionTableSearchResult</text><ellipse cx="1947" cy="3017.4316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="55.5" x="1953.75" y="3019.8395">size() : size_t</text><ellipse cx="1947" cy="3027.0352" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="130.5" x="1953.75" y="3029.443">IncrementMoveCounter() : void</text><ellipse cx="1947" cy="3036.6387" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="293.25" x="1953.75" y="3039.0465">RecordData(KeyType primary_board_state, DepthType search_depth,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="272.25" x="1953.75" y="3048.65">moveselection::MinimaxResultType result_type, moveselection::</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="267" x="1953.75" y="3058.2535">EqualScoreMoves&amp; similar_moves, const std::array&lt;KeyType,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="183" x="1953.75" y="3067.8571">NumConfKeys&gt;&amp; confirmation_keys) : void</text><!--MD5=[b6fa635167acde77f399f3da55048f08]
class boardstate.TranspositionTableEntry--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="160.8457" id="boardstate.TranspositionTableEntry" style="stroke: #A80036; stroke-width: 1.125;" width="381.75" x="2341.5" y="2902.5"/><ellipse cx="2352.75" cy="2914.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2354.9766,2918.7305 Q2354.543,2918.9531 2354.0625,2919.0586 Q2353.582,2919.1758 2353.0547,2919.1758 Q2351.1797,2919.1758 2350.1836,2917.9453 Q2349.1992,2916.7031 2349.1992,2914.3594 Q2349.1992,2912.0156 2350.1836,2910.7734 Q2351.1797,2909.5313 2353.0547,2909.5313 Q2353.582,2909.5313 2354.0625,2909.6484 Q2354.5547,2909.7656 2354.9766,2909.9883 L2354.9766,2912.0273 Q2354.5078,2911.5938 2354.0625,2911.3945 Q2353.6172,2911.1836 2353.1484,2911.1836 Q2352.1406,2911.1836 2351.625,2911.9922 Q2351.1094,2912.7891 2351.1094,2914.3594 Q2351.1094,2915.9297 2351.625,2916.7383 Q2352.1406,2917.5352 2353.1484,2917.5352 Q2353.6172,2917.5352 2354.0625,2917.3359 Q2354.5078,2917.125 2354.9766,2916.6914 L2354.9766,2918.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="113.25" x="2363.25" y="2917.6157">TranspositionTableEntry</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="243" x="2482.5" y="2900.25"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="241.5" x="2483.25" y="2909.354">template&lt;typename KeyType, size_t NumConfKeys&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2342.25" x2="2722.5" y1="2926.5" y2="2926.5"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="2347.5" y="2932.5"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="157.5" x="2356.5" y="2937.1578">last_access_index_ : MoveCountType</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="2347.5" y="2942.1035"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="246" x="2356.5" y="2946.7614">minimax_calc_result_ : moveselection::MinimaxCalcResult</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="2347.5" y="2951.707"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="246.75" x="2356.5" y="2956.3649">confirmation_keys_ : std::array&lt;KeyType, NumConfKeys&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2342.25" x2="2722.5" y1="2961.3105" y2="2961.3105"/><ellipse cx="2349.75" cy="2969.5605" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="296.25" x="2356.5" y="2971.9684">TranspositionTableEntry(moveselection::MinimaxCalcResult minimax_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="291" x="2356.5" y="2981.5719">calc_result, std::array&lt;KeyType, NumConfKeys&gt; confirmation_keys,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="150" x="2356.5" y="2991.1754">MoveCountType last_access_index)</text><ellipse cx="2349.75" cy="2998.3711" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="165" x="2356.5" y="3000.7789">remaining_search_depth() : DepthType</text><ellipse cx="2349.75" cy="3007.9746" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="159" x="2356.5" y="3010.3824">last_access_index() : MoveCountType</text><ellipse cx="2349.75" cy="3017.5781" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297" x="2356.5" y="3019.986">ConfirmationKeysMatchExpected(std::array&lt;KeyType, NumConfKeys&gt;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="92.25" x="2356.5" y="3029.5895">expected_keys) : bool</text><ellipse cx="2349.75" cy="3036.7852" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="247.5" x="2356.5" y="3039.193">minimax_calc_result() : moveselection::MinimaxCalcResult</text><ellipse cx="2349.75" cy="3046.3887" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="2356.5" y="3048.7965">confirmation_keys() : std::array&lt;KeyType , NumConfKeys&gt;</text><ellipse cx="2349.75" cy="3055.9922" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="274.5" x="2356.5" y="3058.4">set_last_access_index(MoveCountType last_access_index) : void</text><!--MD5=[543a7680c3fc9cbd50ac096473873cb0]
class boardstate.TranspositionTableGuard--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="64.8105" id="boardstate.TranspositionTableGuard" style="stroke: #A80036; stroke-width: 1.125;" width="235.5" x="1999.875" y="2802"/><ellipse cx="2055.5625" cy="2814" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2057.7891,2818.2305 Q2057.3555,2818.4531 2056.875,2818.5586 Q2056.3945,2818.6758 2055.8672,2818.6758 Q2053.9922,2818.6758 2052.9961,2817.4453 Q2052.0117,2816.2031 2052.0117,2813.8594 Q2052.0117,2811.5156 2052.9961,2810.2734 Q2053.9922,2809.0313 2055.8672,2809.0313 Q2056.3945,2809.0313 2056.875,2809.1484 Q2057.3672,2809.2656 2057.7891,2809.4883 L2057.7891,2811.5273 Q2057.3203,2811.0938 2056.875,2810.8945 Q2056.4297,2810.6836 2055.9609,2810.6836 Q2054.9531,2810.6836 2054.4375,2811.4922 Q2053.9219,2812.2891 2053.9219,2813.8594 Q2053.9219,2815.4297 2054.4375,2816.2383 Q2054.9531,2817.0352 2055.9609,2817.0352 Q2056.4297,2817.0352 2056.875,2816.8359 Q2057.3203,2816.625 2057.7891,2816.1914 L2057.7891,2818.2305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="117.75" x="2070.9375" y="2817.1157">TranspositionTableGuard</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2000.625" x2="2234.625" y1="2826" y2="2826"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="2005.875" y="2832"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="159.75" x="2014.875" y="2836.6578">tr_table_mutex_ : mutable std::mutex</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="2000.625" x2="2234.625" y1="2841.6035" y2="2841.6035"/><ellipse cx="2008.125" cy="2849.8535" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="114" x="2014.875" y="2852.2614">TranspositionTableGuard()</text><ellipse cx="2008.125" cy="2859.457" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="216" x="2014.875" y="2861.8649">GetExclusiveLock() : std::unique_lock&lt;std::mutex&gt;</text><!--MD5=[64364b1a8602fb55d44e9ca68032adfb]
class boardstate.TranspositionTablePruner--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="151.2422" id="boardstate.TranspositionTablePruner" style="stroke: #A80036; stroke-width: 1.125;" width="389.25" x="1423.5" y="2867.25"/><ellipse cx="1434.75" cy="2879.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1436.9766,2883.4805 Q1436.543,2883.7031 1436.0625,2883.8086 Q1435.582,2883.9258 1435.0547,2883.9258 Q1433.1797,2883.9258 1432.1836,2882.6953 Q1431.1992,2881.4531 1431.1992,2879.1094 Q1431.1992,2876.7656 1432.1836,2875.5234 Q1433.1797,2874.2813 1435.0547,2874.2813 Q1435.582,2874.2813 1436.0625,2874.3984 Q1436.5547,2874.5156 1436.9766,2874.7383 L1436.9766,2876.7773 Q1436.5078,2876.3438 1436.0625,2876.1445 Q1435.6172,2875.9336 1435.1484,2875.9336 Q1434.1406,2875.9336 1433.625,2876.7422 Q1433.1094,2877.5391 1433.1094,2879.1094 Q1433.1094,2880.6797 1433.625,2881.4883 Q1434.1406,2882.2852 1435.1484,2882.2852 Q1435.6172,2882.2852 1436.0625,2882.0859 Q1436.5078,2881.875 1436.9766,2881.4414 L1436.9766,2883.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="120.75" x="1445.25" y="2882.3657">TranspositionTablePruner</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="243" x="1572" y="2865"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="241.5" x="1572.75" y="2874.104">template&lt;typename KeyType, size_t NumConfKeys&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1424.25" x2="1812" y1="2891.25" y2="2891.25"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1429.5" y="2897.25"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="249" x="1438.5" y="2901.9078">tr_table_ : TranspositionTable&lt;KeyType, NumConfKeys&gt;&amp;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1429.5" y="2906.8535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="190.5" x="1438.5" y="2911.5114">tr_table_guard_ : TranspositionTableGuard&amp;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1429.5" y="2916.457"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="150" x="1438.5" y="2921.1149">keep_running_ : std::atomic&lt;bool&gt;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1429.5" y="2926.0605"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="125.25" x="1438.5" y="2930.7184">pruning_thread_ : std::thread</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1424.25" x2="1812" y1="2935.6641" y2="2935.6641"/><ellipse cx="1431.75" cy="2943.9141" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="240" x="1438.5" y="2946.3219">TranspositionTablePruner(TranspositionTable&lt;KeyType,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="1438.5" y="2955.9254">NumConfKeys&gt;&amp; tr_table, TranspositionTableGuard&amp; tr_table_guard)</text><ellipse cx="1431.75" cy="2963.1211" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="123" x="1438.5" y="2965.5289">~TranspositionTablePruner()</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1429.5" y="2970.4746"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="103.5" x="1438.5" y="2975.1324">RepeatedlyPrune() : void</text><ellipse cx="1431.75" cy="2982.3281" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="53.25" x="1438.5" y="2984.736">Start() : void</text><ellipse cx="1431.75" cy="2991.9316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="51.75" x="1438.5" y="2994.3395">Stop() : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1429.5" y="2999.2852"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="128.25" x="1438.5" y="3003.943">ThreadSafePruneEntry() : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1429.5" y="3008.8887"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="108.75" x="1438.5" y="3013.5465">UnsafePruneEntry() : void</text><!--MD5=[4def97077e2f6e66ea89f8e1800746aa]
class boardstate.ZobristCalculator--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="237.6738" id="boardstate.ZobristCalculator" style="stroke: #A80036; stroke-width: 1.125;" width="318" x="1958.625" y="2537.625"/><ellipse cx="2000.4375" cy="2549.625" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M2002.6641,2553.8555 Q2002.2305,2554.0781 2001.75,2554.1836 Q2001.2695,2554.3008 2000.7422,2554.3008 Q1998.8672,2554.3008 1997.8711,2553.0703 Q1996.8867,2551.8281 1996.8867,2549.4844 Q1996.8867,2547.1406 1997.8711,2545.8984 Q1998.8672,2544.6563 2000.7422,2544.6563 Q2001.2695,2544.6563 2001.75,2544.7734 Q2002.2422,2544.8906 2002.6641,2545.1133 L2002.6641,2547.1523 Q2002.1953,2546.7188 2001.75,2546.5195 Q2001.3047,2546.3086 2000.8359,2546.3086 Q1999.8281,2546.3086 1999.3125,2547.1172 Q1998.7969,2547.9141 1998.7969,2549.4844 Q1998.7969,2551.0547 1999.3125,2551.8633 Q1999.8281,2552.6602 2000.8359,2552.6602 Q2001.3047,2552.6602 2001.75,2552.4609 Q2002.1953,2552.25 2002.6641,2551.8164 L2002.6641,2553.8555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="81" x="2015.8125" y="2552.7407">ZobristCalculator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="145.5" x="2133.375" y="2535.375"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="2134.125" y="2544.479">template&lt;typename KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1959.375" x2="2275.875" y1="2561.625" y2="2561.625"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1964.625" y="2567.625"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="99.75" x="1973.625" y="2572.2828">board_state_ : KeyType</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1964.625" y="2577.2285"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="84.75" x="1973.625" y="2581.8864">turn_key_ : KeyType</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1964.625" y="2586.832"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="147.75" x="1973.625" y="2591.4899">zarray_ : array&lt;TeamZarray_t, 2&gt;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1964.625" y="2596.4355"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="68.25" x="1973.625" y="2601.0934">seed_ : uint32_t</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1959.375" x2="2275.875" y1="2606.0391" y2="2606.0391"/><ellipse cx="1966.875" cy="2614.2891" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="138" x="1973.625" y="2616.6969">ZobristCalculator(uint32_t seed)</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1964.625" y="2621.6426"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="288.75" x="1973.625" y="2626.3004">CreateGameZarray(PseudoRandomKeyGenerator&lt;KeyType&gt;&amp; key_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="116.25" x="1973.625" y="2635.9039">generator) : GameZarray_t</text><ellipse cx="1966.875" cy="2643.0996" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="141" x="1973.625" y="2645.5074">zarray() : GameZarray_t {query}</text><ellipse cx="1966.875" cy="2652.7031" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294.75" x="1973.625" y="2655.111">GetHashValueAt(PieceColor color, PieceType piece_type, BoardSpace</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="72.75" x="1973.625" y="2664.7145">space) : KeyType</text><ellipse cx="1966.875" cy="2671.9102" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="138.75" x="1973.625" y="2674.318">board_state() : KeyType {query}</text><ellipse cx="1966.875" cy="2681.5137" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="123.75" x="1973.625" y="2683.9215">turn_key() : KeyType {query}</text><ellipse cx="1966.875" cy="2691.1172" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="107.25" x="1973.625" y="2693.525">seed() : uint32_t {query}</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1964.625" y="2698.4707"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="282" x="1973.625" y="2703.1285">FullBoardStateCalInternal(const gameboard::BoardMap_t&amp; board_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="48" x="1973.625" y="2712.7321">map) : void</text><ellipse cx="1966.875" cy="2719.9277" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="282" x="1973.625" y="2722.3356">FullBoardStateCalc(const gameboard::BoardMap_t&amp; board_map) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="1973.625" y="2731.9391">void</text><ellipse cx="1966.875" cy="2739.1348" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="298.5" x="1973.625" y="2741.5426">UpdateBoardState(const gameboard::ExecutedMove&amp; executed_move</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="29.25" x="1973.625" y="2751.1461">) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1964.625" y="2756.0918"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="261.75" x="1973.625" y="2760.7496">UpdateBoardStateInternal(const gameboard::ExecutedMove&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="95.25" x="1973.625" y="2770.3531">executed_move) : void</text><!--MD5=[7952c67fb2463ea573cc16785da9c557]
class boardstate.ZobristComponent--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="276.0879" id="boardstate.ZobristComponent" style="stroke: #A80036; stroke-width: 1.125;" width="356.25" x="1440" y="2537.25"/><ellipse cx="1451.25" cy="2549.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M1453.4766,2553.4805 Q1453.043,2553.7031 1452.5625,2553.8086 Q1452.082,2553.9258 1451.5547,2553.9258 Q1449.6797,2553.9258 1448.6836,2552.6953 Q1447.6992,2551.4531 1447.6992,2549.1094 Q1447.6992,2546.7656 1448.6836,2545.5234 Q1449.6797,2544.2813 1451.5547,2544.2813 Q1452.082,2544.2813 1452.5625,2544.3984 Q1453.0547,2544.5156 1453.4766,2544.7383 L1453.4766,2546.7773 Q1453.0078,2546.3438 1452.5625,2546.1445 Q1452.1172,2545.9336 1451.6484,2545.9336 Q1450.6406,2545.9336 1450.125,2546.7422 Q1449.6094,2547.5391 1449.6094,2549.1094 Q1449.6094,2550.6797 1450.125,2551.4883 Q1450.6406,2552.2852 1451.6484,2552.2852 Q1452.1172,2552.2852 1452.5625,2552.0859 Q1453.0078,2551.875 1453.4766,2551.4414 L1453.4766,2553.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="87.75" x="1461.75" y="2552.3657">ZobristComponent</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="243" x="1555.5" y="2535"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="241.5" x="1556.25" y="2544.104">template&lt;typename KeyType, size_t NumConfKeys&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1440.75" x2="1795.5" y1="2561.25" y2="2561.25"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1446" y="2567.25"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="215.25" x="1455" y="2571.9078">primary_calculator_ : ZobristCalculator&lt;KeyType&gt;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1446" y="2576.8535"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="292.5" x="1455" y="2581.5114">confirmation_calculators_ : std::array&lt;ZobristCalculator&lt;KeyType&gt;,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="66" x="1455" y="2591.1149">NumConfKeys&gt;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1446" y="2596.0605"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="159" x="1455" y="2600.7184">prng_seed_ : std::optional&lt;uint32_t&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="1440.75" x2="1795.5" y1="2605.6641" y2="2605.6641"/><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1446" y="2611.6641"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="165.75" x="1455" y="2616.3219">ZobristComponent(std::mt19937 prng)</text><ellipse cx="1448.25" cy="2623.5176" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="273" x="1455" y="2625.9254">ZobristComponent(const ZobristCalculator&lt;KeyType&gt; primary_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="248.25" x="1455" y="2635.5289">calculator, const std::array&lt;ZobristCalculator&lt;KeyType&gt;,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="183.75" x="1455" y="2645.1324">NumConfKeys&gt;&amp; confirmation_calculators)</text><ellipse cx="1448.25" cy="2652.3281" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="168" x="1455" y="2654.736">ZobristComponent(uint32_t prng_seed)</text><ellipse cx="1448.25" cy="2661.9316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="138.75" x="1455" y="2664.3395">primary_board_state() : KeyType</text><ellipse cx="1448.25" cy="2671.5352" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="154.5" x="1455" y="2673.943">primary_calculator_seed() : KeyType</text><ellipse cx="1448.25" cy="2681.1387" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="288" x="1455" y="2683.5465">confirmation_board_states() : std::array&lt;KeyType , NumConfKeys&gt;</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1446" y="2688.4922"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="255.75" x="1455" y="2693.15">confirmation_board_states_internal() : std::array&lt;KeyType ,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="66" x="1455" y="2702.7535">NumConfKeys&gt;</text><ellipse cx="1448.25" cy="2709.9492" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="295.5" x="1455" y="2712.3571">confirmation_calculator_seeds() : std::array&lt;uint32_t , NumConfKeys</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="44.25" x="1455" y="2721.9606">&gt; {query}</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1446" y="2726.9063"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="270" x="1455" y="2731.5641">confirmation_calculator_seeds_internal() : std::array&lt;uint32_t ,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="103.5" x="1455" y="2741.1676">NumConfKeys&gt; {query}</text><ellipse cx="1448.25" cy="2748.3633" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="221.25" x="1455" y="2750.7711">primary_board_state_hex_str() : std::string {query}</text><ellipse cx="1448.25" cy="2757.9668" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="93.75" x="1455" y="2760.3746">prng_seed() : uint32_t</text><ellipse cx="1448.25" cy="2767.5703" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="247.5" x="1455" y="2769.9781">FullBoardStateCalc(const BoardMap_t&amp; board_map) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1446" y="2774.9238"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="279.75" x="1455" y="2779.5817">FullBoardStateCalcInternal(const BoardMap_t&amp; board_map) : void</text><ellipse cx="1448.25" cy="2786.7773" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="278.25" x="1455" y="2789.1852">UpdateBoardStates(const ExecutedMove&amp; executed_move) : void</text><rect fill="#F24D5C" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="1446" y="2794.1309"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="290.25" x="1455" y="2798.7887">UpdateBoardStatesInternal(const ExecutedMove&amp; executed_move) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="1455" y="2808.3922">void</text><!--MD5=[b4272f69e4b84247843d3c3d52ad89ea]
class boardstate.ZobristCoordinator--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="256.8809" id="boardstate.ZobristCoordinator" style="stroke: #A80036; stroke-width: 1.125;" width="357.75" x="738" y="2804.625"/><ellipse cx="749.25" cy="2816.625" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M751.4766,2820.8555 Q751.043,2821.0781 750.5625,2821.1836 Q750.082,2821.3008 749.5547,2821.3008 Q747.6797,2821.3008 746.6836,2820.0703 Q745.6992,2818.8281 745.6992,2816.4844 Q745.6992,2814.1406 746.6836,2812.8984 Q747.6797,2811.6563 749.5547,2811.6563 Q750.082,2811.6563 750.5625,2811.7734 Q751.0547,2811.8906 751.4766,2812.1133 L751.4766,2814.1523 Q751.0078,2813.7188 750.5625,2813.5195 Q750.1172,2813.3086 749.6484,2813.3086 Q748.6406,2813.3086 748.125,2814.1172 Q747.6094,2814.9141 747.6094,2816.4844 Q747.6094,2818.0547 748.125,2818.8633 Q748.6406,2819.6602 749.6484,2819.6602 Q750.1172,2819.6602 750.5625,2819.4609 Q751.0078,2819.25 751.4766,2818.8164 L751.4766,2820.8555 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="89.25" x="759.75" y="2819.7407">ZobristCoordinator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="243" x="855" y="2802.375"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="241.5" x="855.75" y="2811.479">template&lt;typename KeyType, size_t NumConfKeys&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="738.75" x2="1095" y1="2828.625" y2="2828.625"/><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="744" y="2834.625"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="241.5" x="753" y="2839.2828">tr_table_ : TranspositionTable&lt;KeyType, NumConfKeys&gt;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="744" y="2844.2285"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="183" x="753" y="2848.8864">tr_table_guard_ : TranspositionTableGuard</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="744" y="2853.832"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="296.25" x="753" y="2858.4899">tr_table_pruner_ : TranspositionTablePruner&lt;KeyType, NumConfKeys</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="6.75" x="753" y="2868.0934">&gt;</text><rect fill="none" height="4.5" style="stroke: #C82930; stroke-width: 0.75;" width="4.5" x="744" y="2873.0391"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="288" x="753" y="2877.6969">zobrist_component_ : ZobristComponent&lt;KeyType, NumConfKeys&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="738.75" x2="1095" y1="2882.6426" y2="2882.6426"/><ellipse cx="746.25" cy="2890.8926" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="279" x="753" y="2893.3004">ZobristCoordinator(ZobristComponent&lt;KeyType, NumConfKeys&gt;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="83.25" x="753" y="2902.9039">zobrist_component)</text><ellipse cx="746.25" cy="2910.0996" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="271.5" x="753" y="2912.5074">ZobristCoordinator(uint32_t primary_seed, std::array&lt;uint32_t,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="156" x="753" y="2922.111">NumConfKeys&gt; confirmation_seeds)</text><ellipse cx="746.25" cy="2929.3066" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="169.5" x="753" y="2931.7145">ZobristCoordinator(uint32_t prng_seed)</text><ellipse cx="746.25" cy="2938.9102" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="132.75" x="753" y="2941.318">ImplementGetState() : KeyType</text><ellipse cx="746.25" cy="2948.5137" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="270" x="753" y="2950.9215">ImplementGetTrData(DepthType search_depth, MoveCountType</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="274.5" x="753" y="2960.525">access_index) : moveselection::TranspositionTableSearchResult</text><ellipse cx="746.25" cy="2967.7207" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="148.5" x="753" y="2970.1285">ImplementGetTrTableSize() : size_t</text><ellipse cx="746.25" cy="2977.3242" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="146.25" x="753" y="2979.7321">board_state_hex_str() : std::string</text><ellipse cx="746.25" cy="2986.9277" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="97.5" x="753" y="2989.3356">zkeys_seed() : uint32_t</text><ellipse cx="746.25" cy="2996.5313" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="292.5" x="753" y="2998.9391">ImplementFullBoardStateCalc(const BoardMap_t&amp; board_map) : void</text><ellipse cx="746.25" cy="3006.1348" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="285" x="753" y="3008.5426">ImplementRecordTrData(DepthType search_depth, moveselection::</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="287.25" x="753" y="3018.1461">MinimaxResultType result_type, moveselection::EqualScoreMoves&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="224.25" x="753" y="3027.7496">similar_moves, MoveCountType access_index) : void</text><ellipse cx="746.25" cy="3034.9453" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="297.75" x="753" y="3037.3531">ImplementUpdateBoardState(const ExecutedMove&amp; executed_move) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="17.25" x="753" y="3046.9567">void</text><ellipse cx="746.25" cy="3054.1523" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="162.75" x="753" y="3056.5602">ImplementUpdateMoveCounter() : void</text><!--MD5=[4a69169664d3786fbf92160aed53bba4]
class BoardStateCoordinator--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="132.0352" id="BoardStateCoordinator" style="stroke: #A80036; stroke-width: 1.125;" width="486.75" x="4.5" y="2867.25"/><ellipse cx="15.75" cy="2879.25" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M17.9766,2883.4805 Q17.543,2883.7031 17.0625,2883.8086 Q16.582,2883.9258 16.0547,2883.9258 Q14.1797,2883.9258 13.1836,2882.6953 Q12.1992,2881.4531 12.1992,2879.1094 Q12.1992,2876.7656 13.1836,2875.5234 Q14.1797,2874.2813 16.0547,2874.2813 Q16.582,2874.2813 17.0625,2874.3984 Q17.5547,2874.5156 17.9766,2874.7383 L17.9766,2876.7773 Q17.5078,2876.3438 17.0625,2876.1445 Q16.6172,2875.9336 16.1484,2875.9336 Q15.1406,2875.9336 14.625,2876.7422 Q14.1094,2877.5391 14.1094,2879.1094 Q14.1094,2880.6797 14.625,2881.4883 Q15.1406,2882.2852 16.1484,2882.2852 Q16.6172,2882.2852 17.0625,2882.0859 Q17.5078,2881.875 17.9766,2881.4414 L17.9766,2883.4805 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="108.75" x="26.25" y="2882.3657">BoardStateCoordinator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="352.5" x="141" y="2865"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="351" x="141.75" y="2874.104">template&lt;typename ConcreteBoardStateCoordinator, typename KeyType&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="5.25" x2="490.5" y1="2891.25" y2="2891.25"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="5.25" x2="490.5" y1="2897.25" y2="2897.25"/><ellipse cx="12.75" cy="2905.5" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="106.5" x="19.5" y="2907.9078">GetState() : ZobristKey_t</text><ellipse cx="12.75" cy="2915.1035" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="294" x="19.5" y="2917.5114">GetTrData(DepthType search_depth, MoveCountType access_index) :</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="205.5" x="19.5" y="2927.1149">moveselection::TranspositionTableSearchResult</text><ellipse cx="12.75" cy="2934.3105" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="103.5" x="19.5" y="2936.7184">GetTrTableSize() : size_t</text><ellipse cx="12.75" cy="2943.9141" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="247.5" x="19.5" y="2946.3219">FullBoardStateCalc(const BoardMap_t&amp; board_map) : void</text><ellipse cx="12.75" cy="2953.5176" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="240" x="19.5" y="2955.9254">RecordTrData(DepthType search_depth, moveselection::</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="287.25" x="19.5" y="2965.5289">MinimaxResultType result_type, moveselection::EqualScoreMoves&amp;</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="224.25" x="19.5" y="2975.1324">similar_moves, MoveCountType access_index) : void</text><ellipse cx="12.75" cy="2982.3281" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="230.25" x="19.5" y="2984.736">UpdateBoardState(const ExecutedMove&amp; move) : void</text><ellipse cx="12.75" cy="2991.9316" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="117.75" x="19.5" y="2994.3395">UpdateMoveCounter() : void</text><!--MD5=[62031c2101ef7536ae22e5deaacdeaf3]
class JsonUtility--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="93.6211" id="JsonUtility" style="stroke: #A80036; stroke-width: 1.125;" width="309.75" x="93" y="2358.375"/><ellipse cx="123.825" cy="2370.375" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M126.0516,2374.6055 Q125.618,2374.8281 125.1375,2374.9336 Q124.657,2375.0508 124.1297,2375.0508 Q122.2547,2375.0508 121.2586,2373.8203 Q120.2742,2372.5781 120.2742,2370.2344 Q120.2742,2367.8906 121.2586,2366.6484 Q122.2547,2365.4063 124.1297,2365.4063 Q124.657,2365.4063 125.1375,2365.5234 Q125.6297,2365.6406 126.0516,2365.8633 L126.0516,2367.9023 Q125.5828,2367.4688 125.1375,2367.2695 Q124.6922,2367.0586 124.2234,2367.0586 Q123.2156,2367.0586 122.7,2367.8672 Q122.1844,2368.6641 122.1844,2370.2344 Q122.1844,2371.8047 122.7,2372.6133 Q123.2156,2373.4102 124.2234,2373.4102 Q124.6922,2373.4102 125.1375,2373.2109 Q125.5828,2373 126.0516,2372.5664 L126.0516,2374.6055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="45" x="138.675" y="2373.4907">JsonUtility</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="195.75" x="209.25" y="2356.125"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194.25" x="210" y="2365.229">template&lt;typename ConcreteJsonUtility&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="93.75" x2="402" y1="2382.375" y2="2382.375"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="93.75" x2="402" y1="2388.375" y2="2388.375"/><ellipse cx="101.25" cy="2396.625" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="196.5" x="108" y="2399.0328">Export(T&amp; object, const string file_path) : void</text><ellipse cx="101.25" cy="2406.2285" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="289.5" x="108" y="2408.6364">Export(piecepoints::BPOPointsSKeys&amp; bpo_points, const string file_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="48" x="108" y="2418.2399">path) : void</text><ellipse cx="101.25" cy="2425.4355" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="197.25" x="108" y="2427.8434">Import(T&amp; object, const string file_path) : void</text><ellipse cx="101.25" cy="2435.0391" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="290.25" x="108" y="2437.4469">Import(piecepoints::BPOPointsSKeys&amp; bpo_points, const string file_</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="48" x="108" y="2447.0504">path) : void</text><!--MD5=[088308a547ce616c153c08d33d5cfe4b]
class MoveEvaluator--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="45.6035" id="MoveEvaluator" style="stroke: #A80036; stroke-width: 1.125;" width="312.75" x="91.5" y="1567.875"/><ellipse cx="102.75" cy="1579.875" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M104.9766,1584.1055 Q104.543,1584.3281 104.0625,1584.4336 Q103.582,1584.5508 103.0547,1584.5508 Q101.1797,1584.5508 100.1836,1583.3203 Q99.1992,1582.0781 99.1992,1579.7344 Q99.1992,1577.3906 100.1836,1576.1484 Q101.1797,1574.9063 103.0547,1574.9063 Q103.582,1574.9063 104.0625,1575.0234 Q104.5547,1575.1406 104.9766,1575.3633 L104.9766,1577.4023 Q104.5078,1576.9688 104.0625,1576.7695 Q103.6172,1576.5586 103.1484,1576.5586 Q102.1406,1576.5586 101.625,1577.3672 Q101.1094,1578.1641 101.1094,1579.7344 Q101.1094,1581.3047 101.625,1582.1133 Q102.1406,1582.9102 103.1484,1582.9102 Q103.6172,1582.9102 104.0625,1582.7109 Q104.5078,1582.5 104.9766,1582.0664 L104.9766,1584.1055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="68.25" x="113.25" y="1582.9907">MoveEvaluator</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="219" x="187.5" y="1565.625"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="217.5" x="188.25" y="1574.729">template&lt;typename ConcreteMoveEvaluator&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="92.25" x2="403.5" y1="1591.875" y2="1591.875"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="92.25" x2="403.5" y1="1597.875" y2="1597.875"/><ellipse cx="99.75" cy="1606.125" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="278.25" x="106.5" y="1608.5328">SelectMove(MoveCollection&amp; allowed_moves) : gameboard::Move</text><!--MD5=[6725edcfe74215c1de71ec3d02da1239]
class PieceValueProvider--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="55.207" id="PieceValueProvider" style="stroke: #A80036; stroke-width: 1.125;" width="356.25" x="69.75" y="1165.5"/><ellipse cx="81" cy="1177.5" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M83.2266,1181.7305 Q82.793,1181.9531 82.3125,1182.0586 Q81.832,1182.1758 81.3047,1182.1758 Q79.4297,1182.1758 78.4336,1180.9453 Q77.4492,1179.7031 77.4492,1177.3594 Q77.4492,1175.0156 78.4336,1173.7734 Q79.4297,1172.5313 81.3047,1172.5313 Q81.832,1172.5313 82.3125,1172.6484 Q82.8047,1172.7656 83.2266,1172.9883 L83.2266,1175.0273 Q82.7578,1174.5938 82.3125,1174.3945 Q81.8672,1174.1836 81.3984,1174.1836 Q80.3906,1174.1836 79.875,1174.9922 Q79.3594,1175.7891 79.3594,1177.3594 Q79.3594,1178.9297 79.875,1179.7383 Q80.3906,1180.5352 81.3984,1180.5352 Q81.8672,1180.5352 82.3125,1180.3359 Q82.7578,1180.125 83.2266,1179.6914 L83.2266,1181.7305 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="90" x="91.5" y="1180.6157">PieceValueProvider</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="240.75" x="187.5" y="1163.25"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="239.25" x="188.25" y="1172.354">template&lt;typename ConcretePieceValueProvider&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="70.5" x2="425.25" y1="1189.5" y2="1189.5"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="70.5" x2="425.25" y1="1195.5" y2="1195.5"/><ellipse cx="78" cy="1203.75" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="284.25" x="84.75" y="1206.1578">GetValueOfPieceAtPosition(PieceColor color, PieceType piece_type,</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="126" x="84.75" y="1215.7614">BoardSpace space) : Points_t</text><!--MD5=[8beb3a26d8e33586c0902566a9030205]
class SpaceInfoProvider--><rect fill="#FEFECE" filter="url(#f3fzn4cvfrfwj)" height="122.4316" id="SpaceInfoProvider" style="stroke: #A80036; stroke-width: 1.125;" width="345.75" x="75" y="6.375"/><ellipse cx="86.25" cy="18.375" fill="#ADD1B2" rx="8.25" ry="8.25" style="stroke: #A80036; stroke-width: 0.75;"/><path d="M88.4766,22.6055 Q88.043,22.8281 87.5625,22.9336 Q87.082,23.0508 86.5547,23.0508 Q84.6797,23.0508 83.6836,21.8203 Q82.6992,20.5781 82.6992,18.2344 Q82.6992,15.8906 83.6836,14.6484 Q84.6797,13.4063 86.5547,13.4063 Q87.082,13.4063 87.5625,13.5234 Q88.0547,13.6406 88.4766,13.8633 L88.4766,15.9023 Q88.0078,15.4688 87.5625,15.2695 Q87.1172,15.0586 86.6484,15.0586 Q85.6406,15.0586 85.125,15.8672 Q84.6094,16.6641 84.6094,18.2344 Q84.6094,19.8047 85.125,20.6133 Q85.6406,21.4102 86.6484,21.4102 Q87.1172,21.4102 87.5625,21.2109 Q88.0078,21 88.4766,20.5664 L88.4766,22.6055 Z "/><text fill="#000000" font-family="sans-serif" font-size="9" lengthAdjust="spacingAndGlyphs" textLength="84.75" x="96.75" y="21.4907">SpaceInfoProvider</text><rect fill="#FFFFFF" height="11.9766" style="stroke: #000000; stroke-width: 0.75; stroke-dasharray: 2.0,2.0;" width="235.5" x="187.5" y="4.125"/><text fill="#000000" font-family="sans-serif" font-size="9" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="234" x="188.25" y="13.229">template&lt;typename ConcreteSpaceInfoProvider&gt;</text><line style="stroke: #A80036; stroke-width: 1.125;" x1="75.75" x2="420" y1="30.375" y2="30.375"/><line style="stroke: #A80036; stroke-width: 1.125;" x1="75.75" x2="420" y1="36.375" y2="36.375"/><ellipse cx="83.25" cy="44.625" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="211.5" x="90" y="47.0328">ExecuteMove(const Move&amp; move) : ExecutedMove</text><ellipse cx="83.25" cy="54.2285" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="221.25" x="90" y="56.6364">CalcFinalMovesOf(PieceColor color) : MoveCollection</text><ellipse cx="83.25" cy="63.832" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="211.5" x="90" y="66.2399">GetColor(const BoardSpace&amp; space) : PieceColor</text><ellipse cx="83.25" cy="73.4355" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="207" x="90" y="75.8434">GetType(const BoardSpace&amp; space) : PieceType</text><ellipse cx="83.25" cy="83.0391" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="62.25" x="90" y="85.4469">IsDraw() : bool</text><ellipse cx="83.25" cy="92.6426" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="281.25" x="90" y="95.0504">GetAllSpacesOccupiedBy(PieceColor color) : vector&lt;BoardSpace&gt;</text><ellipse cx="83.25" cy="102.2461" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="299.25" x="90" y="104.6539">AttachMoveCallback(function&lt;void ( const ExecutedMove&amp; )&gt; callback)</text><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="23.25" x="90" y="114.2574">: void</text><ellipse cx="83.25" cy="121.4531" fill="#84BE84" rx="2.25" ry="2.25" style="stroke: #038048; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="8.25" lengthAdjust="spacingAndGlyphs" textLength="238.5" x="90" y="123.861">UndoMove(const ExecutedMove&amp; executed_move) : void</text><!--MD5=[52e480cd6f12a02a9c966530f43ca2e6]
reverse link BoardStateCoordinator to boardstate.ZobristCoordinator--><path d="M506.4,2933.25 C583.77,2933.25 666.9,2933.25 737.9175,2933.25 " fill="none" id="BoardStateCoordinator&lt;-boardstate.ZobristCoordinator" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="506.2575,2938.5,491.2575,2933.25,506.2575,2928,506.2575,2938.5" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[5a3a8698d13ab2affd27fc000366658b]
reverse link JsonUtility to jsonio.NlohmannJsonUtility--><path d="M417.975,2405.25 C522.2175,2405.25 654.975,2405.25 757.2225,2405.25 " fill="none" id="JsonUtility&lt;-jsonio.NlohmannJsonUtility" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="417.81,2410.5,402.81,2405.25,417.81,2400,417.81,2410.5" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[bf49d4bcf4b90d35a5af5564d49a1e3f]
reverse link MoveEvaluator to moveselection.MinimaxMoveEvaluator--><path d="M331.77,1618.4925 C385.2525,1636.3425 458.985,1660.95 536.0775,1686.675 " fill="none" id="MoveEvaluator&lt;-moveselection.MinimaxMoveEvaluator" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="329.7975,1623.375,317.235,1613.6475,333.1275,1613.415,329.7975,1623.375" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[dda2aafe114a29ff43d62fd6a6993526]
reverse link MoveEvaluator to moveselection.RandomMoveEvaluator--><path d="M288.3225,1558.44 C338.5725,1519.41 429.345,1454.9925 518.25,1422.75 C586.11,1398.1425 664.1325,1384.3575 733.0125,1376.67 " fill="none" id="MoveEvaluator&lt;-moveselection.RandomMoveEvaluator" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="291.48,1562.6325,276.45,1567.7775,284.9925,1554.3825,291.48,1562.6325" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[dd5c78cd7b7cf32d1d8f83d8e8946ceb]
reverse link PieceValueProvider to piecepoints.PiecePositionPoints--><path d="M441.285,1193.25 C544.725,1193.25 670.335,1193.25 766.3725,1193.25 " fill="none" id="PieceValueProvider&lt;-piecepoints.PiecePositionPoints" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="441.1875,1198.5,426.1875,1193.25,441.1875,1188,441.1875,1198.5" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[a89ff3b5c59afb0fa0bea611b64bd065]
reverse link SpaceInfoProvider to gameboard.GameBoard--><path d="M433.6425,133.905 C453.1125,141.045 472.605,148.26 491.25,155.25 C580.0725,188.55 678.87,226.845 758.8275,258.1575 " fill="none" id="SpaceInfoProvider&lt;-gameboard.GameBoard" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="none" points="431.76,138.81,419.475,128.7225,435.3675,128.9475,431.76,138.81" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[22fa4ba0710b8153a5f4ba164d47c1f4]
reverse link gameboard.ExecutedMove to gameboard.GamePiece--><path d="M365.0775,480.99 C484.89,495.1275 670.7925,517.0575 792.9975,531.4725 " fill="none" id="gameboard.ExecutedMove&lt;-gameboard.GamePiece" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="355.1325,479.8125,359.2487,483.3206,364.0701,480.8704,359.9539,477.3622,355.1325,479.8125" style="stroke: #A80036; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="9.75" lengthAdjust="spacingAndGlyphs" textLength="6" x="361.1622" y="489.8595">2</text><!--MD5=[fe3a2c487a3a25b702aedd8036c6b759]
reverse link gameboard.ExecutedMove to gameboard.Move--><path d="M364.9725,470.07 C409.2375,476.7525 457.17,491.565 491.25,522.75 C519.945,549.0075 488.145,581.3625 518.25,606 C605.0175,677.0025 740.3325,676.71 828.615,666.765 " fill="none" id="gameboard.ExecutedMove&lt;-gameboard.Move" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="355.2975,468.72,359.3431,472.3093,364.2123,469.9554,360.1667,466.3661,355.2975,468.72" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[60eab9412cffaf88c055fa23df187dc9]
reverse link gameboard.GameBoard to gameboard.MoveCalculator--><path d="M1084.6875,302.88 C1197.93,291.105 1346.7,275.64 1458.2325,264.045 " fill="none" id="gameboard.GameBoard&lt;-gameboard.MoveCalculator" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1074.8775,303.9,1079.6634,306.419,1083.8293,302.9702,1079.0435,300.4512,1074.8775,303.9" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[bccd0be2e2825bf3e0db283f3a470347]
reverse link gameboard.GameBoard to gameboard.PieceColor--><path d="M1084.665,336.0075 C1249.965,351.6 1490.9925,374.3325 1581.375,382.8525 " fill="none" id="gameboard.GameBoard&lt;-gameboard.PieceColor" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1074.8775,335.085,1079.0776,338.4922,1083.8382,335.9257,1079.6381,332.5185,1074.8775,335.085" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[66e14357187fbcf55e73aaa38cc506a4]
reverse link gameboard.GamePiece to gameboard.PieceColor--><path d="M1050.7275,547.71 C1127.3025,543.3375 1222.8225,528.3975 1297.5,486 C1324.665,470.5725 1315.395,447.54 1342.5,432 C1419.0975,388.095 1526.1825,383.535 1581.3525,384.54 " fill="none" id="gameboard.GamePiece&lt;-gameboard.PieceColor" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1040.7675,548.2275,1045.4164,550.9911,1049.7555,547.7628,1045.1066,544.9991,1040.7675,548.2275" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[b8ccdaa5093e01f2c45d298c3aa4eebf]
reverse link gameboard.GamePiece to gameboard.PieceType--><path d="M1050.6825,537.4425 C1215.585,526.8375 1486.545,509.415 1582.425,503.25 " fill="none" id="gameboard.GamePiece&lt;-gameboard.PieceType" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1040.715,538.0875,1045.3971,540.7945,1049.6967,537.5138,1045.0146,534.8067,1040.715,538.0875" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[76dc6aaad942ad4347840263c882c967]
reverse link moveselection.MinimaxCalcResult to moveselection.EqualScoreMoves--><path d="M2270.8275,2085.1575 C2294.475,2076.285 2318.64,2067.2475 2341.5,2058.75 C2376.93,2045.58 2416.125,2031.1725 2449.6875,2018.8875 " fill="none" id="moveselection.MinimaxCalcResult&lt;-moveselection.EqualScoreMoves" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="2261.445,2088.6825,2266.7125,2089.9087,2269.8703,2085.5181,2264.6029,2084.2918,2261.445,2088.6825" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[010c5497f9ad17b45e946445052f911d]
reverse link moveselection.MinimaxCalcResult to moveselection.MinimaxResultType--><path d="M2271.285,2142.75 C2343.0075,2142.75 2424.015,2142.75 2476.3425,2142.75 " fill="none" id="moveselection.MinimaxCalcResult&lt;-moveselection.MinimaxResultType" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="2261.46,2142.75,2265.96,2145.75,2270.46,2142.75,2265.96,2139.75,2261.46,2142.75" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[93b088bff0ea2c548bb5be1242ded86e]
reverse link moveselection.MinimaxMoveEvaluator to moveselection.PreSearchMoveSorter--><path d="M1307.535,1772.13 C1319.2275,1770.885 1330.86,1769.655 1342.38,1768.4325 " fill="none" id="moveselection.MinimaxMoveEvaluator&lt;-moveselection.PreSearchMoveSorter" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1297.7025,1773.1725,1302.4939,1775.6811,1306.6523,1772.2231,1301.8609,1769.7146,1297.7025,1773.1725" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[087759a873fcac1b0a76058001b44431]
reverse link moveselection.MinimaxMoveEvaluator to moveselection.SearchSummaries--><path d="M1307.7225,1841.9325 C1361.28,1845.8325 1413.57,1849.6425 1459.47,1852.995 " fill="none" id="moveselection.MinimaxMoveEvaluator&lt;-moveselection.SearchSummaries" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1297.7025,1841.205,1301.9732,1844.5233,1306.6788,1841.8575,1302.4081,1838.5391,1297.7025,1841.205" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[297166a5d968d22f1dcec234597f397f]
reverse link gameboard.Move to gameboard.BoardSpace--><path d="M1014.9375,650.0775 C1132.9125,648.06 1332.915,644.625 1469.865,642.2775 " fill="none" id="gameboard.Move&lt;-gameboard.BoardSpace" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1005.1875,650.25,1009.7396,653.1703,1014.1861,650.0916,1009.634,647.1713,1005.1875,650.25" style="stroke: #A80036; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="9.75" lengthAdjust="spacingAndGlyphs" textLength="6" x="1011.0372" y="659.5577">2</text><!--MD5=[c5593956ab3f3e2646889844132a2b53]
reverse link gameboard.MoveCalculator to gameboard.PieceMoves--><path d="M1787.9775,262.275 C1842.885,267.0675 1903.5825,272.37 1957.7325,277.1025 " fill="none" id="gameboard.MoveCalculator&lt;-gameboard.PieceMoves" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1778.16,261.4125,1782.3827,264.7917,1787.1261,262.1934,1782.9033,258.8143,1778.16,261.4125" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[15429819c5bdf0060d120cbedbc6b543]
reverse link gameboard.MoveCollection to gameboard.Move--><path d="M411.96,624.5625 C543.4575,631.65 723.1875,641.3475 828.735,647.04 " fill="none" id="gameboard.MoveCollection&lt;-gameboard.Move" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="402.18,624.03,406.512,627.2679,411.167,624.5144,406.835,621.2766,402.18,624.03" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[6d6484b0100c7affe0261d9cf3959e9c]
reverse link moveselection.SearchSummaries to moveselection.SearchSummary--><path d="M1786.7325,1864.5 C1842.33,1864.5 1903.9875,1864.5 1958.8275,1864.5 " fill="none" id="moveselection.SearchSummaries&lt;-moveselection.SearchSummary" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1776.7875,1864.5,1781.2875,1867.5,1785.7875,1864.5,1781.2875,1861.5,1776.7875,1864.5" style="stroke: #A80036; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="9.75" lengthAdjust="spacingAndGlyphs" textLength="6" x="1782.5972" y="1873.7564">2</text><!--MD5=[8549292206bb80c8fa34ca1f6f0482a7]
reverse link moveselection.SearchSummary to moveselection.EqualScoreMoves--><path d="M2285.775,1914.93 C2342.295,1931.9625 2402.8725,1950.21 2449.7625,1964.34 " fill="none" id="moveselection.SearchSummary&lt;-moveselection.EqualScoreMoves" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="2276.3775,1912.1025,2279.8182,1916.2752,2284.9933,1914.7041,2281.5526,1910.5313,2276.3775,1912.1025" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[5c7cc95bd7462dd6ec4ddc1d350179fa]
reverse link moveselection.SearchSummary to moveselection.ResultDepthCounts--><path d="M2286.195,1864.5 C2315.91,1864.5 2346.7425,1864.5 2376.0975,1864.5 " fill="none" id="moveselection.SearchSummary&lt;-moveselection.ResultDepthCounts" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="2276.3775,1864.5,2280.8775,1867.5,2285.3775,1864.5,2280.8775,1861.5,2276.3775,1864.5" style="stroke: #A80036; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="9.75" lengthAdjust="spacingAndGlyphs" textLength="6" x="2282.1905" y="1873.7493">2</text><!--MD5=[b826f3bebaa03f726a878997012df63c]
reverse link boardstate.TranspositionTable to boardstate.TranspositionTableEntry--><path d="M2306.4,2982.75 C2318.0625,2982.75 2329.8075,2982.75 2341.4775,2982.75 " fill="none" id="boardstate.TranspositionTable&lt;-boardstate.TranspositionTableEntry" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="2296.6275,2982.75,2301.1275,2985.75,2305.6275,2982.75,2301.1275,2979.75,2296.6275,2982.75" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[3f93b8a3b23f1084dcea88e62edfba63]
reverse link boardstate.TranspositionTablePruner to boardstate.TranspositionTable--><path d="M1822.59,2959.26 C1861.08,2962.335 1901.055,2965.5225 1938.6825,2968.53 " fill="none" id="boardstate.TranspositionTablePruner&lt;-boardstate.TranspositionTable" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1812.84,2958.48,1817.0885,2961.8267,1821.8118,2959.1922,1817.5633,2955.8455,1812.84,2958.48" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[cf20b8a7f1013bf30fa372d923059994]
reverse link boardstate.TranspositionTablePruner to boardstate.TranspositionTableGuard--><path d="M1822.485,2898.54 C1882.8075,2885.3625 1946.805,2871.39 1999.665,2859.8475 " fill="none" id="boardstate.TranspositionTablePruner&lt;-boardstate.TranspositionTableGuard" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1812.84,2900.64,1817.8761,2902.6116,1821.6331,2898.7212,1816.5969,2896.7496,1812.84,2900.64" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[f54d3e1460513586cd365a66072871d8]
reverse link moveselection.TranspositionTableSearchResult to moveselection.MinimaxCalcResult--><path d="M1772.07,2142.75 C1836.36,2142.75 1910.7075,2142.75 1973.865,2142.75 " fill="none" id="moveselection.TranspositionTableSearchResult&lt;-moveselection.MinimaxCalcResult" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1762.2525,2142.75,1766.7525,2145.75,1771.2525,2142.75,1766.7525,2139.75,1762.2525,2142.75" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[b16d85e60584e8dad79c6dbe2fe57ce9]
reverse link boardstate.ZobristComponent to boardstate.ZobristCalculator--><path d="M1806.5175,2668.185 C1856.5875,2666.3025 1910.19,2664.285 1958.5125,2662.4625 " fill="none" id="boardstate.ZobristComponent&lt;-boardstate.ZobristCalculator" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1796.5575,2668.56,1801.1664,2671.3899,1805.5512,2668.224,1800.9424,2665.3941,1796.5575,2668.56" style="stroke: #A80036; stroke-width: 0.75;"/><text fill="#000000" font-family="sans-serif" font-size="9.75" lengthAdjust="spacingAndGlyphs" textLength="6" x="1802.5108" y="2677.5754">2</text><!--MD5=[a9e8f63de8a64a15dbc36eb2601d54e4]
reverse link boardstate.ZobristCoordinator to boardstate.TranspositionTable--><path d="M1105.455,2986.77 C1178.7675,3005.0775 1263.93,3023.22 1342.5,3032.25 C1585.8975,3060.2325 1650.21,3058.9425 1893.75,3032.25 C1908.4425,3030.6375 1923.585,3028.4475 1938.7275,3025.8825 " fill="none" id="boardstate.ZobristCoordinator&lt;-boardstate.TranspositionTable" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1095.885,2984.3625,1099.5177,2988.3692,1104.6134,2986.5569,1100.9807,2982.5503,1095.885,2984.3625" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[2e33c63a71bee7295c13029873c791cb]
reverse link boardstate.ZobristCoordinator to boardstate.TranspositionTableGuard--><path d="M1105.395,2891.88 C1178.9625,2877.3975 1264.32,2862.7125 1342.5,2854.5 C1574.5575,2830.11 1847.7525,2829.48 1999.74,2831.6025 " fill="none" id="boardstate.ZobristCoordinator&lt;-boardstate.TranspositionTableGuard" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1095.795,2893.785,1100.7906,2895.8572,1104.6248,2892.0428,1099.6292,2889.9706,1095.795,2893.785" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[b681c9fb39ba73f882cccb4aaac53641]
reverse link boardstate.ZobristCoordinator to boardstate.TranspositionTablePruner--><path d="M1105.83,2935.875 C1204.0725,2937.24 1324.11,2938.9125 1423.2075,2940.2925 " fill="none" id="boardstate.ZobristCoordinator&lt;-boardstate.TranspositionTablePruner" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1095.7875,2935.7325,1100.2442,2938.7965,1104.7866,2935.8611,1100.3299,2932.7971,1095.7875,2935.7325" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[7e125546a69ea6c9f1c3539c2516b3a7]
reverse link boardstate.ZobristCoordinator to boardstate.ZobristComponent--><path d="M1105.125,2864.115 C1209.045,2825.805 1337.52,2778.435 1439.8125,2740.7175 " fill="none" id="boardstate.ZobristCoordinator&lt;-boardstate.ZobristComponent" style="stroke: #A80036; stroke-width: 0.75;"/><polygon fill="#A80036" points="1095.7875,2867.565,1101.0476,2868.8224,1104.2314,2864.4504,1098.9713,2863.1931,1095.7875,2867.565" style="stroke: #A80036; stroke-width: 0.75;"/><!--MD5=[76d22da3c09c73ebdbbd657360ed8799]
@startuml
skinparam dpi 300
skinparam packageStyle rect
skinparam wrapWidth 400
left to right direction
scale 0.75






class BoardStateCoordinator <template<typename ConcreteBoardStateCoordinator, typename KeyType>> {
	+GetState() : ZobristKey_t
	+GetTrData(DepthType search_depth, MoveCountType access_index) : moveselection::TranspositionTableSearchResult
	+GetTrTableSize() : size_t
	+FullBoardStateCalc(const BoardMap_t& board_map) : void
	+RecordTrData(DepthType search_depth, moveselection::MinimaxResultType result_type, moveselection::EqualScoreMoves& similar_moves, MoveCountType access_index) : void
	+UpdateBoardState(const ExecutedMove& move) : void
	+UpdateMoveCounter() : void
}


class JsonUtility <template<typename ConcreteJsonUtility>> {
	+Export(T& object, const string file_path) : void
	+Export(piecepoints::BPOPointsSKeys& bpo_points, const string file_path) : void
	+Import(T& object, const string file_path) : void
	+Import(piecepoints::BPOPointsSKeys& bpo_points, const string file_path) : void
}


class MoveEvaluator <template<typename ConcreteMoveEvaluator>> {
	+SelectMove(MoveCollection& allowed_moves) : gameboard::Move
}


class PieceValueProvider <template<typename ConcretePieceValueProvider>> {
	+GetValueOfPieceAtPosition(PieceColor color, PieceType piece_type, BoardSpace space) : Points_t
}


class SpaceInfoProvider <template<typename ConcreteSpaceInfoProvider>> {
	+ExecuteMove(const Move& move) : ExecutedMove
	+CalcFinalMovesOf(PieceColor color) : MoveCollection
	+GetColor(const BoardSpace& space) : PieceColor
	+GetType(const BoardSpace& space) : PieceType
	+IsDraw() : bool
	+GetAllSpacesOccupiedBy(PieceColor color) : vector<BoardSpace>
	+AttachMoveCallback(function<void ( const ExecutedMove& )> callback) : void
	+UndoMove(const ExecutedMove& executed_move) : void
}


namespace piecepoints {
	class BPOPointsEKeys {
		+BPOPointsEKeys(TeamBasePoints_t black_base_input, TeamBasePoints_t red_base_offsets_input, TeamPointsEMap_t black_position_input, TeamPointsEMap_t red_position_offsets_input)
		+BPOPointsEKeys(BPOPointsSKeys external_spec)
		+ToGamePointsArray() : GamePointsArray_t
		+black_base_ : TeamBasePoints_t
		+red_base_offsets_ : TeamBasePoints_t
		+BlackNetPoints() : TeamPointsArray_t
		+RedNetPoints() : TeamPointsArray_t
		+black_position_ : TeamPointsEMap_t
		+red_position_offsets_ : TeamPointsEMap_t
	}

	class BPOPointsSKeys {
		+BPOPointsSKeys()
		+BPOPointsSKeys(BasePointsSMap_t black_base_input, BasePointsSMap_t red_base_offsets_input, TeamPointsSMap_t black_position_input, TeamPointsSMap_t red_position_offsets_input)
		+BPOPointsSKeys(const string& json_file_path)
		+ToBPOPointsEKeys() : BPOPointsEKeys
		+black_base_ : BasePointsSMap_t
		+red_base_offsets_ : BasePointsSMap_t
		+ToGamePointsArray() : GamePointsArray_t
		+ToGamePointsSmap() : GamePointsSMap_t
		+black_position_ : TeamPointsSMap_t
		+red_position_offsets_ : TeamPointsSMap_t
		-json_utility_ : unique_ptr<JsonUtility<jsonio::NlohmannJsonUtility>>
		+ToFile(string output_path) : void
	}

	class PiecePositionPoints {
		+PiecePositionPoints()
		+PiecePositionPoints(GamePointsArray_t game_points_array)
		+PiecePositionPoints(BPOPointsEKeys& bpo_points_ekeys)
		+PiecePositionPoints(BPOPointsSKeys& bpo_points_skeys)
		+PiecePositionPoints(string json_file)
		+points_array : GamePointsArray_t
		+PointsArraytoEMap() : GamePointsEMap_t
		+PointsArrayToSmap() : GamePointsSMap_t
		+ImplementGetValueOfPieceAtPosition(PieceColor color, PieceType piece_type, BoardSpace space) : Points_t
		+{static} TeamPointsArrayToEMap(TeamPointsArray_t team_array) : TeamPointsEMap_t
	}
}


namespace moveselection {
	class EqualScoreMoves {
		+move_collection() : MoveCollection
		+move_collection_ : MoveCollection
		+shared_score : Points_t
	}

	class MinimaxCalcResult {
		+MinimaxCalcResult()
		+MinimaxCalcResult(DepthType depth, MinimaxResultType type, EqualScoreMoves moves)
		+remaining_search_depth() : DepthType
		-remaining_search_depth_ : DepthType
		+equal_score_moves() : EqualScoreMoves
		-equal_score_moves_ : EqualScoreMoves
		-result_type_ : MinimaxResultType
		+moves() : MoveCollection
		+Score() : Points_t
		+result_type() : int
	}

	class MinimaxMoveEvaluator <template<typename ConcreteSpaceInfoProvider, typename ConcreteBoardStateCoordinator, typename ConcretePieceValueProvider>> {
		+MinimaxMoveEvaluator(PieceColor evaluating_player, DepthType starting_search_depth, ConcreteSpaceInfoProvider& game_board, uint32_t zkey_seed, const ConcretePieceValueProvider& game_position_points)
		-hash_calculator_ : ConcreteBoardStateCoordinator
		+hash_calculator() : ConcreteBoardStateCoordinator& {query}
		-game_position_points_ : ConcretePieceValueProvider
		-game_board_ : ConcreteSpaceInfoProvider&
		+starting_search_depth() : DepthType
		-starting_search_depth_ : DepthType
		-EvaluateEndOfGameLeaf(PieceColor cur_player, MinimaxResultType& result_type) : EqualScoreMoves
		-EvaluateNonWinLeaf(PieceColor cur_player, MinimaxResultType& result_type) : EqualScoreMoves
		-FinalizeNodeResult(MinimaxResultType& result_type, Points_t best_eval, MoveCollection best_moves, DepthType remaining_search_depth, SearchSummary& search_summary) : EqualScoreMoves
		-HandleEndOfGame(PieceColor cur_player, SearchSummary& search_summary, MinimaxResultType& result_type, DepthType remaining_search_depth) : EqualScoreMoves
		-HandleInternalNode(PieceColor cur_player, const MoveCollection& allowed_moves, DepthType& remaining_search_depth, Points_t& alpha, Points_t& beta, MinimaxResultType result_type, SearchSummary& search_summary, bool use_transposition_table) : EqualScoreMoves
		-HandleLeaf(PieceColor cur_player, SearchSummary& search_summary, MinimaxResultType& result_type, DepthType remaining_search_depth) : EqualScoreMoves
		-HandleTrTableHit(SearchSummary& search_summary, MinimaxResultType& result_type, TranspositionTableSearchResult& tr_table_search_result, DepthType remaining_search_depth) : EqualScoreMoves
		-MinimaxRec(const MoveCollection& allowed_moves, DepthType remaining_search_depth, Points_t alpha, Points_t beta, PieceColor cur_player, SearchSummary& search_summary, bool use_transposition_table) : EqualScoreMoves
		-RunTimedMinimax(const MoveCollection& allowed_moves, SearchSummary& search_summary, bool use_transposition_table) : EqualScoreMoves
		+ImplementSelectMove(MoveCollection& allowed_moves) : Move
		-SelectValidMove(const MoveCollection& allowed_moves) : Move
		-num_move_selections_ : MoveCountType
		-evaluating_player_ : PieceColor
		-GetPlayerTotal(PieceColor color) : Points_t
		-InitializedBestEval(PieceColor cur_player) : Points_t
		-RecursivelyVisitNodes(Move move, PieceColor cur_player, const MoveCollection& allowed_moves, DepthType remaining_search_depth, Points_t alpha, Points_t beta, SearchSummary& search_summary, bool use_transposition_table) : Points_t
		-move_sorter_ : PreSearchMoveSorter<ConcreteSpaceInfoProvider, ConcretePieceValueProvider>
		-RunFirstSearch(const MoveCollection& allowed_moves) : SearchSummary&
		-RunSecondSearch(const MoveCollection& allowed_moves) : SearchSummary&
		-IsImprovement(Points_t cur_eval, Points_t previous_best_eval, PieceColor cur_player) : bool
		-IsPrunable(Points_t& alpha, Points_t& beta, MinimaxResultType& result_type, PieceColor cur_player) : bool
		-search_summaries_ : moveselection::SearchSummaries
		+search_summaries() : moveselection::SearchSummaries&
		+KeySizeBits() : size_t
		-game_over_ : std::atomic<bool>
		+board_state_hex_str() : std::string
		+zkeys_seed() : uint32_t
		-GetMinimaxMoveAndStats(const MoveCollection& allowed_moves, SearchSummary& search_summary, bool use_transposition_table) : void
		-IncrementNumMoveSelections() : void
		-UpdateBestMoves(PieceColor cur_player, Move move, MoveCollection& best_moves, Points_t cur_eval, Points_t& previous_best_eval) : void
		-UpdatePruningParam(Points_t& alpha, Points_t& beta, Points_t cur_eval, PieceColor cur_player) : void
		-initialize_hash_calculator() : void
	}

	class PreSearchMoveSorter <template<typename ConcreteSpaceInfoProvider, typename ConcretePieceValueProvider>> {
		+PreSearchMoveSorter(ConcreteSpaceInfoProvider& game_board, ConcretePieceValueProvider& game_position_points)
		-game_position_points_ : ConcretePieceValueProvider&
		-game_board_ : ConcreteSpaceInfoProvider&
		+RateMove(Move move, PieceColor cur_player) : ScoredMove
		+GenerateRankedMoveList(PieceColor cur_player, const MoveCollection& cur_player_moves) : std::vector<ScoredMove>
	}

	class RandomMoveEvaluator <template<typename ConcreteSpaceInfoProvider>> {
		+RandomMoveEvaluator(PieceColor evaluating_player, ConcreteSpaceInfoProvider& game_board)
		-game_board_ : ConcreteSpaceInfoProvider&
		+ImplementSelectMove(MoveCollection& allowed_moves) : Move
		-evaluating_player_ : PieceColor
	}

	class ResultDepthCounts {
		+ResultDepthCounts(DepthType max_search_depth)
		+data() : ResultDepthCountsData_t
		-data_ : moveselection::ResultDepthCountsData_t
		+IncrementDataAt(MinimaxResultType result_type, DepthType search_depth) : void
	}

	class SearchSummary {
		+SearchSummary(DepthType max_search_depth, size_t tr_table_size_initial)
		+equal_score_moves() : EqualScoreMoves
		-equal_score_moves_ : EqualScoreMoves
		+selected_move() : Move
		-selected_move_ : Move
		-result_depth_counts_ : ResultDepthCounts
		-transposition_table_hits_ : ResultDepthCounts
		+GetResultDepthCounts() : ResultDepthCountsData_t
		+GetTranspositionTableHits() : ResultDepthCountsData_t
		+returned_illegal_move() : bool
		-returned_illegal_move_ : bool
		+num_collisions() : size_t
		-num_collisions_ : size_t
		+num_nodes() : size_t
		-num_nodes_ : size_t
		+tr_table_size_final() : size_t
		-tr_table_size_final_ : size_t
		+tr_table_size_initial() : size_t
		-tr_table_size_initial_ : size_t
		+time() : std::chrono::duration<double , std::nano>
		-time_ : std::chrono::duration<double, std::nano>
		+RecordNodeInfo(MinimaxResultType result_type, DepthType search_depth, const EqualScoreMoves& equal_score_moves) : void
		+RecordTrTableHit(TranspositionTableSearchResult& tr_table_search_result, DepthType remaining_search_depth) : void
		+SetSelectedMove(Move selected_move) : void
		+UpdateTranspositionTableHits(MinimaxResultType result_type, DepthType search_depth) : void
		+set_equal_score_moves(EqualScoreMoves equal_score_moves) : void
		+set_returned_illegal_move(bool status) : void
		+set_time(std::chrono::duration<double, std::nano> search_time) : void
		+set_tr_table_size_final(size_t tr_table_size_final) : void
	}

	class TranspositionTableSearchResult {
		+score_and_moves() : EqualScoreMoves
		+minimax_calc_result() : MinimaxCalcResult
		-minimax_calc_result_ : MinimaxCalcResult
		+moves() : MoveCollection
		+IsConsistentWith(const MoveCollection& allowed_moves) : bool
		+found() : bool
		-found_ : bool
		+known_collision() : bool
		-known_collision_ : bool
		+result_type() : int
		+set_found(bool status) : void
		+set_known_collision(bool status) : void
		+set_minimax_calc_result(MinimaxCalcResult result) : void
	}

	enum MinimaxResultType {
		kAlphaPrune
		kBetaPrune
		kDraw
		kEvaluatorLoses
		kEvaluatorWins
		kFullyEvaluatedNode
		kMax
		kMin
		kStandardLeaf
		kTrTableHit
		kUnknown
	}

	class ScoredMove {
		+move : Move
		+score : Points_t
	}

	class SearchSummaries {
		+NewExtraSearch(DepthType search_depth, MoveCountType search_number, size_t tr_table_size_current) : SearchSummary&
		+NewFirstSearch(DepthType search_depth, size_t tr_table_size_initial) : SearchSummary&
		+extra_searches : std::map<MoveCountType, SearchSummary>
		+first_searches : std::vector<SearchSummary>
	}
}


namespace jsonio {
	class NlohmannJsonUtility {
		-ImportToSerializedJson(const std::string file_path) : nlohmann::json
		-Serialize(piecepoints::BPOPointsSKeys& bpo_points) : nlohmann::json
		-Deserialize(nlohmann::json serialized_json, piecepoints::BPOPointsSKeys& bpo_points) : void
		-ExportSerializedJson(nlohmann::json serialized_json, const std::string file_path) : void
		+ImplementExport(T& object, const std::string file_path) : void
		+ImplementExport(piecepoints::BPOPointsSKeys& bpo_points, const std::string file_path) : void
		+ImplementImport(T& object, const std::string file_path) : void
		+ImplementImport(piecepoints::BPOPointsSKeys& bpo_points, const std::string file_path) : void
	}
}


namespace gameboard {
	class GameBoard {
		+GameBoard()
		+GameBoard(const BoardMapInt_t starting_board)
		-vector<function<void(const ExecutedMove &)
		-board_map_ : BoardMap_t
		+map() : BoardMap_t& {query}
		+ImplementExecuteMove(const Move& move) : ExecutedMove
		+GetOccupantAt(const BoardSpace& space) : GamePiece {query}
		-move_calculator_ : MoveCalculator
		+ImplementCalcFinalMovesOf(PieceColor color) : MoveCollection
		-moves_since_last_capture_ : MoveCountType
		+ImplementGetColor(const BoardSpace& space) : PieceColor {query}
		+ImplementGetType(const BoardSpace& space) : PieceType {query}
		+ImplementIsDraw() : bool
		+IsCaptureMove(const ExecutedMove& executed_move) : bool {query}
		+IsInCheck(PieceColor color) : bool
		-ViolatesRepeatRule(PieceColor color) : bool
		+move_log() : std::map<PieceColor , vector<ExecutedMove>>& {query}
		-move_log_ : std::map<PieceColor, vector<ExecutedMove>>
		+ImplementGetAllSpacesOccupiedBy(PieceColor color) : vector<BoardSpace> {query}
		-AddToMoveLog(const ExecutedMove& executed_move) : void
		+ImplementAttachMoveCallback(const function<void ( const ExecutedMove& )>& callback) : void
		+ImplementUndoMove(const ExecutedMove& executed_move) : void
		-RemoveFromMoveLog(const ExecutedMove& executed_move) : void
		-SetOccupantAt(const BoardSpace& space, GamePiece piece) : void
		-UpdateStateTracker(const ExecutedMove& executed_move) : void
	}

	class MoveCalculator {
		+MoveCalculator()
		+CalcAllMovesNoCheckTest(PieceColor color, const BoardMap_t& board_map) : MoveCollection
		-ImplementCalcAllMovesNoCheckTest(PieceColor color, const BoardMap_t& board_map) : MoveCollection
		-piece_dispatch_array_ : PieceDispatchArray_t
		-piece_moves_ : PieceMoves
		+IsOccupied(const BoardMap_t& board_map, const BoardSpace& space) : bool
		+CalcMovesFrom(const BoardSpace space, MoveCollection& team_moves, const BoardMap_t& board_map) : void
		-ImplementCalcMovesFrom(const BoardSpace space, MoveCollection& team_moves, const BoardMap_t& board_map) : void
	}

	class PieceMoves {
		-{static} FwdDirection(PieceColor color) : BoardDirection
		-{static} ExistsAndPassesColorTest(const BoardMap_t& board_map, const BoardSpace& space, PieceColor moving_piece_color) : bool
		+AdvisorMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+CannonMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+ChariotMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+ElephantMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+FlyingGeneralMove(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+GeneralMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+HorseMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+SoldierMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
		+StandardGeneralMoves(const BoardMap_t& board_map, PieceColor color, const BoardSpace& space, MoveCollection& team_moves) : void
	}

	enum PieceColor {
		kBlk
		kNul
		kRed
	}

	enum PieceType {
		kAdv
		kCan
		kCha
		kEle
		kGen
		kHor
		kNnn
		kSol
	}

	class BoardDirection {
		+file : BoardIdx_t
		+rank : BoardIdx_t
	}

	class BoardSpace {
		+file : BoardIdx_t
		+rank : BoardIdx_t
		+operator+(const BoardDirection direction) : BoardSpace {query}
		+IsInCastleOf(const PieceColor color) : bool {query}
		+IsInHomelandOf(const PieceColor color) : bool {query}
		+IsOnBoard() : bool {query}
		+operator!=(const BoardSpace other) : bool {query}
		+operator==(const BoardSpace other) : bool {query}
	}

	class CastleEdges {
		+max_file : BoardIdx_t
		+max_rank : BoardIdx_t
		+min_file : BoardIdx_t
		+min_rank : BoardIdx_t
	}

	class ExecutedMove {
		+spaces : Move
		+moves_since_last_capture : MoveCountType
		+operator==(const ExecutedMove other) : bool
		+destination_piece : gameboard::GamePiece
		+moving_piece : gameboard::GamePiece
	}

	class GamePiece {
		+GamePiece()
		+GamePiece(int int_piece)
		+GamePiece(PieceType type, PieceColor color)
		+piece_color : PieceColor
		+piece_type : PieceType
		+operator==(const GamePiece& other) : bool {query}
	}

	class Move {
		+operator==(const Move other) : bool
		+end : gameboard::BoardSpace
		+start : gameboard::BoardSpace
	}

	class MoveCollection {
		+MoveCollection()
		+MoveCollection(vector<Move> my_moves)
		+MoveCollection(size_t reserve_size)
		+SelectRandom() : Move
		+ContainsAnyMoveNotIn(const MoveCollection& other) : bool {query}
		+ContainsDestination(const gameboard::BoardSpace& space) : bool
		+ContainsMove(const Move& move) : bool {query}
		+IsEmpty() : bool {query}
		+Size() : size_t {query}
		+moves : vector<Move>
		+Append(Move move) : void
		+Concat(vector<Move> other_moves) : void
		+Concat(MoveCollection other) : void
	}
}


namespace boardstate {
	class PseudoRandomKeyGenerator <template<typename IntType>> {
		+PseudoRandomKeyGenerator()
		+PseudoRandomKeyGenerator(uint32_t seed)
		+GenerateKey() : IntType
		-prng_ : std::mt19937
		+seed() : std::random_device::result_type
		-seed_ : std::random_device::result_type
	}

	class RandomKeyGenerator <template<typename IntType>> {
		+GenerateKey() : IntType
		-rd_ : std::random_device
	}

	class TranspositionTable <template<typename KeyType, size_t NumConfKeys>> {
		+NumIdleMovesAt(KeyType board_state) : MoveCountType
		-NumMovesSinceLastUseOf(const TranspositionTableEntry<KeyType, NumConfKeys>& tr_table_entry) : MoveCountType
		-move_counter_ : MoveCountType
		+GetDataAt(KeyType primary_board_state, DepthType remaining_search_depth, std::array<KeyType, NumConfKeys> expected_keys) : moveselection::TranspositionTableSearchResult
		+size() : size_t
		-data_ : std::unordered_map<KeyType, TranspositionTableEntry<KeyType, NumConfKeys>>
		+IncrementMoveCounter() : void
		+RecordData(KeyType primary_board_state, DepthType search_depth, moveselection::MinimaxResultType result_type, moveselection::EqualScoreMoves& similar_moves, const std::array<KeyType, NumConfKeys>& confirmation_keys) : void
	}

	class TranspositionTableEntry <template<typename KeyType, size_t NumConfKeys>> {
		+TranspositionTableEntry(moveselection::MinimaxCalcResult minimax_calc_result, std::array<KeyType, NumConfKeys> confirmation_keys, MoveCountType last_access_index)
		+remaining_search_depth() : DepthType
		+last_access_index() : MoveCountType
		-last_access_index_ : MoveCountType
		+ConfirmationKeysMatchExpected(std::array<KeyType, NumConfKeys> expected_keys) : bool
		+minimax_calc_result() : moveselection::MinimaxCalcResult
		-minimax_calc_result_ : moveselection::MinimaxCalcResult
		+confirmation_keys() : std::array<KeyType , NumConfKeys>
		-confirmation_keys_ : std::array<KeyType, NumConfKeys>
		+set_last_access_index(MoveCountType last_access_index) : void
	}

	class TranspositionTableGuard {
		+TranspositionTableGuard()
		-tr_table_mutex_ : mutable std::mutex
		+GetExclusiveLock() : std::unique_lock<std::mutex>
	}

	class TranspositionTablePruner <template<typename KeyType, size_t NumConfKeys>> {
		+TranspositionTablePruner(TranspositionTable<KeyType, NumConfKeys>& tr_table, TranspositionTableGuard& tr_table_guard)
		+~TranspositionTablePruner()
		-tr_table_ : TranspositionTable<KeyType, NumConfKeys>&
		-tr_table_guard_ : TranspositionTableGuard&
		-keep_running_ : std::atomic<bool>
		-pruning_thread_ : std::thread
		-RepeatedlyPrune() : void
		+Start() : void
		+Stop() : void
		-ThreadSafePruneEntry() : void
		-UnsafePruneEntry() : void
	}

	class ZobristCalculator <template<typename KeyType>> {
		+ZobristCalculator(uint32_t seed)
		-{static} CreateGameZarray(PseudoRandomKeyGenerator<KeyType>& key_generator) : GameZarray_t
		+zarray() : GameZarray_t {query}
		+GetHashValueAt(PieceColor color, PieceType piece_type, BoardSpace space) : KeyType
		+board_state() : KeyType {query}
		-board_state_ : KeyType
		+turn_key() : KeyType {query}
		-turn_key_ : KeyType
		-zarray_ : array<TeamZarray_t, 2>
		+seed() : uint32_t {query}
		-seed_ : uint32_t
		-FullBoardStateCalInternal(const gameboard::BoardMap_t& board_map) : void
		+FullBoardStateCalc(const gameboard::BoardMap_t& board_map) : void
		+UpdateBoardState(const gameboard::ExecutedMove& executed_move) : void
		-UpdateBoardStateInternal(const gameboard::ExecutedMove& executed_move) : void
	}

	class ZobristComponent <template<typename KeyType, size_t NumConfKeys>> {
		-ZobristComponent(std::mt19937 prng)
		+ZobristComponent(const ZobristCalculator<KeyType> primary_calculator, const std::array<ZobristCalculator<KeyType>, NumConfKeys>& confirmation_calculators)
		+ZobristComponent(uint32_t prng_seed)
		+primary_board_state() : KeyType
		+primary_calculator_seed() : KeyType
		-primary_calculator_ : ZobristCalculator<KeyType>
		+confirmation_board_states() : std::array<KeyType , NumConfKeys>
		-confirmation_board_states_internal() : std::array<KeyType , NumConfKeys>
		-confirmation_calculators_ : std::array<ZobristCalculator<KeyType>, NumConfKeys>
		+confirmation_calculator_seeds() : std::array<uint32_t , NumConfKeys> {query}
		-confirmation_calculator_seeds_internal() : std::array<uint32_t , NumConfKeys> {query}
		-prng_seed_ : std::optional<uint32_t>
		+primary_board_state_hex_str() : std::string {query}
		+prng_seed() : uint32_t
		+FullBoardStateCalc(const BoardMap_t& board_map) : void
		-FullBoardStateCalcInternal(const BoardMap_t& board_map) : void
		+UpdateBoardStates(const ExecutedMove& executed_move) : void
		-UpdateBoardStatesInternal(const ExecutedMove& executed_move) : void
	}

	class ZobristCoordinator <template<typename KeyType, size_t NumConfKeys>> {
		+ZobristCoordinator(ZobristComponent<KeyType, NumConfKeys> zobrist_component)
		+ZobristCoordinator(uint32_t primary_seed, std::array<uint32_t, NumConfKeys> confirmation_seeds)
		+ZobristCoordinator(uint32_t prng_seed)
		+ImplementGetState() : KeyType
		-tr_table_ : TranspositionTable<KeyType, NumConfKeys>
		-tr_table_guard_ : TranspositionTableGuard
		-tr_table_pruner_ : TranspositionTablePruner<KeyType, NumConfKeys>
		-zobrist_component_ : ZobristComponent<KeyType, NumConfKeys>
		+ImplementGetTrData(DepthType search_depth, MoveCountType access_index) : moveselection::TranspositionTableSearchResult
		+ImplementGetTrTableSize() : size_t
		+board_state_hex_str() : std::string
		+zkeys_seed() : uint32_t
		+ImplementFullBoardStateCalc(const BoardMap_t& board_map) : void
		+ImplementRecordTrData(DepthType search_depth, moveselection::MinimaxResultType result_type, moveselection::EqualScoreMoves& similar_moves, MoveCountType access_index) : void
		+ImplementUpdateBoardState(const ExecutedMove& executed_move) : void
		+ImplementUpdateMoveCounter() : void
	}
}






BoardStateCoordinator <|- - boardstate.ZobristCoordinator


JsonUtility <|- - jsonio.NlohmannJsonUtility


MoveEvaluator <|- - moveselection.MinimaxMoveEvaluator


MoveEvaluator <|- - moveselection.RandomMoveEvaluator


PieceValueProvider <|- - piecepoints.PiecePositionPoints


SpaceInfoProvider <|- - gameboard.GameBoard






gameboard.ExecutedMove "2" *- - gameboard.GamePiece


gameboard.ExecutedMove *- - gameboard.Move


gameboard.GameBoard *- - gameboard.MoveCalculator


gameboard.GameBoard *- - gameboard.PieceColor


gameboard.GamePiece *- - gameboard.PieceColor


gameboard.GamePiece *- - gameboard.PieceType


moveselection.MinimaxCalcResult *- - moveselection.EqualScoreMoves


moveselection.MinimaxCalcResult *- - moveselection.MinimaxResultType


moveselection.MinimaxMoveEvaluator *- - moveselection.PreSearchMoveSorter


moveselection.MinimaxMoveEvaluator *- - moveselection.SearchSummaries


gameboard.Move "2" *- - gameboard.BoardSpace


gameboard.MoveCalculator *- - gameboard.PieceMoves


gameboard.MoveCollection *- - gameboard.Move


moveselection.SearchSummaries "2" *- - moveselection.SearchSummary


moveselection.SearchSummary *- - moveselection.EqualScoreMoves


moveselection.SearchSummary "2" *- - moveselection.ResultDepthCounts


boardstate.TranspositionTable *- - boardstate.TranspositionTableEntry


boardstate.TranspositionTablePruner *- - boardstate.TranspositionTable


boardstate.TranspositionTablePruner *- - boardstate.TranspositionTableGuard


moveselection.TranspositionTableSearchResult *- - moveselection.MinimaxCalcResult


boardstate.ZobristComponent "2" *- - boardstate.ZobristCalculator


boardstate.ZobristCoordinator *- - boardstate.TranspositionTable


boardstate.ZobristCoordinator *- - boardstate.TranspositionTableGuard


boardstate.ZobristCoordinator *- - boardstate.TranspositionTablePruner


boardstate.ZobristCoordinator *- - boardstate.ZobristComponent









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 UTC 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 17.0.12+7-Debian-2deb12u1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>