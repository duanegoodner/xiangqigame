digraph "piecepoints::PiecePositionPoints"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{piecepoints::PiecePosition\lPoints\n||+ PiecePositionPoints()\l+ PiecePositionPoints()\l+ PiecePositionPoints()\l+ PiecePositionPoints()\l+ PiecePositionPoints()\l+ ImplementGetValueOfPiece\lAtPosition()\l+ PointsArraytoEMap()\l+ PointsArrayToSmap()\l+ TeamPointsArrayToEMap()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Holds a piecepoints::GamePointsArray_t of points values, and exposes a method for accessing element c..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{PieceValueProvider\l\< PiecePositionPoints \>\n||+ GetValueOfPieceAtPosition()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classPieceValueProvider.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="orange",fontsize="10",style="solid",label=" \< PiecePositionPoints \>" ,fontname="Helvetica"];
  Node3 [label="{PieceValueProvider\l\< ConcretePieceValueProvider \>\n||+ GetValueOfPieceAtPosition()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classPieceValueProvider.html",tooltip="CRTP interface with method to retrieve points value for a specific gameboard::GamePiece at a specific..."];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +points_array" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{array\< TeamPointsArray\l_t, 2 \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
